"use strict";
(() => {
  // ../common/strings_en.ts
  var EN_STRINGS = [
    {
      key: `PAGE_TITLE`,
      description: `Web page title for all pages`,
      text: `Project Euphonia`
    },
    {
      key: `HELP_LINK`,
      description: `Help hyperlink HREF property when the user needs help or has questions.`,
      text: `http://g.co/disabilitysupport`
    },
    {
      key: `WELCOME_TITLE`,
      description: `Signup screen and consent screen titles`,
      text: `Welcome to Project Euphonia!`
    },
    {
      key: `We're exploring how Google products and services
          that use speech as an input method could work better for more people. We're seeking
          voice contributions from adults who have difficulty being understood by others.
          Voice samples can help us improve how Google understands individuals with speech
          impairments.`,
      description: `Signup screen`,
      text: `We're exploring how Google products and services
          that use speech as an input method could work better for more people. We're seeking
          voice contributions from adults who have difficulty being understood by others.
          Voice samples can help us improve how Google understands individuals with speech
          impairments.`
    },
    {
      key: `<b>IMPORTANT:</b> If you're filling out
          this form on behalf of someone else, please ensure you have their permission
          to do so.`,
      description: `Signup screen`,
      text: `<b>IMPORTANT:</b> If you're filling out
          this form on behalf of someone else, please ensure you have their permission
          to do so.`
    },
    {
      key: `Questions? <a id=signuphelplink target="_blank">Contact Us</a>`,
      description: `Signup screen`,
      text: `Questions? <a id=signuphelplink target="_blank">Contact Us</a>`
    },
    {
      key: `Already enrolled? &nbsp;`,
      description: `Signup screen`,
      text: `Already enrolled? &nbsp;`
    },
    {
      key: `Click to sign in and continue recording`,
      description: `Signup screen`,
      text: `Click to sign in and continue recording`
    },
    {
      key: `To get started, please confirm your eligibility:`,
      description: `Signup screen`,
      text: `To get started, please confirm your eligibility:`
    },
    {
      key: `Strangers, or voice technologies like Google Assistant, have difficulty understanding my speech (not because of an accent)`,
      description: `Signup screen eligibility question`,
      text: `Strangers, or voice technologies like Google Assistant, have difficulty understanding my speech (not because of an accent)`
    },
    {
      key: `I am at least 18 years of age`,
      description: `Signup screen eligibility question`,
      text: `I am at least 18 years of age`
    },
    {
      key: `Sign in and continue`,
      description: `Signup screen button`,
      text: `Sign in and continue`
    },
    {
      key: `You will need to sign in with your Google
         Account to contribute to the project. If you do not have a Google Account, you can
         create one when you click to continue.`,
      description: `Signup screen instructions`,
      text: `You will need to sign in with your Google Account to contribute to the project.
        If you do not have a Google Account, you can create one when you click to continue.`
    },
    {
      key: `Next`,
      description: `Interest form button, advance to the next screen`,
      text: `Next`
    },
    {
      key: `Go Back`,
      description: `Interest form and consent form buttons, go back to the previous screen`,
      text: `Go Back`
    },
    {
      key: `You must type your name to agree to the terms.`,
      description: `Consent form screen, require consent to proceed`,
      text: `You must type your name to agree to the terms.`
    },
    {
      key: `Reset form and start over`,
      description: `Interest form button, clear fields and start over`,
      text: `Reset form and start over`
    },
    {
      key: `You are enrolling as <b id=whoisenrolling>&nbsp;</b>.
          Please review the following agreement: <span id=consentcounter></span>`,
      description: `Consent screen instructions`,
      text: `You are enrolling as
        <b id=whoisenrolling>&nbsp;</b>.
        Please review the following agreement:
        <span id=consentcounter></span>`
    },
    {
      key: `Enroll`,
      description: `Consent screen, final action; consents to the program and allows recording`,
      text: `Enroll`
    },
    {
      key: `Next Agreement`,
      description: `Consent screen, to agree to the current consent and then see the next one. Only shows when there are multiple consents`,
      text: `Next Agreement`
    },
    {
      key: `INSTRUCTIONS_TITLE`,
      en: `Thanks for signing up for Project Euphonia!`,
      description: `Instructions screen title`,
      text: `Thanks for signing up for Project Euphonia!`
    },
    {
      key: `INSTRUCTIONS_VIDEO_HTML`,
      description: `Instructional video iframe from YouTube`,
      text: `
    <iframe width="560" height="315" src="https://www.youtube.com/embed/sMLED9xrLts"
        title="YouTube video player" frameborder="0"
        allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
    `
    },
    {
      key: `INSTRUCTIONS_HTML`,
      en: `    <ul>
      <li>Please take a moment to watch this video introduction.</li>
      <li>On the next screen, you'll see <b>cards</b> to read aloud.</li>
      <li>You'll want to be in a <b>quiet setting</b> and avoid any background noise.</li>
      <li>You'll press the blue Record button, and then <b>read the
      card aloud</b>, as accurately as possible.</li>
      <li>When you are <b>finished speaking</b>, press the blue button again to stop recording.</li>
      <li>When you finish recording all the cards, you're done!</li>
      <li>Having trouble recording? <a target="_blank" href="http://g.co/disabilitysupport">Contact us</a> for help.</li>`,
      description: `Instructions screen details`,
      text: `<ul>
      <li>Please take a moment to watch this video introduction.</li>
      <li>On the next screen, you'll see <b>cards</b> to read aloud.</li>
      <li>You'll want to be in a <b>quiet setting</b> and avoid any background noise.</li>
      <li>You'll press the blue Record button, and then <b>read the card aloud</b>, as accurately as possible.</li>
      <li>When you are <b>finished speaking</b>, press the blue button again to stop recording.</li>
      <li>When you finish recording all the cards, you're done!</li>
      <li>Having trouble recording?
      <a target="_blank" href="http://g.co/disabilitysupport"
      >Contact us</a>
      for help.</li>`
    },
    {
      key: `Get Started`,
      description: `Instructions screen button to continue to next screen`,
      text: `Get Started`
    },
    {
      key: `Microphone Setup`,
      description: `Microphone and settings screen title`,
      text: `Microphone Setup`
    },
    {
      key: `
          In order to record your speech, we need permission to use your microphone
          through your web browser. <b>Please click "Allow"</b> to grant use of your microphone.`,
      description: `Microphone permission instructions`,
      text: `
          In order to record your speech, Euphonia needs permission to use your microphone
          through your web browser.
          <b>Please click "Allow"</b>
          to grant use of your microphone.`
    },
    {
      key: `
          We could not access your microphone due to a permission problem. You'll need to allow access
          in order to continue.`,
      description: `Microphone permission error message`,
      text: `
          Euphonia could not access your microphone due to a permission problem. You'll need to allow access
          in order to continue.`
    },
    {
      key: `
          It looks like your microphone permission is blocked. You'll need to <b>allow access</b>
          by clicking the <b>address bar of your browser</b>, and/or <b>reset permission</b> for the microphone.`,
      description: `Microphone permission error message`,
      text: `
          It looks like your microphone permission is blocked. You'll need to
          <b>allow access</b>
          by clicking the
          <b>address bar of your browser</b>,
          and/or
          <b>reset permission</b>
          for the microphone.`
    },
    {
      key: `
          Your microphone is all set! You can start recording as soon as you're ready.`,
      description: `Microphone permission success message`,
      text: `Your microphone is all set! You can start recording as soon as you're ready.`
    },
    {
      key: `Use the default microphone`,
      description: `Let's the user choose the browser's default recording device instead of picking one explicitly`,
      text: `Use the default microphone`
    },
    {
      key: `Save`,
      description: `Microphone configuration screen, accept changes to microphone device`,
      text: `Save`
    },
    {
      key: `Try again`,
      description: `Microphone permission failure retry button`,
      text: `Try again`
    },
    {
      key: `Start recording!`,
      description: `Microphone setup screen button, continue to recording screen`,
      text: `Start recording!`
    },
    {
      key: `Microphone settings`,
      description: `Microphone setup screen title`,
      text: `Microphone settings`
    },
    {
      key: `Previous card`,
      description: `Recording screen button, go back to prior card`,
      text: `Previous card`
    },
    {
      key: `Next card`,
      description: `Recording screen button, go forward to next card`,
      text: `Next card`
    },
    {
      key: `Replay`,
      description: `Recording screen button, listen to previously recorded audio`,
      text: `Replay`
    },
    {
      key: `Stop`,
      description: `Recording screen button, to interrupt a recording that's currently being played back`,
      text: `Stop`
    },
    {
      key: `Delete`,
      description: `Recording screen button, delete a previous recording`,
      text: `Delete`
    },
    {
      key: `Deleting...`,
      description: `Recording screen button, shown briefly while the recording is being deleted`,
      text: `Deleting...`
    },
    {
      key: `Record`,
      description: `Recording screen button, record audio for a card`,
      text: `Record`
    },
    {
      key: `Record Again`,
      description: `Recording screen button, record audio for a card that already has been recorded`,
      text: `Record Again`
    },
    {
      key: `(this card is done)`,
      description: `Labels tasks that have already been recorded once`,
      text: `(this card is done)`
    },
    {
      key: `Cancel`,
      description: `Recording screen button and microphone setting screen button, cancel recording / microphone changes`,
      text: `Cancel`
    },
    {
      key: `Done`,
      description: `Recording screen button, shown while recording to end the recording and start uploading it`,
      text: `Done`
    },
    {
      key: `Starting...`,
      description: `Recording screen button, shown briefly just before the microphone starts listening`,
      text: `Starting...`
    },
    {
      key: `Now recording...`,
      description: `Recording screen button, shown briefly just before the microphone starts listening`,
      text: `Now recording...`
    },
    {
      key: `Recording uploaded!`,
      description: `Recording screen message when the recording uploaded successfully`,
      text: `Recording uploaded!`
    },
    {
      key: `Recording uploaded! Here's the next card.`,
      description: `Recording screen message when the recording uploads successfully and the next card is automatically displayed`,
      text: `Recording uploaded! Here's the next card.`
    },
    {
      key: `Recording deleted.`,
      description: `Recording screen message when a recording has just been deleted`,
      text: `Recording deleted.`
    },
    {
      key: `Recording canceled.`,
      description: `Recording screen message when a recording has just been canceled`,
      text: `Recording canceled.`
    },
    {
      key: `No recording to delete.`,
      description: `Error message when the user deletes but nothing is selected.`,
      text: `No recording to delete.`
    },
    {
      key: `No recording to play.`,
      description: `Error message when the user replays but nothing is selected.`,
      text: `No recording to play.`
    },
    {
      key: `Upload failed, your audio may not be saved.`,
      description: `Error message when the user's recording was not received by the server.`,
      text: `Upload failed, your audio may not be saved.`
    },
    {
      key: `Canceling...`,
      description: `Recording screen button, shown briefly when the recording is being canceled`,
      text: `Canceling...`
    },
    {
      key: `Uploading...`,
      description: `Recording screen button, shown briefly when the recording is being uploaded`,
      text: `Uploading...`
    },
    {
      key: `?`,
      description: `Recording screen button, go to help screen`,
      text: `?`
    },
    {
      key: `&#x1F50A;`,
      description: `Speak prompt button, which uses computerized speech to play the prompt audibly`,
      text: `&#x1F50A;`
    },
    {
      key: `Continue`,
      description: `Sign up screen and consent screen buttons, continue to the next page`,
      text: `Continue`
    },
    {
      key: `No assignments`,
      description: `Recording screen, message when the user has no cards to work on`,
      text: `No assignments`
    },
    {
      key: `<b>{number_of_completed_cards}</b> of <b>{total_number_of_tasks_needed}</b> cards <b>done</b>`,
      description: `Recording screen, progress message of tasks completed so far`,
      text: `<b>{number_of_completed_cards}</b> of <b>{total_number_of_tasks_needed}</b> cards <b>done</b>`
    },
    {
      key: `Thank you!`,
      description: `Done screen title, shown when the user has finished at least one pass`,
      text: `Thank you!`
    },
    {
      key: `          Great work! You've gone through the cards once, and recorded
            <b class=count>{number_of_completed_cards} cards</b>
            out of the total (<b>{total_number_of_tasks_needed} cards</b>).
            When you're ready, you can click the button below to finish up the rest of the cards.      `,
      description: `Done screen instructions, asks the user to go finish the rest of the cards`,
      text: `
        Great work! You've gone through the cards once, and recorded
        <b class=count>{number_of_completed_cards} cards</b>
        out of the total
        (<b>{total_number_of_tasks_needed} cards</b>).
        When you're ready, you can click the button below to finish up the rest of the cards.`
    },
    {
      key: `          You're almost done! You've gone through the cards once, and recorded
            <b class=count>{number_of_completed_cards} cards</b>
            out of the total (<b>{total_number_of_tasks_needed} cards</b>).
            When you're ready, you can click the button below to finish up the rest of the cards.      `,
      description: `Done screen instructions, asks the user to go finish the rest of the cards.
        This version displays when the user has done more than 75% of the work.`,
      text: `
        You're almost done! You've gone through the cards once, and recorded
        <b class=count>{number_of_completed_cards} cards</b>
        out of the total
        (<b>{total_number_of_tasks_needed} cards</b>).
        When you're ready, you can click the button below to finish up the rest of the cards.`
    },
    {
      key: `Continue Recording`,
      description: `Done screen and instructions screen buttons, return to the recording screen`,
      text: `Continue Recording`
    },
    {
      key: `Continue recording!`,
      description: `Microphone settings screen, return to the recording screen`,
      text: `Continue recording!`
    },
    {
      key: `You previously indicated that you are eligible.`,
      description: `Signup screen, a message showing that the participant has already completed this form`,
      text: `You previously indicated that you are eligible.`
    },
    {
      key: `You have already completed this form.`,
      description: `Interest form screen, a message showing that the participant has already completed this form`,
      text: `You have already completed this form.`
    },
    {
      key: `Country is required.`,
      description: `Interest form screen, a message showing that a required field needs to be filled in.`,
      text: `Country is required.`
    },
    {
      key: `State is required.`,
      description: `Interest form screen, a message showing that a required field needs to be filled in.`,
      text: `State is required.`
    },
    {
      key: `Please tell us if someone will be helping you record.`,
      description: `Interest form screen, a message showing that a required field needs to be filled in.`,
      text: `Please tell us if someone will be helping you record.`
    },
    {
      key: `Please tell us how to email the person helping you.`,
      description: `Interest form screen, a message showing that a required field needs to be filled in.`,
      text: `Please tell us how to email the person helping you.`
    },
    {
      key: `You'll need to give consent to proceed.`,
      description: `Interest form screen, a message showing that a required field needs to be filled in.`,
      text: `You'll need to give consent to proceed.`
    },
    {
      key: `Please write your initials next to your consent.`,
      description: `Interest form screen, a message showing that a required field needs to be filled in.`,
      text: `Please write your initials next to your consent.`
    },
    {
      key: `You'll need to accept the terms to proceed.`,
      description: `Interest form screen, a message showing that a required field needs to be filled in.`,
      text: `You'll need to accept the terms to proceed.`
    },
    {
      key: `You have already consented.`,
      description: `Consent screen, a message showing that the participant has already completed this form`,
      text: `You have already consented.`
    },
    {
      key: `By typing my name here, I agree to these terms:`,
      description: `Consent screen, instructs the user to type their name in the adjacent text field`,
      text: `By typing my name here, I agree to these terms:`
    },
    {
      key: `&nbsp;(Agreement {which_agreement_number} of {total_number_of_agreements})`,
      description: ``,
      text: `&nbsp;(Agreement {which_agreement_number} of {total_number_of_agreements})`
    },
    {
      key: `Congratulations! You're all done!`,
      description: `Progress bar display when there are no tasks left to do`,
      text: `Congratulations! You're all done!`
    },
    {
      key: `Congratulations!`,
      description: `Title of the done screen`,
      text: `Congratulations!`
    },
    {
      key: `Review Recordings (optional)`,
      description: `Button on done screen which returns to the recording screen, if the user wants to listen to recordings`,
      text: `Review Recordings (optional)`
    },
    {
      key: `
        You have completed all your cards! We'll be reviewing them soon, and if everything
        looks good, you'll be receiving an email from rewards@perks.com within the next 7-10
        business days with a link to claim your gift card.
        <br/><br/>
        <b>Thank you for contributing <b class=count>{number_of_completed_cards} cards</b> to the project!</b>
        <br/><br/>
        (If you wish, you can now go back and review your recordings, but this is not necessary. <b>You're done!</b>)`,
      description: `Descriptive text on the done screen`,
      text: `
        You have completed all your cards! We'll be reviewing them soon,
        and if everything looks good, you'll be receiving an email from
        rewards@perks.com
        within the next 7-10 business days with a link to claim your gift card.
        <br/><br/>
        <b>Thank you for contributing
        <b class=count>{number_of_completed_cards} cards</b>
        to Project Euphonia!
        </b><br/><br/>
        (If you wish, you can now go back and review your recordings, but this is not necessary.
        <b>You're done!</b>)`
    },
    {
      key: `__INTEREST_FORM_HTML__`,
      description: `The HTML for the interest form; all HTML IDs must be intact exactly as is!`,
      // Each translatable string is on a line by itself to make it a little easier to translate
      text: `
    <div class=title
    >Google Project Euphonia: Interest form</div>
    <div class=sectiontitle
    >About You</div>
    <div class=formbox>
      <div class=fieldname><label for=ifname
      >Name</label>
      <span class=optional
      >(Optional)</span>
      </div>
      <div class=fielddescription
      >Nickname, first &amp; last name, just first name, etc. Any way you like to be addressed!</div>
      <input id=ifname class=formtext />
    </div>
    
    <div class=formbox>
      <div class=fieldname><label for=ifcountry
      >What country do you reside in?</label>
      <span class=required>*</span></div>
      <div class=fielddescription
      >IMPORTANT, PLEASE NOTE: We are regrettably unable to send gift cards at this time to residents of the countries indicated below with an asterisk (*). If you reside in one of these countries, you are still welcome to participate in Project Euphonia research, and we'll notify you if and when you'll be able to receive gift cards.
      </div>
      <select id=ifcountry class=formselect>
        <option value="USA">United States of America</option>
        <option value="* Afghanistan">* Afghanistan</option>
        <option value="* Albania">* Albania</option>
        <option value="Algeria">Algeria</option>
        <option value="Andorra">Andorra</option>
        <option value="Angola">Angola</option>
        <option value="Antigua and Barbuda">Antigua and Barbuda</option>
        <option value="Argentina">Argentina</option>
        <option value="Armenia">Armenia</option>
        <option value="Aruba">Aruba</option>
        <option value="Australia">Australia</option>
        <option value="Austria">Austria</option>
        <option value="Azerbaijan">Azerbaijan</option>
        <option value="* Bahamas, The">* Bahamas, The</option>
        <option value="Bahrain">Bahrain</option>
        <option value="Bangladesh">Bangladesh</option>
        <option value="* Barbados">* Barbados</option>
        <option value="* Belarus">* Belarus</option>
        <option value="Belgium">Belgium</option>
        <option value="Belize">Belize</option>
        <option value="* Benin">* Benin</option>
        <option value="Bhutan">Bhutan</option>
        <option value="Bolivia">Bolivia</option>
        <option value="* Bosnia and Herzegovina">* Bosnia and Herzegovina</option>
        <option value="Botswana">Botswana</option>
        <option value="Brazil">Brazil</option>
        <option value="Brunei">Brunei</option>
        <option value="Bulgaria">Bulgaria</option>
        <option value="* Burkina Faso">* Burkina Faso</option>
        <option value="* Burma">* Burma</option>
        <option value="* Burundi">* Burundi</option>
        <option value="* Cambodia">* Cambodia</option>
        <option value="Cameroon">Cameroon</option>
        <option value="Canada">Canada</option>
        <option value="Cabo Verde">Cabo Verde</option>
        <option value="* Central African Republic">* Central African Republic</option>
        <option value="* Chad">* Chad</option>
        <option value="Chile">Chile</option>
        <option value="China">China</option>
        <option value="* Colombia">* Colombia</option>
        <option value="* Comoros">* Comoros</option>
        <option value="* Congo, Democratic Republic of the">* Congo, Democratic Republic of the</option>
        <option value="* Congo, Republic of the">* Congo, Republic of the</option>
        <option value="Costa Rica">Costa Rica</option>
        <option value="* Cote d'Ivoire">* Cote d'Ivoire</option>
        <option value="Croatia">Croatia</option>
        <option value="* Cuba">* Cuba</option>
        <option value="Curacao">Curacao</option>
        <option value="Cyprus">Cyprus</option>
        <option value="Czechia">Czechia</option>
        <option value="Denmark">Denmark</option>
        <option value="Djibouti">Djibouti</option>
        <option value="Dominica">Dominica</option>
        <option value="* Dominican Republic">* Dominican Republic</option>
        <option value="East Timor (see Timor-Leste)">East Timor (see Timor-Leste)</option>
        <option value="Ecuador">Ecuador</option>
        <option value="Egypt">Egypt</option>
        <option value="El Salvador">El Salvador</option>
        <option value="* Equatorial Guinea">* Equatorial Guinea</option>
        <option value="* Eritrea">* Eritrea</option>
        <option value="Estonia">Estonia</option>
        <option value="Eswatini">Eswatini</option>
        <option value="Ethiopia">Ethiopia</option>
        <option value="Fiji">Fiji</option>
        <option value="Finland">Finland</option>
        <option value="France">France</option>
        <option value="Gabon">Gabon</option>
        <option value="Gambia, The">Gambia, The</option>
        <option value="Georgia">Georgia</option>
        <option value="Germany">Germany</option>
        <option value="Ghana">Ghana</option>
        <option value="Greece">Greece</option>
        <option value="Grenada">Grenada</option>
        <option value="Guatemala">Guatemala</option>
        <option value="* Guinea">* Guinea</option>
        <option value="* Guinea-Bissau">* Guinea-Bissau</option>
        <option value="Guyana">Guyana</option>
        <option value="* Haiti">* Haiti</option>
        <option value="Holy See">Holy See</option>
        <option value="Honduras">Honduras</option>
        <option value="Hong Kong">Hong Kong</option>
        <option value="Hungary">Hungary</option>
        <option value="Iceland">Iceland</option>
        <option value="India">India</option>
        <option value="Indonesia">Indonesia</option>
        <option value="* Iran">* Iran</option>
        <option value="* Iraq">* Iraq</option>
        <option value="Ireland">Ireland</option>
        <option value="Israel">Israel</option>
        <option value="Italy">Italy</option>
        <option value="Jamaica">Jamaica</option>
        <option value="Japan">Japan</option>
        <option value="Jordan">Jordan</option>
        <option value="Kazakhstan">Kazakhstan</option>
        <option value="Kenya">Kenya</option>
        <option value="Kiribati">Kiribati</option>
        <option value="Korea, North">Korea, North</option>
        <option value="Korea, South">Korea, South</option>
        <option value="* Kosovo">* Kosovo</option>
        <option value="Kuwait">Kuwait</option>
        <option value="Kyrgyzstan">Kyrgyzstan</option>
        <option value="* Laos">* Laos</option>
        <option value="* Latvia">* Latvia</option>
        <option value="* Lebanon">* Lebanon</option>
        <option value="* Lesotho">* Lesotho</option>
        <option value="* Liberia">* Liberia</option>
        <option value="* Libya">* Libya</option>
        <option value="Liechtenstein">Liechtenstein</option>
        <option value="Lithuania">Lithuania</option>
        <option value="Luxembourg">Luxembourg</option>
        <option value="Macau">Macau</option>
        <option value="* Madagascar">* Madagascar</option>
        <option value="Malawi">Malawi</option>
        <option value="Malaysia">Malaysia</option>
        <option value="Maldives">Maldives</option>
        <option value="* Mali">* Mali</option>
        <option value="Malta">Malta</option>
        <option value="Marshall Islands">Marshall Islands</option>
        <option value="Mauritania">Mauritania</option>
        <option value="* Mauritius">* Mauritius</option>
        <option value="Mexico">Mexico</option>
        <option value="Micronesia">Micronesia</option>
        <option value="Moldova">Moldova</option>
        <option value="Monaco">Monaco</option>
        <option value="Mongolia">Mongolia</option>
        <option value="* Montenegro">* Montenegro</option>
        <option value="Morocco">Morocco</option>
        <option value="Mozambique">Mozambique</option>
        <option value="Namibia">Namibia</option>
        <option value="Nauru">Nauru</option>
        <option value="Nepal">Nepal</option>
        <option value="Netherlands">Netherlands</option>
        <option value="New Zealand">New Zealand</option>
        <option value="* Nicaragua">* Nicaragua</option>
        <option value="Niger">Niger</option>
        <option value="* Nigeria">* Nigeria</option>
        <option value="* North Korea">* North Korea</option>
        <option value="* North Macedonia">* North Macedonia</option>
        <option value="Norway">Norway</option>
        <option value="Oman">Oman</option>
        <option value="Pakistan">Pakistan</option>
        <option value="Palau">Palau</option>
        <option value="Palestinian Territories">Palestinian Territories</option>
        <option value="* Panama">* Panama</option>
        <option value="Papua New Guinea">Papua New Guinea</option>
        <option value="Paraguay">Paraguay</option>
        <option value="Peru">Peru</option>
        <option value="Philippines">Philippines</option>
        <option value="Poland">Poland</option>
        <option value="Portugal">Portugal</option>
        <option value="Qatar">Qatar</option>
        <option value="Romania">Romania</option>
        <option value="* Russia">* Russia</option>
        <option value="Rwanda">Rwanda</option>
        <option value="Saint Kitts and Nevis">Saint Kitts and Nevis</option>
        <option value="Saint Lucia">Saint Lucia</option>
        <option value="Saint Vincent and the Grenadines">Saint Vincent and the Grenadines</option>
        <option value="Samoa">Samoa</option>
        <option value="San Marino">San Marino</option>
        <option value="Sao Tome and Principe">Sao Tome and Principe</option>
        <option value="Saudi Arabia">Saudi Arabia</option>
        <option value="Senegal">Senegal</option>
        <option value="* Serbia">* Serbia</option>
        <option value="Seychelles">Seychelles</option>
        <option value="Sierra Leone">Sierra Leone</option>
        <option value="Singapore">Singapore</option>
        <option value="Sint Maarten">Sint Maarten</option>
        <option value="Slovakia">Slovakia</option>
        <option value="* Slovenia">* Slovenia</option>
        <option value="Solomon Islands">Solomon Islands</option>
        <option value="* Somalia">* Somalia</option>
        <option value="South Africa">South Africa</option>
        <option value="South Korea">South Korea</option>
        <option value="* South Sudan">* South Sudan</option>
        <option value="Spain">Spain</option>
        <option value="Sri Lanka">Sri Lanka</option>
        <option value="* Sudan">* Sudan</option>
        <option value="Suriname">Suriname</option>
        <option value="Swaziland">Swaziland</option>
        <option value="Sweden">Sweden</option>
        <option value="Switzerland">Switzerland</option>
        <option value="* Syria">* Syria</option>
        <option value="Taiwan">Taiwan</option>
        <option value="Tajikistan">Tajikistan</option>
        <option value="Tanzania">Tanzania</option>
        <option value="Thailand">Thailand</option>
        <option value="Timor-Leste">Timor-Leste</option>
        <option value="Togo">Togo</option>
        <option value="Tonga">Tonga</option>
        <option value="Trinidad and Tobago">Trinidad and Tobago</option>
        <option value="* Tunisia">* Tunisia</option>
        <option value="* Turkey">* Turkey</option>
        <option value="Turkmenistan">Turkmenistan</option>
        <option value="Tuvalu">Tuvalu</option>
        <option value="* Uganda">* Uganda</option>
        <option value="* Ukraine">* Ukraine</option>
        <option value="United Arab Emirates">United Arab Emirates</option>
        <option value="United Kingdom">United Kingdom</option>
        <option value="Uruguay">Uruguay</option>
        <option value="Uzbekistan">Uzbekistan</option>
        <option value="Vanuatu">Vanuatu</option>
        <option value="* Venezuela">* Venezuela</option>
        <option value="Vietnam">Vietnam</option>
        <option value="Yemen">Yemen</option>
        <option value="Zambia">Zambia</option>
        <option value="* Zimbabwe">* Zimbabwe</option>
          </select>
    </div>
    
    <div class=formbox id=usstatebox>
      <div class=fieldname><label for=ifstate
      >What state or territory do you reside in?</label>
      <span class=required>*</span></div>
      <select id=ifstate class=formselect>
        <option value=""></option>
        <option value="AL">Alabama</option>
        <option value="AK">Alaska</option>
        <option value="AZ">Arizona</option>
        <option value="AR">Arkansas</option>
        <option value="AS">American Samoa</option>
        <option value="CA">California</option>
        <option value="CO">Colorado</option>
        <option value="CT">Connecticut</option>
        <option value="DE">Delaware</option>
        <option value="FL">Florida</option>
        <option value="GA">Georgia</option>
        <option value="GU">Guam</option>
        <option value="HI">Hawaii</option>
        <option value="ID">Idaho</option>
        <option value="IL">Illinois</option>
        <option value="IN">Indiana</option>
        <option value="IA">Iowa</option>
        <option value="KS">Kansas</option>
        <option value="KY">Kentucky</option>
        <option value="LA">Louisiana</option>
        <option value="ME">Maine</option>
        <option value="MD">Maryland</option>
        <option value="MA">Massachusetts</option>
        <option value="MI">Michigan</option>
        <option value="MN">Minnesota</option>
        <option value="MS">Mississippi</option>
        <option value="MO">Missouri</option>
        <option value="MT">Montana</option>
        <option value="NE">Nebraska</option>
        <option value="NV">Nevada</option>
        <option value="NH">New Hampshire</option>
        <option value="NJ">New Jersey</option>
        <option value="NM">New Mexico</option>
        <option value="NY">New York</option>
        <option value="NC">North Carolina</option>
        <option value="ND">North Dakota</option>
        <option value="MP">Northern Mariana Islands</option>
        <option value="OH">Ohio</option>
        <option value="OK">Oklahoma</option>
        <option value="OR">Oregon</option>
        <option value="PA">Pennsylvania</option>
        <option value="PR">Puerto Rico</option>
        <option value="RI">Rhode Island</option>
        <option value="SC">South Carolina</option>
        <option value="SD">South Dakota</option>
        <option value="TN">Tennessee</option>
        <option value="TX">Texas</option>
        <option value="VI">U.S. Virgin Islands</option>
        <option value="UT">Utah</option>
        <option value="VT">Vermont</option>
        <option value="VA">Virginia</option>
        <option value="WA">Washington</option>
        <option value="WV">West Virginia</option>
        <option value="WI">Wisconsin</option>
        <option value="WY">Wyoming</option>          
      </select>
    </div>
    
    <div class=formbox>
      <div class=fieldname><label for=ifcity
      >What city do you live in?</label>
      <span class=optional
      >(Optional)</span>
      </div>
      <input id=ifcity class=formtext />
    </div>
    
    <div class=formbox>
      <div class=fieldname><label for=ifaccent
      >How would you characterize your accent?</label>
      <span class=optional
      >(Optional)</span>
      </div>
      <input id=ifaccent class=formtext />
    </div>
    
    <div class=sectiontitle
    >Additional information</div>
    
    <div class=formbox>
      <div class=fieldname><label for=ifreferral
      >Please tell us how you heard about this project</label>
      <span class=optional
      >(Optional)</span>
      </div>
      <input id=ifreferral class=formtext />
    </div>
    
    <div class=formbox role=radiogroup id=ifgendergroup style="display: none;">
      <div class=fieldname><label for=ifgendergroup
      >What is your gender</label>
      <span class=optional
      >(Optional)</span>
      </div>
      <div class=checkboxrow>
        <input type=radio name=ifgender id=ifgenderfemale />
        <label for=ifgenderfemale
        >Female</label>
      </div>
      <div class=checkboxrow>
        <input type=radio name=ifgender id=ifgendermale />
        <label for=ifgendermale
        >Male</label>
      </div>
      <div class=checkboxrow>
        <input type=radio name=ifgender id=ifgenderno />
        <label for=ifgenderno
        >Prefer not to say</label>
      </div>
      <div class=checkboxrow>
        <input type=radio name=ifgender id=ifgenderother />
        <label for=ifgenderother
        >Other:</label>
        <input type=text class=formtext id=ifgenderothertext />
      </div>
    </div>
    
    <div class=formbox style="display: none;">
      <div class=fieldname><label for=ifrace
      >What is your race</label>
      <span class=optional
      >(Optional)</span>
      </div>
      <input id=ifrace class=formtext />
    </div>
    
    <div class=formbox>
      <div class=fieldname
      >Which of these do you have access to?
      <span class=optional
      >(Optional)</span>
      </div>
      <div class=checkboxrow>
        <input type=checkbox id=ifdevicecomputer />
        <label for=ifdevicecomputer
        >An internet-connected computer equipped with a microphone and speakers</label>
      </div>
      <div class=checkboxrow>
        <input type=checkbox id=ifdeviceandroid />
        <label for=ifdeviceandroid
        >An Android phone or tablet (like a Samsung, Pixel, Nexus, etc.)</label>
      </div>
      <div class=checkboxrow>
        <input type=checkbox id=ifdeviceiphone />
        <label for=ifdeviceiphone
        >An iPhone or iPad</label>
      </div>
      <div class=checkboxrow>
        <input type=checkbox id=ifdevicenone />
        <label for=ifdevicenone
        >None of the above</label>
      </div>
      <div class=checkboxrow>
        <input type=checkbox id=ifdeviceother />
        <label id=ifdeviceotherlabel for=ifdeviceother
        >Other:</label>
        <input type=text class=formtext id=ifdeviceothertext aria-labelledby="ifdeviceotherlabel" />
      </div>
    </div>
    
    <div class=formbox id=helperbox>
      <div class=fieldname
      >Will someone be helping you record speech samples?
      <span class=required>*</span></div>
      <div class=fielddescription
      >For example, a family member, speech therapist, or other person</div>
      <div class=checkboxrow>
        <input type=radio name=ifhelper id=ifhelperno selected />
        <label for=ifhelperno
        >No, I'll be participating independently</label>
      </div>
      <div class=checkboxrow>
        <input type=radio name=ifhelper id=ifhelperyes />
        <label for=ifhelperyes
        >Yes, someone will be helping me and is comfortable with me sharing their contact info</label>
      </div>
    </div>
    
    <!-- Helper panel appears if the user chooses "yes" above -->
    <div id=helpersection>
      <div class=sectiontitle
      >About the person helping you</div>
      <div class=formbox>
        <div class=fielddescription>
          Please tell us a bit about the person helping you, so we can best stay in touch with both of you. By including your assistant's name, you understand that they will receive information about your participation in this project. You can list more than one Assistant and email: just separate each one with a comma.
        </div>
      </div>
    
      <div class=formbox>
        <div class=fieldname><label for=ifassistantname
        >Assistant's name</label>
        <span class=optional
        >(Optional)</span>
        </div>
        <input type=text class=formtext id=ifassistantname />
      </div>
    
      <div class=formbox>
        <div class=fieldname><label for=ifassistantemail
        >Assistant's email address</label>
        <span class=required>*</span></div>
        <input type=text class=formtext id=ifassistantemail />
      </div>
    
      <div class=formbox>
        <div class=fieldname><label for=ifassistantrelationship
        >What is this person's relationship to you?</label>
        <span class=optional
        >(Optional)</span>
        </div>
        <div class=fielddescription
        >For example:  caregiver, friend, family member, speech therapist, etc.</div>
        <input type=text class=formtext id=ifassistantrelationship />
      </div>
    </div>
    
    <div class=sectiontitle
    >Google Project Euphonia: Consent</div>
    
    <div class=forminfobox>
      <div class=fieldname
      >Questionnaire Collection of Sensitive Personally Identifiable Information</div>
      <div class=fielddescription>
        The purpose of this questionnaire is to verify your eligibility for an upcoming data collection effort with Google, and the collection's purpose will be to assist Google to design, research, develop, build, and improve the accessibility of its current and future products and services related to speech technologies.
        Information you provide in this questionnaire may be combined with other information and data that you chose to provide during the data collection, if you are selected to participate.
      </div>
    </div>
    
    <div class=formbox>
      <div class=fieldname>
        With your consent, Google will collect and process the personal information you choose to provide (a) when you submit this questionnaire and (b) if you are selected to participate in the project, when you participate in the data collection tasks, including information about your use of assistive technology, speech disability or impairment, and speech patterns.
        <span class=required>*</span>
      </div>
      <div class=checkboxrow>
        <input type=checkbox id=ifformconsent />
        <label id=ifformconsentlabel for=ifformconsent>
          I give my consent, and will enter my initials here:
        </label>
        <input type=text class=formtext id=ifconsentinitials aria-labelledby="ifformconsentlabel" />
      </div>
    </div>
    
    <div class=formbox>
      <div class=fieldname>
        Please review our Terms and Conditions and Privacy Policy
        <span class=required>*</span>
      </div>
      <div class=checkboxrow>
        <input type=checkbox id=ifformtos />
        <label for=ifformtos>
          I accept the 
          <a target="_blank" href="https://www.google.com/policies/terms/"
          >Terms and Conditions</a>
          and acknowledge that my information will be used for the product research, development, and improvement of speech related technologies, and in accordance with
          <a target="_blank" href="https://www.google.com/policies/privacy/"
          >Google's Privacy Policy</a>
          .
        </label>
      </div>
    </div>
    
    <div class=forminfobox>
      <div class=fieldname>
        By submitting this form, you give Google and its affiliates your consent to contact you by email.
      </div>
    </div>
    
    <div class=formbox>
      <div class=fieldname><label for=ifotherinfo>
        Do you have any other information you would like to share with us?
        </label>
        <span class=optional
        >(Optional)</span>
      </div>
      <input id=ifotherinfo class=formtext />
    </div>
`
    }
  ];

  // ../common/strings_es.ts
  var ES_STRINGS = [
    {
      key: `PAGE_TITLE`,
      en: `Project Euphonia`,
      description: `Web page title for all pages`,
      text: `Proyecto Euphonia`
    },
    {
      key: `HELP_LINK`,
      description: `Help hyperlink HREF property when the user needs help or has questions.`,
      text: `http://g.co/disabilitysupport`
    },
    {
      key: `WELCOME_TITLE`,
      en: `Welcome to Project Euphonia!`,
      description: `Signup screen and consent screen titles`,
      text: `\xA1Te damos la bienvenida a Project Euphonia!`
    },
    {
      key: `We're exploring how Google products and services
    that use speech as an input method could work better for more people. We're seeking
    voice contributions from adults who have difficulty being understood by others.

    Voice samples can help us improve how Google understands individuals with speech
    impairments.`,
      description: `Signup screen`,
      text: `Estamos investigando c\xF3mo podr\xEDan funcionar mejor y llegar a m\xE1s personas los productos y servicios de Google que utilizan la voz como m\xE9todo de introducci\xF3n de texto. Necesitamos la aportaci\xF3n de personas adultas cuya voz resulte dif\xEDcil de entender. Las muestras de voz pueden ayudarnos a hacer que Google entienda mejor a las personas que tengan alg\xFAn trastorno del habla.`
    },
    {
      key: `<b>IMPORTANT:</b> If you're filling out
    this form on behalf of someone else, please ensure you have their permission
    to do so.`,
      description: `Signup screen`,
      text: `<b>IMPORTANTE:</b> Si quieres rellenar este formulario en nombre de otra persona, aseg\xFArate de tener su permiso para hacerlo.`
    },
    {
      key: `Questions? <a id=signuphelplink target="_blank">Contact Us</a>`,
      en: `Questions? <a id=signuphelplink target="_blank">Contact Us</a>`,
      description: `Signup screen`,
      text: `\xBFTienes alguna pregunta? 
        <a id=signuphelplink target="_blank"
        >Contacta con nosotros</a>`
    },
    {
      key: `Already enrolled? &nbsp;`,
      description: `Signup screen`,
      text: `\xBFYa te has registrado? &nbsp;`
    },
    {
      key: `Click to sign in and continue recording`,
      description: `Signup screen`,
      text: `Haz clic para iniciar sesi\xF3n y seguir grabando`
    },
    {
      key: `To get started, please confirm your eligibility:`,
      description: `Signup screen`,
      text: `Para empezar, confirma que cumples los requisitos:`
    },
    {
      key: `Strangers, or voice technologies like Google Assistant, have difficulty understanding my speech (not because of an accent)`,
      description: `Signup screen eligibility question`,
      text: `A las personas que no me conocen o a las tecnolog\xEDas de voz, como el Asistente de Google, les resulta dif\xEDcil entenderme cuando hablo (no por mi acento)`
    },
    {
      key: `I am at least 18 years of age`,
      description: `Signup screen eligibility question`,
      text: `Tengo 18 a\xF1os o m\xE1s`
    },
    {
      key: `Sign in and continue`,
      description: `Signup screen button`,
      text: `Iniciar sesi\xF3n y continuar`
    },
    {
      key: `You will need to sign in with your Google
    Account to contribute to the project. If you do not have a Google Account, you can
    create one when you click to continue.`,
      description: `Signup screen instructions`,
      text: `Tendr\xE1s que iniciar sesi\xF3n con tu cuenta de Google para poder colaborar en el proyecto. Si no tienes una cuenta de Google, puedes crear una cuando hagas clic para continuar.`
    },
    {
      key: `Next`,
      description: `Interest form button, advance to the next screen`,
      text: `Siguiente`
    },
    {
      key: `Go Back`,
      description: `Interest form button, go back to the signup screen`,
      text: `Volver`
    },
    {
      key: `You must type your name to agree to the terms.`,
      description: `Consent form screen, require consent to proceed`,
      text: `Debes escribir tu nombre para aceptar los t\xE9rminos.`
    },
    {
      key: `Reset form and start over`,
      description: `Interest form button, clear fields and start over`,
      text: `Borrar formulario y volver a empezar`
    },
    {
      key: `You are enrolling as <b id=whoisenrolling>&nbsp;</b>.
    Please review the following agreement: <span id=consentcounter></span>`,
      description: `Consent screen instructions`,
      text: `Te est\xE1s registrando como <b id=whoisenrolling>&nbsp;</b>. Lee el siguiente contrato: <span id=consentcounter></span>`
    },
    {
      key: `Enroll`,
      description: `Consent screen, final action; consents to the program and allows recording`,
      text: `Registrarse`
    },
    {
      key: `Next Agreement`,
      description: `Consent screen, to agree to the current consent and then see the next one. Only shows when there are multiple consents`,
      text: `Siguiente contrato`
    },
    {
      key: `INSTRUCTIONS_TITLE`,
      en: `Thanks for signing up for Project Euphonia!`,
      description: `Instructions screen title`,
      text: `\xA1Gracias por registrarte en Project Euphonia!`
    },
    {
      key: `INSTRUCTIONS_VIDEO_HTML`,
      description: `Instructional video iframe from YouTube`,
      text: `
    <iframe width="560" height="315" src="https://www.youtube.com/embed/sMLED9xrLts"
        title="YouTube video player" frameborder="0"
        allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
    `
    },
    {
      key: `INSTRUCTIONS_HTML`,
      en: `    <ul>
    <li>Please take a moment to watch this video introduction.</li>
    <li>On the next screen, you'll see <b>cards</b> to read aloud.</li>
    <li>You'll want to be in a <b>quiet setting</b> and avoid any background noise.</li>
    <li>You'll press the blue Record button, and then <b>read the
    card aloud</b>, as accurately as possible.</li>
    <li>When you are <b>finished speaking</b>, press the blue button again to stop recording.</li>
    <li>When you finish recording all the cards, you're done!</li>
    <li>Having trouble recording? <a target="_blank" href="http://g.co/disabilitysupport">Contact us</a> for help.</li>`,
      description: `Instructions screen details`,
      text: `<ul>
    <li>Dedica unos minutos a ver este v\xEDdeo introductorio.</li>
    <li>En la pantalla siguiente, ver\xE1s unas <b>tarjetas</b> que tendr\xE1s que leer en alto.</li>
    <li>Te recomendamos que est\xE9s en un <b>entorno tranquilo</b> en el que no haya ruidos de fondo.</li>
    <li>Tendr\xE1s que pulsar el bot\xF3n azul para grabar y, a continuaci\xF3n, <b>leer la tarjeta en voz alta</b> con la mayor precisi\xF3n posible.</li> <li>Cuando hayas <b>terminado de hablar</b>, pulsa de nuevo el bot\xF3n azul para dejar de grabar.</li>
    <li>Una vez grabadas todas las tarjetas, habr\xE1s terminado.</li>
    <li>\xBFTienes problemas para grabar?
    <a target="_blank" href="http://g.co/disabilitysupport">Ponte en contacto con nosotros</a> para que te ayudemos.</li>`
    },
    {
      key: `Get Started`,
      description: `Instructions screen button to continue to next screen`,
      text: `Empezar`
    },
    {
      key: `Microphone Setup`,
      description: `Microphone and settings screen title`,
      text: `Configuraci\xF3n del micr\xF3fono`
    },
    {
      key: `
    In order to record your speech, we need permission to use your microphone
    through your web browser. <b>Please click "Allow"</b> to grant use of your microphone.`,
      description: `Microphone permission instructions`,
      text: `Para poder grabar lo que dices, Euphonia necesita permiso para usar el micr\xF3fono a trav\xE9s de tu navegador web. <b>Haz clic en "Permitir"</b> para conced\xE9rselo.`
    },
    {
      key: `
    We could not access your microphone due to a permission problem. You'll need to allow access
    in order to continue.`,
      description: `Microphone permission error message`,
      text: `Euphonia no ha podido acceder a tu micr\xF3fono porque hay un problema con el permiso. Para continuar, tienes que permitir el acceso.`
    },
    {
      key: `
    It looks like your microphone permission is blocked. You'll need to <b>allow access</b>
    by clicking the <b>address bar of your browser</b>, and/or <b>reset permission</b> for the microphone.`,
      description: `Microphone permission error message`,
      text: `Parece que el permiso de acceso a tu micr\xF3fono est\xE1 bloqueado. Tienes que <b>permitir el acceso</b> haciendo clic en la <b>barra de direcciones de tu navegador</b>, o <b>restablecer el permiso</b> del micr\xF3fono.`
    },
    {
      key: `
    Your microphone is all set! You can start recording as soon as you're ready.`,
      description: `Microphone permission success message`,
      text: `\xA1El micr\xF3fono ya est\xE1 listo! Puedes empezar a grabar cuando quieras.`
    },
    {
      key: `Use the default microphone`,
      description: `Let's the user choose the browser's default recording device instead of picking one explicitly`,
      text: `Usar el micr\xF3fono predeterminado`
    },
    {
      key: `Save`,
      description: `Microphone configuration screen, accept changes to microphone device`,
      text: `Guardar`
    },
    {
      key: `Try again`,
      description: `Microphone permission failure retry button`,
      text: `Reintentar`
    },
    {
      key: `Start recording!`,
      description: `Microphone setup screen button, continue to recording screen`,
      text: `\xA1Empieza a grabar!`
    },
    {
      key: `Microphone settings`,
      description: `Microphone setup screen title`,
      text: `Ajustes del micr\xF3fono`
    },
    {
      key: `Previous card`,
      description: `Recording screen button, go back to prior card`,
      text: `Tarjeta anterior`
    },
    {
      key: `Next card`,
      description: `Recording screen button, go forward to next card`,
      text: `Tarjeta siguiente`
    },
    {
      key: `Replay`,
      description: `Recording screen button, listen to previously recorded audio`,
      text: `Volver a reproducir`
    },
    {
      key: `Stop`,
      description: `Recording screen button, to interrupt a recording that's currently being played back`,
      text: `Detener`
    },
    {
      key: `Delete`,
      description: `Recording screen button, delete a previous recording`,
      text: `Eliminar`
    },
    {
      key: `Deleting...`,
      description: `Recording screen button, shown briefly while the recording is being deleted`,
      text: `Eliminando...`
    },
    {
      key: `Record`,
      description: `Recording screen button, record audio for a card`,
      text: `Grabar`
    },
    {
      key: `Record Again`,
      description: `Recording screen button, record audio for a card that already has been recorded`,
      text: `Volver a grabar`
    },
    {
      key: `(this card is done)`,
      description: `Labels tasks that have already been recorded once`,
      text: `(ya has hecho esta tarjeta)`
    },
    {
      key: `Cancel`,
      description: `Recording screen button and microphone setting screen button, cancel recording / microphone changes`,
      text: `Cancelar`
    },
    {
      key: `Done`,
      description: `Recording screen button, shown while recording to end the recording and start uploading it`,
      text: `Listo`
    },
    {
      key: `Starting...`,
      description: `Recording screen button, shown briefly just before the microphone starts listening`,
      text: `Iniciando...`
    },
    {
      key: `Now recording...`,
      description: `Recording screen button, shown briefly just before the microphone starts listening`,
      text: `Grabando ahora...`
    },
    {
      key: `Recording uploaded!`,
      description: `Recording screen message when the recording uploaded successfully`,
      text: `Grabaci\xF3n subida.`
    },
    {
      key: `Recording uploaded! Here's the next card.`,
      description: `Recording screen message when the recording uploads successfully and the next card is automatically displayed`,
      text: `Grabaci\xF3n subida. Aqu\xED tienes la siguiente tarjeta.`
    },
    {
      key: `Recording deleted.`,
      description: `Recording screen message when a recording has just been deleted`,
      text: `Grabaci\xF3n eliminada.`
    },
    {
      key: `Recording canceled.`,
      description: `Recording screen message when a recording has just been canceled`,
      text: `Grabaci\xF3n cancelada.`
    },
    {
      key: `No recording to delete.`,
      description: `Error message when the user deletes but nothing is selected.`,
      text: `No hay ninguna grabaci\xF3n que eliminar.`
    },
    {
      key: `No recording to play.`,
      description: `Error message when the user replays but nothing is selected.`,
      text: `No hay ninguna grabaci\xF3n que reproducir.`
    },
    {
      key: `Upload failed, your audio may not be saved.`,
      description: `Error message when the user's recording was not received by the server.`,
      text: `No se ha podido subir la grabaci\xF3n. Puede que el audio no se guarde.`
    },
    {
      key: `Canceling...`,
      description: `Recording screen button, shown briefly when the recording is being canceled`,
      text: `Cancelando...`
    },
    {
      key: `Uploading...`,
      description: `Recording screen button, shown briefly when the recording is being uploaded`,
      text: `Subiendo...`
    },
    {
      key: `?`,
      description: `Recording screen button, go to help screen`,
      text: `?`
    },
    {
      key: `&#x1F50A;`,
      description: `Speak prompt button, which uses computerized speech to play the prompt audibly`,
      text: `&#x1F50A;`
    },
    {
      key: `Continue`,
      description: `Sign up screen and consent screen buttons, continue to the next page`,
      text: `Continuar`
    },
    {
      key: `No assignments`,
      description: `Recording screen, message when the user has no cards to work on`,
      text: `No hay ninguna tarea`
    },
    {
      key: `<b>{number_of_completed_cards}</b> of <b>{total_number_of_tasks_needed}</b> cards <b>done</b>`,
      description: `Recording screen, progress message of tasks completed so far`,
      text: `<b>{number_of_completed_cards}</b> de <b>{total_number_of_tasks_needed}</b> tarjetas <b>terminadas</b>`
    },
    {
      key: `Thank you!`,
      description: `Done screen title, shown when the user has finished at least one pass`,
      text: `\xA1Gracias!`
    },
    {
      key: `          Great work! You've gone through the cards once, and recorded
    <b class=count>{number_of_completed_cards} cards</b>
    out of the total (<b>{total_number_of_tasks_needed} cards</b>).
    When you're ready, you can click the button below to finish up the rest of the cards.      `,
      description: `Done screen instructions, asks the user to go finish the rest of the cards`,
      text: `\xA1Buen trabajo! Has visto las tarjetas una vez y has grabado <b class=count>{number_of_completed_cards} tarjetas</b> del total de <b>{total_number_of_tasks_needed}</b>. Cuando quieras, haz clic en el bot\xF3n de abajo para terminar el resto de las tarjetas.`
    },
    {
      key: `          You're almost done! You've gone through the cards once, and recorded
    <b class=count>{number_of_completed_cards} cards</b>
    out of the total (<b>{total_number_of_tasks_needed} cards</b>).
    When you're ready, you can click the button below to finish up the rest of the cards.      `,
      description: `Done screen instructions, asks the user to go finish the rest of the cards.
  This version displays when the user has done more than 75% of the work.`,
      text: `\xA1Ya casi has terminado! Has visto las tarjetas una vez y has grabado <b class=count>{number_of_completed_cards} tarjetas</b> del total de <b>{total_number_of_tasks_needed}</b>. Cuando quieras, haz clic en el bot\xF3n de abajo para terminar el resto de las tarjetas.`
    },
    {
      key: `Continue Recording`,
      description: `Done screen and instructions screen buttons, return to the recording screen`,
      text: `Seguir grabando`
    },
    {
      key: `Continue recording!`,
      description: `Microphone settings screen, return to the recording screen`,
      text: `\xA1Sigue grabando!`
    },
    {
      key: `You previously indicated that you are eligible.`,
      description: `Signup screen, a message showing that the participant has already completed this form`,
      text: `Has indicado anteriormente que cumples los requisitos.`
    },
    {
      key: `You have already completed this form.`,
      description: `Interest form screen, a message showing that the participant has already completed this form`,
      text: `Ya has completado este formulario.`
    },
    {
      key: `Country is required.`,
      description: `Interest form screen, a message showing that a required field needs to be filled in.`,
      text: `Es obligatorio indicar el pa\xEDs.`
    },
    {
      key: `State is required.`,
      description: `Interest form screen, a message showing that a required field needs to be filled in.`,
      text: `Es obligatorio indicar el estado/provincia.`
    },
    {
      key: `Please tell us if someone will be helping you record.`,
      description: `Interest form screen, a message showing that a required field needs to be filled in.`,
      text: `Ind\xEDcanos si alguien te va a ayudar a grabar.`
    },
    {
      key: `Please tell us how to email the person helping you.`,
      description: `Interest form screen, a message showing that a required field needs to be filled in.`,
      text: `Ind\xEDcanos c\xF3mo podemos contactar por correo electr\xF3nico con la persona que te va a ayudar.`
    },
    {
      key: `You'll need to give consent to proceed.`,
      description: `Interest form screen, a message showing that a required field needs to be filled in.`,
      text: `Tendr\xE1s que dar tu consentimiento para continuar.`
    },
    {
      key: `Please write your initials next to your consent.`,
      description: `Interest form screen, a message showing that a required field needs to be filled in.`,
      text: `Escribe tus iniciales junto a tu consentimiento.`
    },
    {
      key: `You'll need to accept the terms to proceed.`,
      description: `Interest form screen, a message showing that a required field needs to be filled in.`,
      text: `Tendr\xE1s que aceptar los t\xE9rminos para continuar.`
    },
    {
      key: `You have already consented.`,
      description: `Consent screen, a message showing that the participant has already completed this form`,
      text: `Ya has dado tu consentimiento.`
    },
    {
      key: `By typing my name here, I agree to these terms:`,
      description: `Consent screen, indicates that the participant consents`,
      text: `Al escribir mi nombre aqu\xED, acepto los siguientes t\xE9rminos:`
    },
    {
      key: `&nbsp;(Agreement {which_agreement_number} of {total_number_of_agreements})`,
      description: ``,
      text: `&nbsp;(Contrato {which_agreement_number} de {total_number_of_agreements})`
    },
    {
      key: `Congratulations! You're all done!`,
      description: `Progress bar display when there are no tasks left to do`,
      text: `\xA1Enhorabuena! \xA1Ya has terminado!`
    },
    {
      key: `Congratulations!`,
      description: `Title of the done screen`,
      text: `\xA1Enhorabuena!`
    },
    {
      key: `Review Recordings (optional)`,
      description: `Button on done screen which returns to the recording screen, if the user wants to listen to recordings`,
      text: `Revisar grabaciones (opcional)`
    },
    {
      key: `
    You have completed all your cards! We'll be reviewing them soon, and if everything
    looks good, you'll be receiving an email from rewards@perks.com within the next 7-10
    business days with a link to claim your gift card.
    <br/><br/>
  <b>Thank you for contributing <b class=count>{number_of_completed_cards} cards</b> to the project!</b>
    <br/><br/>
    (If you wish, you can now go back and review your recordings, but this is not necessary. <b>You're done!</b>)`,
      description: `Descriptive text on the done screen`,
      text: `Has completado todas las tarjetas. Las revisaremos pr\xF3ximamente y, si est\xE1 todo bien, recibir\xE1s un correo de rewards@perks.com en los pr\xF3ximos 7-10 d\xEDas h\xE1biles con un enlace a tu tarjeta regalo. <br/><br/> <b>Gracias por contribuir con <b class=count>{number_of_completed_cards} tarjetas</b> al Proyect Euphonia.</b> <br/><br/> Si quieres, puedes volver y revisar tus grabaciones, pero no es necesario. <b>Ya has acabado</b>.`
    },
    {
      key: `__INTEREST_FORM_HTML__`,
      description: `The HTML for the interest form; all HTML IDs must be intact exactly as is!`,
      text: `

    <div class=title
    >Proyecto Google Euphonia: formulario de inter\xE9s</div>
    <div class=sectiontitle
    >Informaci\xF3n sobre ti</div>
    <div class=formbox>
    <div class=fieldname><label for=ifname
    >Nombre</label>
    <span class=optional
    >(Opcional)</span>
    </div>
    <div class=fielddescription
    >Tu apodo, tu nombre y apellidos, solo tu nombre, etc. La forma en que prefieras que nos dirijamos a ti.</div>
    <input id=ifname class=formtext />
    </div>
    
    <div class=formbox>
    <div class=fieldname><label for=ifcountry
    >\xBFEn qu\xE9 pa\xEDs resides?</label>
    <span class=required>*</span></div>
    <div class=fielddescription
    >TEN EN CUENTA LA SIGUIENTE INFORMACI\xD3N IMPORTANTE: Lamentablemente, en este momento no podemos enviar tarjetas regalo a residentes de los pa\xEDses marcados a continuaci\xF3n con un asterisco (*). Si resides en uno de estos pa\xEDses, puedes participar en la investigaci\xF3n de Proyect Euphonia, y te avisaremos cuando puedas recibir tarjetas regalo.
    </div>
    <select id=ifcountry class=formselect>
    <option value="Spain">Espa\xF1a</option>
    <option value="USA">United States of America</option>
    <option value="* Afghanistan">* Afghanistan</option>
    <option value="* Albania">* Albania</option>
    <option value="Algeria">Algeria</option>
    <option value="Andorra">Andorra</option>
    <option value="Angola">Angola</option>
    <option value="Antigua and Barbuda">Antigua and Barbuda</option>
    <option value="Argentina">Argentina</option>
    <option value="Armenia">Armenia</option>
    <option value="Aruba">Aruba</option>
    <option value="Australia">Australia</option>
    <option value="Austria">Austria</option>
    <option value="Azerbaijan">Azerbaijan</option>
    <option value="* Bahamas, The">* Bahamas, The</option>
    <option value="Bahrain">Bahrain</option>
    <option value="Bangladesh">Bangladesh</option>
    <option value="* Barbados">* Barbados</option>
    <option value="* Belarus">* Belarus</option>
    <option value="Belgium">Belgium</option>
    <option value="Belize">Belize</option>
    <option value="* Benin">* Benin</option>
    <option value="Bhutan">Bhutan</option>
    <option value="Bolivia">Bolivia</option>
    <option value="* Bosnia and Herzegovina">* Bosnia and Herzegovina</option>
    <option value="Botswana">Botswana</option>
    <option value="Brazil">Brazil</option>
    <option value="Brunei">Brunei</option>
    <option value="Bulgaria">Bulgaria</option>
    <option value="* Burkina Faso">* Burkina Faso</option>
    <option value="* Burma">* Burma</option>
    <option value="* Burundi">* Burundi</option>
    <option value="* Cambodia">* Cambodia</option>
    <option value="Cameroon">Cameroon</option>
    <option value="Canada">Canada</option>
    <option value="Cabo Verde">Cabo Verde</option>
    <option value="* Central African Republic">* Central African Republic</option>
    <option value="* Chad">* Chad</option>
    <option value="Chile">Chile</option>
    <option value="China">China</option>
    <option value="* Colombia">* Colombia</option>
    <option value="* Comoros">* Comoros</option>
    <option value="* Congo, Democratic Republic of the">* Congo, Democratic Republic of the</option>
    <option value="* Congo, Republic of the">* Congo, Republic of the</option>
    <option value="Costa Rica">Costa Rica</option>
    <option value="* Cote d'Ivoire">* Cote d'Ivoire</option>
    <option value="Croatia">Croatia</option>
    <option value="* Cuba">* Cuba</option>
    <option value="Curacao">Curacao</option>
    <option value="Cyprus">Cyprus</option>
    <option value="Czechia">Czechia</option>
    <option value="Denmark">Denmark</option>
    <option value="Djibouti">Djibouti</option>
    <option value="Dominica">Dominica</option>
    <option value="* Dominican Republic">* Dominican Republic</option>
    <option value="East Timor (see Timor-Leste)">East Timor (see Timor-Leste)</option>
    <option value="Ecuador">Ecuador</option>
    <option value="Egypt">Egypt</option>
    <option value="El Salvador">El Salvador</option>
    <option value="* Equatorial Guinea">* Equatorial Guinea</option>
    <option value="* Eritrea">* Eritrea</option>
    <option value="Estonia">Estonia</option>
    <option value="Eswatini">Eswatini</option>
    <option value="Ethiopia">Ethiopia</option>
    <option value="Fiji">Fiji</option>
    <option value="Finland">Finland</option>
    <option value="France">France</option>
    <option value="Gabon">Gabon</option>
    <option value="Gambia, The">Gambia, The</option>
    <option value="Georgia">Georgia</option>
    <option value="Germany">Germany</option>
    <option value="Ghana">Ghana</option>
    <option value="Greece">Greece</option>
    <option value="Grenada">Grenada</option>
    <option value="Guatemala">Guatemala</option>
    <option value="* Guinea">* Guinea</option>
    <option value="* Guinea-Bissau">* Guinea-Bissau</option>
    <option value="Guyana">Guyana</option>
    <option value="* Haiti">* Haiti</option>
    <option value="Holy See">Holy See</option>
    <option value="Honduras">Honduras</option>
    <option value="Hong Kong">Hong Kong</option>
    <option value="Hungary">Hungary</option>
    <option value="Iceland">Iceland</option>
    <option value="India">India</option>
    <option value="Indonesia">Indonesia</option>
    <option value="* Iran">* Iran</option>
    <option value="* Iraq">* Iraq</option>
    <option value="Ireland">Ireland</option>
    <option value="Israel">Israel</option>
    <option value="Italy">Italy</option>
    <option value="Jamaica">Jamaica</option>
    <option value="Japan">Japan</option>
    <option value="Jordan">Jordan</option>
    <option value="Kazakhstan">Kazakhstan</option>
    <option value="Kenya">Kenya</option>
    <option value="Kiribati">Kiribati</option>
    <option value="Korea, North">Korea, North</option>
    <option value="Korea, South">Korea, South</option>
    <option value="* Kosovo">* Kosovo</option>
    <option value="Kuwait">Kuwait</option>
    <option value="Kyrgyzstan">Kyrgyzstan</option>
    <option value="* Laos">* Laos</option>
    <option value="* Latvia">* Latvia</option>
    <option value="* Lebanon">* Lebanon</option>
    <option value="* Lesotho">* Lesotho</option>
    <option value="* Liberia">* Liberia</option>
    <option value="* Libya">* Libya</option>
    <option value="Liechtenstein">Liechtenstein</option>
    <option value="Lithuania">Lithuania</option>
    <option value="Luxembourg">Luxembourg</option>
    <option value="Macau">Macau</option>
    <option value="* Madagascar">* Madagascar</option>
    <option value="Malawi">Malawi</option>
    <option value="Malaysia">Malaysia</option>
    <option value="Maldives">Maldives</option>
    <option value="* Mali">* Mali</option>
    <option value="Malta">Malta</option>
    <option value="Marshall Islands">Marshall Islands</option>
    <option value="Mauritania">Mauritania</option>
    <option value="* Mauritius">* Mauritius</option>
    <option value="Mexico">Mexico</option>
    <option value="Micronesia">Micronesia</option>
    <option value="Moldova">Moldova</option>
    <option value="Monaco">Monaco</option>
    <option value="Mongolia">Mongolia</option>
    <option value="* Montenegro">* Montenegro</option>
    <option value="Morocco">Morocco</option>
    <option value="Mozambique">Mozambique</option>
    <option value="Namibia">Namibia</option>
    <option value="Nauru">Nauru</option>
    <option value="Nepal">Nepal</option>
    <option value="Netherlands">Netherlands</option>
    <option value="New Zealand">New Zealand</option>
    <option value="* Nicaragua">* Nicaragua</option>
    <option value="Niger">Niger</option>
    <option value="* Nigeria">* Nigeria</option>
    <option value="* North Korea">* North Korea</option>
    <option value="* North Macedonia">* North Macedonia</option>
    <option value="Norway">Norway</option>
    <option value="Oman">Oman</option>
    <option value="Pakistan">Pakistan</option>
    <option value="Palau">Palau</option>
    <option value="Palestinian Territories">Palestinian Territories</option>
    <option value="* Panama">* Panama</option>
    <option value="Papua New Guinea">Papua New Guinea</option>
    <option value="Paraguay">Paraguay</option>
    <option value="Peru">Peru</option>
    <option value="Philippines">Philippines</option>
    <option value="Poland">Poland</option>
    <option value="Portugal">Portugal</option>
    <option value="Qatar">Qatar</option>
    <option value="Romania">Romania</option>
    <option value="* Russia">* Russia</option>
    <option value="Rwanda">Rwanda</option>
    <option value="Saint Kitts and Nevis">Saint Kitts and Nevis</option>
    <option value="Saint Lucia">Saint Lucia</option>
    <option value="Saint Vincent and the Grenadines">Saint Vincent and the Grenadines</option>
    <option value="Samoa">Samoa</option>
    <option value="San Marino">San Marino</option>
    <option value="Sao Tome and Principe">Sao Tome and Principe</option>
    <option value="Saudi Arabia">Saudi Arabia</option>
    <option value="Senegal">Senegal</option>
    <option value="* Serbia">* Serbia</option>
    <option value="Seychelles">Seychelles</option>
    <option value="Sierra Leone">Sierra Leone</option>
    <option value="Singapore">Singapore</option>
    <option value="Sint Maarten">Sint Maarten</option>
    <option value="Slovakia">Slovakia</option>
    <option value="* Slovenia">* Slovenia</option>
    <option value="Solomon Islands">Solomon Islands</option>
    <option value="* Somalia">* Somalia</option>
    <option value="South Africa">South Africa</option>
    <option value="South Korea">South Korea</option>
    <option value="* South Sudan">* South Sudan</option>
    <option value="Sri Lanka">Sri Lanka</option>
    <option value="* Sudan">* Sudan</option>
    <option value="Suriname">Suriname</option>
    <option value="Swaziland">Swaziland</option>
    <option value="Sweden">Sweden</option>
    <option value="Switzerland">Switzerland</option>
    <option value="* Syria">* Syria</option>
    <option value="Taiwan">Taiwan</option>
    <option value="Tajikistan">Tajikistan</option>
    <option value="Tanzania">Tanzania</option>
    <option value="Thailand">Thailand</option>
    <option value="Timor-Leste">Timor-Leste</option>
    <option value="Togo">Togo</option>
    <option value="Tonga">Tonga</option>
    <option value="Trinidad and Tobago">Trinidad and Tobago</option>
    <option value="* Tunisia">* Tunisia</option>
    <option value="* Turkey">* Turkey</option>
    <option value="Turkmenistan">Turkmenistan</option>
    <option value="Tuvalu">Tuvalu</option>
    <option value="* Uganda">* Uganda</option>
    <option value="* Ukraine">* Ukraine</option>
    <option value="United Arab Emirates">United Arab Emirates</option>
    <option value="United Kingdom">United Kingdom</option>
    <option value="Uruguay">Uruguay</option>
    <option value="Uzbekistan">Uzbekistan</option>
    <option value="Vanuatu">Vanuatu</option>
    <option value="* Venezuela">* Venezuela</option>
    <option value="Vietnam">Vietnam</option>
    <option value="Yemen">Yemen</option>
    <option value="Zambia">Zambia</option>
    <option value="* Zimbabwe">* Zimbabwe</option>
    </select>
    </div>
    
    <div class=formbox id=usstatebox>
    <div class=fieldname><label for=ifstate
    >\xBFEn qu\xE9 pa\xEDs o territorio resides?</label>
    <span class=required>*</span></div>
    <select id=ifstate class=formselect>
    <option value=""></option>
    <option value="AL">Alabama</option>
    <option value="AK">Alaska</option>
    <option value="AZ">Arizona</option>
    <option value="AR">Arkansas</option>
    <option value="AS">American Samoa</option>
    <option value="CA">California</option>
    <option value="CO">Colorado</option>
    <option value="CT">Connecticut</option>
    <option value="DE">Delaware</option>
    <option value="FL">Florida</option>
    <option value="GA">Georgia</option>
    <option value="GU">Guam</option>
    <option value="HI">Hawaii</option>
    <option value="ID">Idaho</option>
    <option value="IL">Illinois</option>
    <option value="IN">Indiana</option>
    <option value="IA">Iowa</option>
    <option value="KS">Kansas</option>
    <option value="KY">Kentucky</option>
    <option value="LA">Louisiana</option>
    <option value="ME">Maine</option>
    <option value="MD">Maryland</option>
    <option value="MA">Massachusetts</option>
    <option value="MI">Michigan</option>
    <option value="MN">Minnesota</option>
    <option value="MS">Mississippi</option>
    <option value="MO">Missouri</option>
    <option value="MT">Montana</option>
    <option value="NE">Nebraska</option>
    <option value="NV">Nevada</option>
    <option value="NH">New Hampshire</option>
    <option value="NJ">New Jersey</option>
    <option value="NM">New Mexico</option>
    <option value="NY">New York</option>
    <option value="NC">North Carolina</option>
    <option value="ND">North Dakota</option>
    <option value="MP">Northern Mariana Islands</option>
    <option value="OH">Ohio</option>
    <option value="OK">Oklahoma</option>
    <option value="OR">Oregon</option>
    <option value="PA">Pennsylvania</option>
    <option value="PR">Puerto Rico</option>
    <option value="RI">Rhode Island</option>
    <option value="SC">South Carolina</option>
    <option value="SD">South Dakota</option>
    <option value="TN">Tennessee</option>
    <option value="TX">Texas</option>
    <option value="VI">U.S. Virgin Islands</option>
    <option value="UT">Utah</option>
    <option value="VT">Vermont</option>
    <option value="VA">Virginia</option>
    <option value="WA">Washington</option>
    <option value="WV">West Virginia</option>
    <option value="WI">Wisconsin</option>
    <option value="WY">Wyoming</option>
    </select>
    </div>
    
    <div class=formbox>
    <div class=fieldname><label for=ifcity
    >\xBFEn qu\xE9 ciudad vives?</label>
    <span class=optional
    >(Opcional)</span>
    </div>
    <input id=ifcity class=formtext />
    </div>
    
    <div class=formbox>
    <div class=fieldname><label for=ifaccent
    >\xBFC\xF3mo describir\xEDas tu acento?</label>
    <span class=optional
    >(Opcional)</span>
    </div>
    <input id=ifaccent class=formtext />
    </div>
    
    <div class=sectiontitle
    >Informaci\xF3n adicional</div>
    
    <div class=formbox>
    <div class=fieldname><label for=ifreferral
    >Cu\xE9ntanos c\xF3mo conociste este proyecto</label>
    <span class=optional
    >(Opcional)</span>
    </div>
    <input id=ifreferral class=formtext />
    </div>
    
    <div class=formbox role=radiogroup id=ifgendergroup style="display: none;">
    <div class=fieldname><label for=ifgendergroup
    >\xBFCu\xE1l es tu sexo?</label>
    <span class=optional
    >(Opcional)</span>
    </div>
    <div class=checkboxrow>
    <input type=radio name=ifgender id=ifgenderfemale />
    <label for=ifgenderfemale
    >Mujer</label>
    </div>
    <div class=checkboxrow>
    <input type=radio name=ifgender id=ifgendermale />
    <label for=ifgendermale
    >Hombre</label>
    </div>
    <div class=checkboxrow>
    <input type=radio name=ifgender id=ifgenderno />
    <label for=ifgenderno
    >Prefiero no decirlo</label>
    </div>
    <div class=checkboxrow>
    <input type=radio name=ifgender id=ifgenderother />
    <label for=ifgenderother
    >Otro:</label>
    <input type=text class=formtext id=ifgenderothertext />
    </div>
    </div>
    
    <div class=formbox style="display: none;">
    <div class=fieldname><label for=ifrace
    >\xBFA qu\xE9 raza perteneces?</label>
    <span class=optional
    >(Opcional)</span>
    </div>
    <input id=ifrace class=formtext />
    </div>
    
    <div class=formbox>
    <div class=fieldname
    >\xBFA cu\xE1l de estos dispositivos tienes acceso?
    <span class=optional
    >(Opcional)</span>
    </div>
    <div class=checkboxrow>
    <input type=checkbox id=ifdevicecomputer />
    <label for=ifdevicecomputer
    >Un ordenador con conexi\xF3n a Internet, micr\xF3fono y altavoces</label>
    </div>
    <div class=checkboxrow>
    <input type=checkbox id=ifdeviceandroid />
    <label for=ifdeviceandroid
    >Un tel\xE9fono o tablet Android (por ejemplo, Samsung, Pixel, Nexus, etc.)</label>
    </div>
    <div class=checkboxrow>
    <input type=checkbox id=ifdeviceiphone />
    <label for=ifdeviceiphone
    >Un iPhone o un iPad</label>
    </div>
    <div class=checkboxrow>
    <input type=checkbox id=ifdevicenone />
    <label for=ifdevicenone
    >Ninguno de los anteriores</label>
    </div>
    <div class=checkboxrow>
    <input type=checkbox id=ifdeviceother />
    <label for=ifdeviceother
    >Otro:</label>
    <input type=text class=formtext id=ifdeviceothertext aria-labelledby="ifdeviceotherlabel" />
    </div>
    </div>
    
    <div class=formbox id=helperbox>
    <div class=fieldname
    >\xBFTe va a ayudar alguien a grabar las muestras de voz?
    <span class=required>*</span></div>
    <div class=fielddescription
    >Por ejemplo, un familiar, un logopeda u otra persona</div>
    <div class=checkboxrow>
    <input type=radio name=ifhelper id=ifhelperno selected />
    <label for=ifhelperno
    >No, voy a participar de forma independiente</label>
    </div>
    <div class=checkboxrow>
    <input type=radio name=ifhelper id=ifhelperyes />
    <label for=ifhelperyes
    >S\xED, me va a ayudar alguien, y esa persona est\xE1 de acuerdo con que comparta su informaci\xF3n</label>
    </div>
    </div>
    
    <!-- Helper panel appears if the user chooses "yes" above -->
    <div id=helpersection>
    <div class=sectiontitle
    >Informaci\xF3n sobre la persona que te va a ayudar</div>
    <div class=formbox>
    <div class=fielddescription>
    Nos gustar\xEDa que nos proporcionases un poco de informaci\xF3n sobre la persona que te va a ayudar para que podamos estar en contacto con ambos m\xE1s f\xE1cilmente. Al incluir el nombre de tu asistente, aceptas que reciba informaci\xF3n sobre tu participaci\xF3n en este proyecto. Puedes incluir m\xE1s de un asistente y un correo electr\xF3nico. Basta con separarlos con una coma.
    </div>
    </div>
    
    <div class=formbox>
    <div class=fieldname><label for=ifassistantname
    >Nombre del asistente</label>
    <span class=optional
    >(Opcional)</span>
    </div>
    <input type=text class=formtext id=ifassistantname />
    </div>
    
    <div class=formbox>
    <div class=fieldname><label for=ifassistantemail
    >Direcci\xF3n de correo electr\xF3nico del asistente</label>
    <span class=required>*</span></div>
    <input type=text class=formtext id=ifassistantemail />
    </div>
    
    <div class=formbox>
    <div class=fieldname><label for=ifassistantrelationship
    >\xBFQu\xE9 relaci\xF3n tienes con esta persona?</label>
    <span class=optional
    >(Opcional)</span>
    </div>
    <div class=fielddescription
    >Por ejemplo, cuidador, amigo, familiar, logopeda, etc.</div>
    <input type=text class=formtext id=ifassistantrelationship />
    </div>
    </div>
    
    <div class=sectiontitle
    >Proyecto Google Euphonia: consentimiento</div>
    
    <div class=forminfobox>
    <div class=fieldname
    >Cuestionario para recoger informaci\xF3n personal identificable sensible</div>
    <div class=fielddescription>
    El objetivo de este cuestionario es verificar que cumples los requisitos para participar en una iniciativa de recogida de datos que realizar\xE1 Google pr\xF3ximamente. La finalidad de la recogida ser\xE1 ayudar a Google a dise\xF1ar, investigar, desarrollar y mejorar la accesibilidad de sus productos y servicios (actuales y futuros) relacionados con tecnolog\xEDas de voz.
    La informaci\xF3n que proporciones en este cuestionario se puede combinar con otra informaci\xF3n y otros datos que decidas proporcionar durante la recogida de datos si se te selecciona para participar.
    </div>
    </div>
    
    <div class=formbox>
    <div class=fieldname>
    Con tu consentimiento, Google recoger\xE1 y tratar\xE1 la informaci\xF3n personal que decidas proporcionar a) cuando env\xEDes este cuestionario y b) si se te selecciona para participar en el proyecto, cuando colabores en las tareas de recogida de datos, incluida la informaci\xF3n sobre el uso que haces de tecnolog\xEDa asistencial, tu discapacidad o trastorno del habla y tus patrones de voz.
    <span class=required>*</span>
    </div>
    <div class=checkboxrow>
    <input type=checkbox id=ifformconsent />
    <label for=ifformconsent>
    Doy mi consentimiento e incluyo mis iniciales aqu\xED:
    </label>
    <input type=text class=formtext id=ifconsentinitials aria-labelledby="ifformconsentlabel" />
    </div>
    </div>
    
    <div class=formbox>
    <div class=fieldname>
    Revisa nuestros T\xE9rminos y Condiciones, y nuestra Pol\xEDtica de Privacidad
    <span class=required>*</span>
    </div>
    <div class=checkboxrow>
    <input type=checkbox id=ifformtos />
    <label for=ifformtos>
    Acepto los
    <a target="_blank" href="https://www.google.com/policies/terms/"
    >T\xE9rminos y Condiciones</a>
    y soy consciente de que mi informaci\xF3n se va a utilizar para investigar, desarrollar y mejorar productos relacionados con tecnolog\xEDas del habla de acuerdo con
    <a target="_blank" href="https://www.google.com/policies/privacy/"
    >la Pol\xEDtica de Privacidad de Google</a>
    .
    </label>
    </div>
    </div>
    
    <div class=forminfobox>
    <div class=fieldname>
    Al enviar este formulario, das tu consentimiento a Google y a sus entidades asociadas para que se pongan en contacto contigo por correo electr\xF3nico.
    </div>
    </div>
    
    <div class=formbox>
    <div class=fieldname><label for=ifotherinfo>
    \xBFHay alguna otra informaci\xF3n que quieras compartir con nosotros?
    </label>
    <span class=optional
    >(Opcional)</span>
    </div>
    <input id=ifotherinfo class=formtext />
    </div>

    `
    }
  ];

  // ../common/strings_fr.ts
  var FR_STRINGS = [
    {
      key: `PAGE_TITLE`,
      en: `Project Euphonia`,
      description: `Web page title for all pages`,
      text: `Project Euphonia`
    },
    {
      key: `HELP_LINK`,
      description: `Help hyperlink HREF property when the user needs help or has questions.`,
      text: `http://g.co/disabilitysupport`
    },
    {
      key: `WELCOME_TITLE`,
      en: `Welcome to Project Euphonia!`,
      description: `Signup screen and consent screen titles`,
      text: `Bienvenue dans le projet Euphonia\xA0!`
    },
    {
      key: `We're exploring how Google products and services
    that use speech as an input method could work better for more people. We're seeking
    voice contributions from adults who have difficulty being understood by others.
    Voice samples can help us improve how Google understands individuals with speech
    impairments.`,
      description: `Signup screen`,
      text: `Nous \xE9tudions comment les produits et les services Google qui utilisent la saisie vocale pourraient \xEAtre am\xE9lior\xE9s. Nous sommes \xE0 la recherche de contributions vocales provenant d'adultes avec des difficult\xE9s \xE0 se faire comprendre. Ces \xE9chantillons vocaux peuvent nous aider \xE0 am\xE9liorer la compr\xE9hension de Google des personnes souffrant de troubles de la parole.`
    },
    {
      key: `<b>IMPORTANT:</b> If you're filling out
    this form on behalf of someone else, please ensure you have their permission
    to do so.`,
      description: `Signup screen`,
      text: `<b>IMPORTANT</b>\xA0: Si vous remplissez ce formulaire au nom de quelqu'un d'autre, merci de vous assurer que vous avez son autorisation.`
    },
    {
      key: `Questions? <a id=signuphelplink target="_blank">Contact Us</a>`,
      en: `Questions? <a id=signuphelplink target="_blank">Contact Us</a>`,
      description: `Signup screen`,
      text: `Des questions\xA0? 
        <a id=signuphelplink target="_blank"
        >Nous contacter</a>`
    },
    {
      key: `Already enrolled? &nbsp;`,
      description: `Signup screen`,
      text: `D\xE9j\xE0 inscrit\xA0? &nbsp;`
    },
    {
      key: `Click to sign in and continue recording`,
      description: `Signup screen`,
      text: `Cliquez pour vous connecter et continuer \xE0 enregistrer`
    },
    {
      key: `To get started, please confirm your eligibility:`,
      description: `Signup screen`,
      text: `Pour commencer, veuillez confirmer votre \xE9ligibilit\xE9\xA0:`
    },
    {
      key: `Strangers, or voice technologies like Google Assistant, have difficulty understanding my speech (not because of an accent)`,
      description: `Signup screen eligibility question`,
      text: `Les inconnus ou les technologies utilisant la reconnaissance vocale comme l'Assistant\xA0Google ont des difficult\xE9s \xE0 comprendre ce que je dis (pas \xE0 cause d'un accent)`
    },
    {
      key: `I am at least 18 years of age`,
      description: `Signup screen eligibility question`,
      text: `J'ai au moins 18\xA0ans`
    },
    {
      key: `Sign in and continue`,
      description: `Signup screen button`,
      text: `Se connecter et continuer`
    },
    {
      key: `You will need to sign in with your Google
    Account to contribute to the project. If you do not have a Google Account, you can
    create one when you click to continue.`,
      description: `Signup screen instructions`,
      text: `Vous devrez vous connecter avec votre compte\xA0Google pour contribuer \xE0 ce projet. Si vous n'avez pas de compte\xA0Google, vous pourrez en cr\xE9er un en cliquant pour continuer.`
    },
    {
      key: `Next`,
      description: `Interest form button, advance to the next screen`,
      text: `Suivant`
    },
    {
      key: `Go Back`,
      description: `Interest form button, go back to the signup screen`,
      text: `Retour`
    },
    {
      key: `You must type your name to agree to the terms.`,
      description: `Consent form screen, require consent to proceed`,
      text: `Vous devez saisir votre nom pour accepter les conditions.`
    },
    {
      key: `Reset form and start over`,
      description: `Interest form button, clear fields and start over`,
      text: `Recommencer le formulaire depuis le d\xE9but`
    },
    {
      key: `You are enrolling as <b id=whoisenrolling>&nbsp;</b>.
    Please review the following agreement: <span id=consentcounter></span>`,
      description: `Consent screen instructions`,
      text: `Vous allez \xEAtre inscrit en tant que <b id=whoisenrolling>&nbsp;</b>. Veuillez consulter le contrat suivant\xA0: <span id=consentcounter></span>`
    },
    {
      key: `Enroll`,
      description: `Consent screen, final action; consents to the program and allows recording`,
      text: `S'inscrire`
    },
    {
      key: `Next Agreement`,
      description: `Consent screen, to agree to the current consent and then see the next one. Only shows when there are multiple consents`,
      text: `Contrat suivant`
    },
    {
      key: `INSTRUCTIONS_TITLE`,
      en: `Thanks for signing up for Project Euphonia!`,
      description: `Instructions screen title`,
      text: `Merci de vous \xEAtre inscrit dans le projet Euphonia\xA0!`
    },
    {
      key: `INSTRUCTIONS_VIDEO_HTML`,
      description: `Instructional video iframe from YouTube`,
      text: `
    <iframe width="560" height="315" src="https://www.youtube.com/embed/sMLED9xrLts"
        title="YouTube video player" frameborder="0"
        allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
    `
    },
    {
      key: `INSTRUCTIONS_HTML`,
      en: `    <ul>
    <li>Please take a moment to watch this video introduction.</li>
    <li>On the next screen, you'll see <b>cards</b> to read aloud.</li>
    <li>You'll want to be in a <b>quiet setting</b> and avoid any background noise.</li>
    <li>You'll press the blue Record button, and then <b>read the
    card aloud</b>, as accurately as possible.</li>
    <li>When you are <b>finished speaking</b>, press the blue button again to stop recording.</li>
    <li>When you finish recording all the cards, you're done!</li>
    <li>Having trouble recording? <a target="_blank" href="http://g.co/disabilitysupport">Contact us</a> for help.</li>`,
      description: `Instructions screen details`,
      text: `<ul>
      <li>Merci de prendre quelques minutes pour visionner cette pr\xE9sentation vid\xE9o.</li>
      <li>Sur l'\xE9cran suivant, vous devrez lire des <b>fiches</b> \xE0 voix haute.</li> 
      <li>Pour ce faire, trouvez un <b>endroit calme</b> et sans bruits de fond.</li> 
      <li>Apr\xE8s avoir appuy\xE9 sur le bouton d'enregistrement (de couleur bleue), <b>lisez la fiche \xE0 voix haute</b> aussi pr\xE9cis\xE9ment que possible.</li> 
      <li>Lorsque vous avez <b>termin\xE9 de parler</b>, appuyez \xE0 nouveau sur le bouton bleu pour finir l'enregistrement.</li> <li>Une fois un \xE9chantillon enregistr\xE9 pour chacune des fiches, vous aurez termin\xE9\xA0!</li> <li>Vous rencontrez des probl\xE8mes d'enregistrement\xA0? <a target="_blank" href="http://g.co/disabilitysupport">Contactez-nous</a> pour obtenir de l'aide.</li>`
    },
    {
      key: `Get Started`,
      description: `Instructions screen button to continue to next screen`,
      text: `Commencer`
    },
    {
      key: `Microphone Setup`,
      description: `Microphone and settings screen title`,
      text: `Configuration du micro`
    },
    {
      key: `
    In order to record your speech, we need permission to use your microphone
    through your web browser. <b>Please click "Allow"</b> to grant use of your microphone.`,
      description: `Microphone permission instructions`,
      text: `Afin d'enregistrer votre voix, Euphonia n\xE9cessite l'autorisation d'utiliser votre micro depuis votre navigateur. <b>Veuillez cliquer sur "Autoriser"</b> pour autoriser l'utilisation du micro.`
    },
    {
      key: `
    We could not access your microphone due to a permission problem. You'll need to allow access
    in order to continue.`,
      description: `Microphone permission error message`,
      text: `Euphonia n'a pas pu acc\xE9der \xE0 votre micro en raison d'un probl\xE8me d'autorisation. Vous devez autoriser l'acc\xE8s au micro pour continuer.`
    },
    {
      key: `
    It looks like your microphone permission is blocked. You'll need to <b>allow access</b>
    by clicking the <b>address bar of your browser</b>, and/or <b>reset permission</b> for the microphone.`,
      description: `Microphone permission error message`,
      text: `Il semblerait que l'autorisation d'acc\xE8s au micro n'est pas disponible. Merci d'<b>autoriser l'acc\xE8s</b> en cliquant sur la <b>barre d'adresse de votre navigateur</b>, et/ou en <b>r\xE9initialisant l'autorisation</b> de votre micro.`
    },
    {
      key: `
    Your microphone is all set! You can start recording as soon as you're ready.`,
      description: `Microphone permission success message`,
      text: `Votre micro est pr\xEAt \xE0 l'emploi\xA0! L'enregistrement peut commencer quand vous le souhaitez.`
    },
    {
      key: `Use the default microphone`,
      description: `Let's the user choose the browser's default recording device instead of picking one explicitly`,
      text: `Utiliser le micro par d\xE9faut`
    },
    {
      key: `Save`,
      description: `Microphone configuration screen, accept changes to microphone device`,
      text: `Sauvegarder`
    },
    {
      key: `Try again`,
      description: `Microphone permission failure retry button`,
      text: `R\xE9essayer`
    },
    {
      key: `Start recording!`,
      description: `Microphone setup screen button, continue to recording screen`,
      text: `Lancez l'enregistrement\xA0!`
    },
    {
      key: `Microphone settings`,
      description: `Microphone setup screen title`,
      text: `Param\xE8tres du micro`
    },
    {
      key: `Previous card`,
      description: `Recording screen button, go back to prior card`,
      text: `Fiche pr\xE9c\xE9dente`
    },
    {
      key: `Next card`,
      description: `Recording screen button, go forward to next card`,
      text: `Fiche suivante`
    },
    {
      key: `Replay`,
      description: `Recording screen button, listen to previously recorded audio`,
      text: `Rejouer`
    },
    {
      key: `Stop`,
      description: `Recording screen button, to interrupt a recording that's currently being played back`,
      text: `Stop`
    },
    {
      key: `Delete`,
      description: `Recording screen button, delete a previous recording`,
      text: `Supprimer`
    },
    {
      key: `Deleting...`,
      description: `Recording screen button, shown briefly while the recording is being deleted`,
      text: `Suppression\u2026`
    },
    {
      key: `Record`,
      description: `Recording screen button, record audio for a card`,
      text: `Enregistrer`
    },
    {
      key: `Record Again`,
      description: `Recording screen button, record audio for a card that already has been recorded`,
      text: `R\xE9enregistrer`
    },
    {
      key: `(this card is done)`,
      description: `Labels tasks that have already been recorded once`,
      text: `(cette fiche est termin\xE9e)`
    },
    {
      key: `Cancel`,
      description: `Recording screen button and microphone setting screen button, cancel recording / microphone changes`,
      text: `Annuler`
    },
    {
      key: `Done`,
      description: `Recording screen button, shown while recording to end the recording and start uploading it`,
      text: `OK`
    },
    {
      key: `Starting...`,
      description: `Recording screen button, shown briefly just before the microphone starts listening`,
      text: `D\xE9marrage\u2026`
    },
    {
      key: `Now recording...`,
      description: `Recording screen button, shown briefly just before the microphone starts listening`,
      text: `Enregistrement en cours\u2026`
    },
    {
      key: `Recording uploaded!`,
      description: `Recording screen message when the recording uploaded successfully`,
      text: `Enregistrement import\xE9\xA0!`
    },
    {
      key: `Recording uploaded! Here's the next card.`,
      description: `Recording screen message when the recording uploads successfully and the next card is automatically displayed`,
      text: `Enregistrement import\xE9\xA0! C'est parti pour la fiche suivante.`
    },
    {
      key: `Recording deleted.`,
      description: `Recording screen message when a recording has just been deleted`,
      text: `Enregistrement supprim\xE9.`
    },
    {
      key: `Recording canceled.`,
      description: `Recording screen message when a recording has just been canceled`,
      text: `Enregistrement annul\xE9.`
    },
    {
      key: `No recording to delete.`,
      description: `Error message when the user deletes but nothing is selected.`,
      text: `Aucun enregistrement \xE0 supprimer.`
    },
    {
      key: `No recording to play.`,
      description: `Error message when the user replays but nothing is selected.`,
      text: `Aucun enregistrement \xE0 jouer.`
    },
    {
      key: `Upload failed, your audio may not be saved.`,
      description: `Error message when the user's recording was not received by the server.`,
      text: `L'importation a \xE9chou\xE9, votre enregistrement peut ne pas \xEAtre sauvegard\xE9.`
    },
    {
      key: `Canceling...`,
      description: `Recording screen button, shown briefly when the recording is being canceled`,
      text: `Annulation\u2026`
    },
    {
      key: `Uploading...`,
      description: `Recording screen button, shown briefly when the recording is being uploaded`,
      text: `Importation\u2026`
    },
    {
      key: `?`,
      description: `Recording screen button, go to help screen`,
      text: `?`
    },
    {
      key: `&#x1F50A;`,
      description: `Speak prompt button, which uses computerized speech to play the prompt audibly`,
      text: `&#x1F50A;`
    },
    {
      key: `Continue`,
      description: `Sign up screen and consent screen buttons, continue to the next page`,
      text: `Continuer`
    },
    {
      key: `No assignments`,
      description: `Recording screen, message when the user has no cards to work on`,
      text: `Aucune attribution`
    },
    {
      key: `<b>{number_of_completed_cards}</b> of <b>{total_number_of_tasks_needed}</b> cards <b>done</b>`,
      description: `Recording screen, progress message of tasks completed so far`,
      text: `<b>{number_of_completed_cards}</b>\xA0sur <b>{total_number_of_tasks_needed}</b>\xA0fiche(s) <b>termin\xE9e(s)</b>`
    },
    {
      key: `Thank you!`,
      description: `Done screen title, shown when the user has finished at least one pass`,
      text: `Merci\xA0!`
    },
    {
      key: `          Great work! You've gone through the cards once, and recorded
    <b class=count>{number_of_completed_cards} cards</b>
    out of the total (<b>{total_number_of_tasks_needed} cards</b>).
    When you're ready, you can click the button below to finish up the rest of the cards.      `,
      description: `Done screen instructions, asks the user to go finish the rest of the cards`,
      text: `Bravo\xA0! Vous avez fait le tour des fiches et enregistr\xE9 un \xE9chantillon pour <b class=count>{number_of_completed_cards}\xA0fiches</b> (sur un total de <b>{total_number_of_tasks_needed}\xA0fiches</b>). Lorsque vous \xEAtes pr\xEAt, cliquez sur le bouton situ\xE9 ci-dessous pour proc\xE9der \xE0 l'enregistrement du reste des fiches.`
    },
    {
      key: `          You're almost done! You've gone through the cards once, and recorded
    <b class=count>{number_of_completed_cards} cards</b>
    out of the total (<b>{total_number_of_tasks_needed} cards</b>).
    When you're ready, you can click the button below to finish up the rest of the cards.      `,
      description: `Done screen instructions, asks the user to go finish the rest of the cards. This version displays when the user has done more than 75% of the work.`,
      text: `Vous avez presque termin\xE9\xA0! Vous avez fait le tour des fiches et enregistr\xE9 un \xE9chantillon pour <b class=count>{number_of_completed_cards}\xA0fiches</b> (sur un total de <b>{total_number_of_tasks_needed}\xA0fiches</b>). Lorsque vous \xEAtes pr\xEAt, cliquez sur le bouton situ\xE9 ci-dessous pour proc\xE9der \xE0 l'enregistrement du reste des fiches.`
    },
    {
      key: `Continue Recording`,
      description: `Done screen and instructions screen buttons, return to the recording screen`,
      text: `Continuer d'enregistrer`
    },
    {
      key: `Continue recording!`,
      description: `Microphone settings screen, return to the recording screen`,
      text: `Continuer d'enregistrer\xA0!`
    },
    {
      key: `You previously indicated that you are eligible.`,
      description: `Signup screen, a message showing that the participant has already completed this form`,
      text: `Vous avez d\xE9j\xE0 confirm\xE9 votre \xE9ligibilit\xE9.`
    },
    {
      key: `You have already completed this form.`,
      description: `Interest form screen, a message showing that the participant has already completed this form`,
      text: `Vous avez d\xE9j\xE0 compl\xE9t\xE9 ce formulaire.`
    },
    {
      key: `Country is required.`,
      description: `Interest form screen, a message showing that a required field needs to be filled in.`,
      text: `Veuillez saisir un pays.`
    },
    {
      key: `State is required.`,
      description: `Interest form screen, a message showing that a required field needs to be filled in.`,
      text: `Veuillez indiquer l'\xE9tat.`
    },
    {
      key: `Please tell us if someone will be helping you record.`,
      description: `Interest form screen, a message showing that a required field needs to be filled in.`,
      text: `Veuillez indiquer si quelqu'un vous aidera \xE0 enregistrer.`
    },
    {
      key: `Please tell us how to email the person helping you.`,
      description: `Interest form screen, a message showing that a required field needs to be filled in.`,
      text: `Merci de nous indiquer comment contacter cette personne par e-mail.`
    },
    {
      key: `You'll need to give consent to proceed.`,
      description: `Interest form screen, a message showing that a required field needs to be filled in.`,
      text: `Vous devrez donner votre accord avant de commencer.`
    },
    {
      key: `Please write your initials next to your consent.`,
      description: `Interest form screen, a message showing that a required field needs to be filled in.`,
      text: `Veuillez saisir vos initiales \xE0 c\xF4t\xE9 de votre autorisation.`
    },
    {
      key: `You'll need to accept the terms to proceed.`,
      description: `Interest form screen, a message showing that a required field needs to be filled in.`,
      text: `Vous devrez accepter les conditions avant de commencer.`
    },
    {
      key: `You have already consented.`,
      description: `Consent screen, a message showing that the participant has already completed this form`,
      text: `Vous avez d\xE9j\xE0 donn\xE9 votre autorisation.`
    },
    {
      key: `By typing my name here, I agree to these terms:`,
      description: `Consent screen, indicates that the participant consents`,
      text: `En inscrivant mon nom ici, j'accepte les conditions suivantes\xA0:`
    },
    {
      key: `&nbsp;(Agreement {which_agreement_number} of {total_number_of_agreements})`,
      description: ``,
      text: `&nbsp;(Contrat {which_agreement_number}\xA0sur\xA0{total_number_of_agreements})`
    },
    {
      key: `Congratulations! You're all done!`,
      description: `Progress bar display when there are no tasks left to do`,
      text: `F\xE9licitations, vous avez termin\xE9\xA0!`
    },
    {
      key: `Congratulations!`,
      description: `Title of the done screen`,
      text: `F\xE9licitations\xA0!`
    },
    {
      key: `Review Recordings (optional)`,
      description: `Button on done screen which returns to the recording screen, if the user wants to listen to recordings`,
      text: `Passer les enregistrements en revue (facultatif)`
    },
    {
      key: `
    You have completed all your cards! We'll be reviewing them soon, and if everything
    looks good, you'll be receiving an email from rewards@perks.com within the next 7-10
    business days with a link to claim your gift card.
    <br/><br/>
    <b>Thank you for contributing <b class=count>{number_of_completed_cards} cards</b> to the project!</b>
    <br/><br/>
    (If you wish, you can now go back and review your recordings, but this is not necessary. <b>You're done!</b>)`,
      description: `Descriptive text on the done screen`,
      text: `Vous avez termin\xE9 l'int\xE9gralit\xE9 des fiches\xA0! Nous examinerons vos enregistrements dans les plus brefs d\xE9lais, et si tout semble correct, vous recevrez un e-mail de rewards@perks.com d'ici 7\xA0\xE0 10\xA0jours ouvr\xE9s contenant un lien pour obtenir votre carte cadeau. <br/><br/> <b>Un grand merci pour votre contribution sur <b class=count>{number_of_completed_cards} cartes</b> pour le projet Euphonia\xA0!</b> <br/><br/> (Si vous le souhaitez, et bien que cela ne soit pas n\xE9cessaire, il vous est maintenant possible de revenir en arri\xE8re et de passer vos enregistrements en revue. <b>Vous avez termin\xE9\xA0!</b>)`
    },
    {
      key: `__INTEREST_FORM_HTML__`,
      description: `The HTML for the interest form; all HTML IDs must be intact exactly as is!`,
      // Each translatable string is on a line by itself to make it a little easier to translate
      text: `

    <div class=title
    >Google projet Euphonia\xA0: formulaire de participation</div>
    <div class=sectiontitle
    >\xC0 propos de vous</div>
    <div class=formbox>
    <div class=fieldname><label for=ifname
    >Nom</label>
    <span class=optional
    >(Facultatif)</span>
    </div>
    <div class=fielddescription
    >Surnom, pr\xE9nom et nom de famille, pr\xE9nom uniquement, etc. Dites-nous comment vous pr\xE9f\xE9rez que l'on s'adresse \xE0 vous\xA0!</div>
    <input id=ifname class=formtext />
    </div>
    
    <div class=formbox>
    <div class=fieldname><label for=ifcountry
    >Dans quel pays vivez-vous\xA0?</label>
    <span class=required>*</span></div>
    <div class=fielddescription
    >IMPORTANT, VEUILLEZ NOTER\xA0: Nous sommes malheureusement dans l'impossibilit\xE9 d'envoyer des cartes cadeaux aux r\xE9sidents des pays ci-dessous suivis d'un ast\xE9risque (*). Si vous r\xE9sidez au sein d'un des pays concern\xE9s, il vous est toujours possible de participer au projet Euphonia. Nous vous informerons si et quand vous serez \xE9ligibles \xE0 des cartes cadeaux.
    </div>
    <select id=ifcountry class=formselect>
    <option value="France">France</option>
    <option value="USA">United States of America</option>
    <option value="* Afghanistan">* Afghanistan</option>
    <option value="* Albania">* Albania</option>
    <option value="Algeria">Algeria</option>
    <option value="Andorra">Andorra</option>
    <option value="Angola">Angola</option>
    <option value="Antigua and Barbuda">Antigua and Barbuda</option>
    <option value="Argentina">Argentina</option>
    <option value="Armenia">Armenia</option>
    <option value="Aruba">Aruba</option>
    <option value="Australia">Australia</option>
    <option value="Austria">Austria</option>
    <option value="Azerbaijan">Azerbaijan</option>
    <option value="* Bahamas, The">* Bahamas, The</option>
    <option value="Bahrain">Bahrain</option>
    <option value="Bangladesh">Bangladesh</option>
    <option value="* Barbados">* Barbados</option>
    <option value="* Belarus">* Belarus</option>
    <option value="Belgium">Belgium</option>
    <option value="Belize">Belize</option>
    <option value="* Benin">* Benin</option>
    <option value="Bhutan">Bhutan</option>
    <option value="Bolivia">Bolivia</option>
    <option value="* Bosnia and Herzegovina">* Bosnia and Herzegovina</option>
    <option value="Botswana">Botswana</option>
    <option value="Brazil">Brazil</option>
    <option value="Brunei">Brunei</option>
    <option value="Bulgaria">Bulgaria</option>
    <option value="* Burkina Faso">* Burkina Faso</option>
    <option value="* Burma">* Burma</option>
    <option value="* Burundi">* Burundi</option>
    <option value="* Cambodia">* Cambodia</option>
    <option value="Cameroon">Cameroon</option>
    <option value="Canada">Canada</option>
    <option value="Cabo Verde">Cabo Verde</option>
    <option value="* Central African Republic">* Central African Republic</option>
    <option value="* Chad">* Chad</option>
    <option value="Chile">Chile</option>
    <option value="China">China</option>
    <option value="* Colombia">* Colombia</option>
    <option value="* Comoros">* Comoros</option>
    <option value="* Congo, Democratic Republic of the">* Congo, Democratic Republic of the</option>
    <option value="* Congo, Republic of the">* Congo, Republic of the</option>
    <option value="Costa Rica">Costa Rica</option>
    <option value="* Cote d'Ivoire">* Cote d'Ivoire</option>
    <option value="Croatia">Croatia</option>
    <option value="* Cuba">* Cuba</option>
    <option value="Curacao">Curacao</option>
    <option value="Cyprus">Cyprus</option>
    <option value="Czechia">Czechia</option>
    <option value="Denmark">Denmark</option>
    <option value="Djibouti">Djibouti</option>
    <option value="Dominica">Dominica</option>
    <option value="* Dominican Republic">* Dominican Republic</option>
    <option value="East Timor (see Timor-Leste)">East Timor (see Timor-Leste)</option>
    <option value="Ecuador">Ecuador</option>
    <option value="Egypt">Egypt</option>
    <option value="El Salvador">El Salvador</option>
    <option value="* Equatorial Guinea">* Equatorial Guinea</option>
    <option value="* Eritrea">* Eritrea</option>
    <option value="Estonia">Estonia</option>
    <option value="Eswatini">Eswatini</option>
    <option value="Ethiopia">Ethiopia</option>
    <option value="Fiji">Fiji</option>
    <option value="Finland">Finland</option>
    <option value="Gabon">Gabon</option>
    <option value="Gambia, The">Gambia, The</option>
    <option value="Georgia">Georgia</option>
    <option value="Germany">Germany</option>
    <option value="Ghana">Ghana</option>
    <option value="Greece">Greece</option>
    <option value="Grenada">Grenada</option>
    <option value="Guatemala">Guatemala</option>
    <option value="* Guinea">* Guinea</option>
    <option value="* Guinea-Bissau">* Guinea-Bissau</option>
    <option value="Guyana">Guyana</option>
    <option value="* Haiti">* Haiti</option>
    <option value="Holy See">Holy See</option>
    <option value="Honduras">Honduras</option>
    <option value="Hong Kong">Hong Kong</option>
    <option value="Hungary">Hungary</option>
    <option value="Iceland">Iceland</option>
    <option value="India">India</option>
    <option value="Indonesia">Indonesia</option>
    <option value="* Iran">* Iran</option>
    <option value="* Iraq">* Iraq</option>
    <option value="Ireland">Ireland</option>
    <option value="Israel">Israel</option>
    <option value="Italy">Italy</option>
    <option value="Jamaica">Jamaica</option>
    <option value="Japan">Japan</option>
    <option value="Jordan">Jordan</option>
    <option value="Kazakhstan">Kazakhstan</option>
    <option value="Kenya">Kenya</option>
    <option value="Kiribati">Kiribati</option>
    <option value="Korea, North">Korea, North</option>
    <option value="Korea, South">Korea, South</option>
    <option value="* Kosovo">* Kosovo</option>
    <option value="Kuwait">Kuwait</option>
    <option value="Kyrgyzstan">Kyrgyzstan</option>
    <option value="* Laos">* Laos</option>
    <option value="* Latvia">* Latvia</option>
    <option value="* Lebanon">* Lebanon</option>
    <option value="* Lesotho">* Lesotho</option>
    <option value="* Liberia">* Liberia</option>
    <option value="* Libya">* Libya</option>
    <option value="Liechtenstein">Liechtenstein</option>
    <option value="Lithuania">Lithuania</option>
    <option value="Luxembourg">Luxembourg</option>
    <option value="Macau">Macau</option>
    <option value="* Madagascar">* Madagascar</option>
    <option value="Malawi">Malawi</option>
    <option value="Malaysia">Malaysia</option>
    <option value="Maldives">Maldives</option>
    <option value="* Mali">* Mali</option>
    <option value="Malta">Malta</option>
    <option value="Marshall Islands">Marshall Islands</option>
    <option value="Mauritania">Mauritania</option>
    <option value="* Mauritius">* Mauritius</option>
    <option value="Mexico">Mexico</option>
    <option value="Micronesia">Micronesia</option>
    <option value="Moldova">Moldova</option>
    <option value="Monaco">Monaco</option>
    <option value="Mongolia">Mongolia</option>
    <option value="* Montenegro">* Montenegro</option>
    <option value="Morocco">Morocco</option>
    <option value="Mozambique">Mozambique</option>
    <option value="Namibia">Namibia</option>
    <option value="Nauru">Nauru</option>
    <option value="Nepal">Nepal</option>
    <option value="Netherlands">Netherlands</option>
    <option value="New Zealand">New Zealand</option>
    <option value="* Nicaragua">* Nicaragua</option>
    <option value="Niger">Niger</option>
    <option value="* Nigeria">* Nigeria</option>
    <option value="* North Korea">* North Korea</option>
    <option value="* North Macedonia">* North Macedonia</option>
    <option value="Norway">Norway</option>
    <option value="Oman">Oman</option>
    <option value="Pakistan">Pakistan</option>
    <option value="Palau">Palau</option>
    <option value="Palestinian Territories">Palestinian Territories</option>
    <option value="* Panama">* Panama</option>
    <option value="Papua New Guinea">Papua New Guinea</option>
    <option value="Paraguay">Paraguay</option>
    <option value="Peru">Peru</option>
    <option value="Philippines">Philippines</option>
    <option value="Poland">Poland</option>
    <option value="Portugal">Portugal</option>
    <option value="Qatar">Qatar</option>
    <option value="Romania">Romania</option>
    <option value="* Russia">* Russia</option>
    <option value="Rwanda">Rwanda</option>
    <option value="Saint Kitts and Nevis">Saint Kitts and Nevis</option>
    <option value="Saint Lucia">Saint Lucia</option>
    <option value="Saint Vincent and the Grenadines">Saint Vincent and the Grenadines</option>
    <option value="Samoa">Samoa</option>
    <option value="San Marino">San Marino</option>
    <option value="Sao Tome and Principe">Sao Tome and Principe</option>
    <option value="Saudi Arabia">Saudi Arabia</option>
    <option value="Senegal">Senegal</option>
    <option value="* Serbia">* Serbia</option>
    <option value="Seychelles">Seychelles</option>
    <option value="Sierra Leone">Sierra Leone</option>
    <option value="Singapore">Singapore</option>
    <option value="Sint Maarten">Sint Maarten</option>
    <option value="Slovakia">Slovakia</option>
    <option value="* Slovenia">* Slovenia</option>
    <option value="Solomon Islands">Solomon Islands</option>
    <option value="* Somalia">* Somalia</option>
    <option value="South Africa">South Africa</option>
    <option value="South Korea">South Korea</option>
    <option value="* South Sudan">* South Sudan</option>
    <option value="Spain">Spain</option>
    <option value="Sri Lanka">Sri Lanka</option>
    <option value="* Sudan">* Sudan</option>
    <option value="Suriname">Suriname</option>
    <option value="Swaziland">Swaziland</option>
    <option value="Sweden">Sweden</option>
    <option value="Switzerland">Switzerland</option>
    <option value="* Syria">* Syria</option>
    <option value="Taiwan">Taiwan</option>
    <option value="Tajikistan">Tajikistan</option>
    <option value="Tanzania">Tanzania</option>
    <option value="Thailand">Thailand</option>
    <option value="Timor-Leste">Timor-Leste</option>
    <option value="Togo">Togo</option>
    <option value="Tonga">Tonga</option>
    <option value="Trinidad and Tobago">Trinidad and Tobago</option>
    <option value="* Tunisia">* Tunisia</option>
    <option value="* Turkey">* Turkey</option>
    <option value="Turkmenistan">Turkmenistan</option>
    <option value="Tuvalu">Tuvalu</option>
    <option value="* Uganda">* Uganda</option>
    <option value="* Ukraine">* Ukraine</option>
    <option value="United Arab Emirates">United Arab Emirates</option>
    <option value="United Kingdom">United Kingdom</option>
    <option value="Uruguay">Uruguay</option>
    <option value="Uzbekistan">Uzbekistan</option>
    <option value="Vanuatu">Vanuatu</option>
    <option value="* Venezuela">* Venezuela</option>
    <option value="Vietnam">Vietnam</option>
    <option value="Yemen">Yemen</option>
    <option value="Zambia">Zambia</option>
    <option value="* Zimbabwe">* Zimbabwe</option>
    </select>
    </div>
    
    <div class=formbox id=usstatebox>
    <div class=fieldname><label for=ifstate
    >Dans quel \xE9tat ou territoire vivez-vous\xA0?</label>
    <span class=required>*</span></div>
    <select id=ifstate class=formselect>
    <option value=""></option>
    <option value="AL">Alabama</option>
    <option value="AK">Alaska</option>
    <option value="AZ">Arizona</option>
    <option value="AR">Arkansas</option>
    <option value="AS">American Samoa</option>
    <option value="CA">California</option>
    <option value="CO">Colorado</option>
    <option value="CT">Connecticut</option>
    <option value="DE">Delaware</option>
    <option value="FL">Florida</option>
    <option value="GA">Georgia</option>
    <option value="GU">Guam</option>
    <option value="HI">Hawaii</option>
    <option value="ID">Idaho</option>
    <option value="IL">Illinois</option>
    <option value="IN">Indiana</option>
    <option value="IA">Iowa</option>
    <option value="KS">Kansas</option>
    <option value="KY">Kentucky</option>
    <option value="LA">Louisiana</option>
    <option value="ME">Maine</option>
    <option value="MD">Maryland</option>
    <option value="MA">Massachusetts</option>
    <option value="MI">Michigan</option>
    <option value="MN">Minnesota</option>
    <option value="MS">Mississippi</option>
    <option value="MO">Missouri</option>
    <option value="MT">Montana</option>
    <option value="NE">Nebraska</option>
    <option value="NV">Nevada</option>
    <option value="NH">New Hampshire</option>
    <option value="NJ">New Jersey</option>
    <option value="NM">New Mexico</option>
    <option value="NY">New York</option>
    <option value="NC">North Carolina</option>
    <option value="ND">North Dakota</option>
    <option value="MP">Northern Mariana Islands</option>
    <option value="OH">Ohio</option>
    <option value="OK">Oklahoma</option>
    <option value="OR">Oregon</option>
    <option value="PA">Pennsylvania</option>
    <option value="PR">Puerto Rico</option>
    <option value="RI">Rhode Island</option>
    <option value="SC">South Carolina</option>
    <option value="SD">South Dakota</option>
    <option value="TN">Tennessee</option>
    <option value="TX">Texas</option>
    <option value="VI">U.S. Virgin Islands</option>
    <option value="UT">Utah</option>
    <option value="VT">Vermont</option>
    <option value="VA">Virginia</option>
    <option value="WA">Washington</option>
    <option value="WV">West Virginia</option>
    <option value="WI">Wisconsin</option>
    <option value="WY">Wyoming</option>
    </select>
    </div>
    
    <div class=formbox>
    <div class=fieldname><label for=ifcity
    >Dans quelle ville vivez-vous\xA0?</label>
    <span class=optional
    >(Facultatif)</span>
    </div>
    <input id=ifcity class=formtext />
    </div>
    
    <div class=formbox>
    <div class=fieldname><label for=ifaccent
    >Comment d\xE9cririez-vous votre accent\xA0?</label>
    <span class=optional
    >(Facultatif)</span>
    </div>
    <input id=ifaccent class=formtext />
    </div>
    
    <div class=sectiontitle
    >Informations suppl\xE9mentaires</div>
    
    <div class=formbox>
    <div class=fieldname><label for=ifreferral
    >Veuillez nous indiquer comment vous avez eu vent de ce projet</label>
    <span class=optional
    >(Facultatif)</span>
    </div>
    <input id=ifreferral class=formtext />
    </div>
    
    <div class=formbox role=radiogroup id=ifgendergroup style="display: none;">
    <div class=fieldname><label for=ifgendergroup
    >Quel est votre genre\xA0?</label>
    <span class=optional
    >(Facultatif)</span>
    </div>
    <div class=checkboxrow>
    <input type=radio name=ifgender id=ifgenderfemale />
    <label for=ifgenderfemale
    >Femme</label>
    </div>
    <div class=checkboxrow>
    <input type=radio name=ifgender id=ifgendermale />
    <label for=ifgendermale
    >Homme</label>
    </div>
    <div class=checkboxrow>
    <input type=radio name=ifgender id=ifgenderno />
    <label for=ifgenderno
    >Je ne souhaite pas le pr\xE9ciser</label>
    </div>
    <div class=checkboxrow>
    <input type=radio name=ifgender id=ifgenderother />
    <label for=ifgenderother
    >Autre\xA0:</label>
    <input type=text class=formtext id=ifgenderothertext />
    </div>
    </div>
    
    <div class=formbox style="display: none;">
    <div class=fieldname><label for=ifrace
    >De quelle origine ethnique \xEAtes-vous\xA0?</label>
    <span class=optional
    >(Facultatif)</span>
    </div>
    <input id=ifrace class=formtext />
    </div>
    
    <div class=formbox>
    <div class=fieldname
    >\xC0 quel type d'\xE9quipement(s) avez-vous acc\xE8s\xA0?
    <span class=optional
    >(Facultatif)</span>
    </div>
    <div class=checkboxrow>
    <input type=checkbox id=ifdevicecomputer />
    <label for=ifdevicecomputer
    >Un ordinateur dot\xE9 d'un acc\xE8s Internet, et \xE9quip\xE9 d'un micro et d'enceintes</label>
    </div>
    <div class=checkboxrow>
    <input type=checkbox id=ifdeviceandroid />
    <label for=ifdeviceandroid
    >Un t\xE9l\xE9phone ou une tablette Android (comme un Samsung, un Pixel, un Nexus, etc.)</label>
    </div>
    <div class=checkboxrow>
    <input type=checkbox id=ifdeviceiphone />
    <label for=ifdeviceiphone
    >Un iPhone ou un iPad</label>
    </div>
    <div class=checkboxrow>
    <input type=checkbox id=ifdevicenone />
    <label for=ifdevicenone
    >Aucune des r\xE9ponses ci-dessus</label>
    </div>
    <div class=checkboxrow>
    <input type=checkbox id=ifdeviceother />
    <label for=ifdeviceother
    >Autre\xA0:</label>
    <input type=text class=formtext id=ifdeviceothertext aria-labelledby="ifdeviceotherlabel" />
    </div>
    </div>
    
    <div class=formbox id=helperbox>
    <div class=fieldname
    >Quelqu'un vous aidera-t-il \xE0 enregistrer les \xE9chantillons audio\xA0?
    <span class=required>*</span></div>
    <div class=fielddescription
    >Par exemple, un membre de la famille, un orthophoniste, ou toute autre personne</div>
    <div class=checkboxrow>
    <input type=radio name=ifhelper id=ifhelperno selected />
    <label for=ifhelperno
    >Non, je participe de mani\xE8re ind\xE9pendante</label>
    </div>
    <div class=checkboxrow>
    <input type=radio name=ifhelper id=ifhelperyes />
    <label for=ifhelperyes
    >Oui, quelqu'un m'aidera et m'autorise \xE0 partager ses coordonn\xE9es</label>
    </div>
    </div>
    
    <!-- Helper panel appears if the user chooses "yes" above -->
    <div id=helpersection>
    <div class=sectiontitle
    >\xC0 propos de votre assistant</div>
    <div class=formbox>
    <div class=fielddescription>
    Merci de nous parler de la personne qui vous accompagne, afin que nous puissions tous mieux rester en contact. En indiquant le nom de votre assistant, vous acceptez qu'il re\xE7oive des informations \xE0 propos de votre participation \xE0 ce projet. Vous pouvez indiquer plusieurs personnes et adresses e-mail\xA0: s\xE9parez-les simplement avec une virgule.
    </div>
    </div>
    
    <div class=formbox>
    <div class=fieldname><label for=ifassistantname
    >Nom de l'assistant</label>
    <span class=optional
    >(Facultatif)</span>
    </div>
    <input type=text class=formtext id=ifassistantname />
    </div>
    
    <div class=formbox>
    <div class=fieldname><label for=ifassistantemail
    >Adresse e-mail de l'assistant</label>
    <span class=required>*</span></div>
    <input type=text class=formtext id=ifassistantemail />
    </div>
    
    <div class=formbox>
    <div class=fieldname><label for=ifassistantrelationship
    >Quelle est la relation entre cette personne et vous\xA0?</label>
    <span class=optional
    >(Facultatif)</span>
    </div>
    <div class=fielddescription
    >Par exemple\xA0: soignant, ami, membre de la famille, orthophoniste, etc.</div>
    <input type=text class=formtext id=ifassistantrelationship />
    </div>
    </div>
    
    <div class=sectiontitle
    >Projet Euphonia de Google\xA0: Consentement</div>
    
    <div class=forminfobox>
    <div class=fieldname
    >Collecte par questionnaire d'informations personnelles sensibles</div>
    <div class=fielddescription>
    L'objectif de ce questionnaire est de confirmer votre \xE9ligibilit\xE9 \xE0 une collecte de donn\xE9es \xE0 venir men\xE9e par Google. L'objectif de cette collecte sera d'aider Google \xE0 concevoir, rechercher, d\xE9velopper et am\xE9liorer l'accessibilit\xE9 de ses produits et services actuels comme futurs li\xE9s \xE0 la reconnaissance vocale.
    Les informations fournies lors de ce questionnaire pourront \xEAtre combin\xE9es \xE0 d'autres informations et donn\xE9es que vous avez choisi de partager durant la collecte de donn\xE9e, si vous \xEAtes s\xE9lectionn\xE9.
    </div>
    </div>
    
    <div class=formbox>
    <div class=fieldname>
    Avec votre accord, Google proc\xE9dera \xE0 la collecte et au traitement des informations personnelles que vous avez choisi de partager (a) en soumettant ce questionnaire, et (b) si vous \xEAtes s\xE9lectionn\xE9 pour ce projet, lorsque vous participez \xE0 des t\xE2ches de collecte de donn\xE9es, y compris les informations concernant votre usage des technologies d'assistance, vos troubles de la parole et votre mani\xE8re de parler.
    <span class=required>*</span>
    </div>
    <div class=checkboxrow>
    <input type=checkbox id=ifformconsent />
    <label for=ifformconsent>
    En inscrivant mes initiales ici, je donne mon consentement\xA0:
    </label>
    <input type=text class=formtext id=ifconsentinitials aria-labelledby="ifformconsentlabel" />
    </div>
    </div>
    
    <div class=formbox>
    <div class=fieldname>
    Veuillez examiner nos conditions d'utilisation et nos r\xE8gles de confidentialit\xE9
    <span class=required>*</span>
    </div>
    <div class=checkboxrow>
    <input type=checkbox id=ifformtos />
    <label for=ifformtos>
    J'accepte les
    <a target="_blank" href="https://www.google.com/policies/terms/"
    >Conditions d'utilisation</a>
    et j'accepte que mes informations soient utilis\xE9es pour la recherche produit, le d\xE9veloppement et l'am\xE9lioration de technologies utilisant la reconnaissance vocale, conform\xE9ment aux
    <a target="_blank" href="https://www.google.com/policies/privacy/"
    >R\xE8gles de confidentialit\xE9 de Google</a>
    .
    </label>
    </div>
    </div>
    
    <div class=forminfobox>
    <div class=fieldname>
    En soumettant ce formulaire, vous acceptez que Google et ses soci\xE9t\xE9s affili\xE9es vous contactent par e-mail.
    </div>
    </div>
    
    <div class=formbox>
    <div class=fieldname><label for=ifotherinfo>
    Y a-t-il d'autres informations que vous souhaiteriez partager avec nous\xA0?
    </label>
    <span class=optional
    >(Facultatif)</span>
    </div>
    <input id=ifotherinfo class=formtext />
    </div>
`
    }
  ];

  // ../common/strings_hi.ts
  var HI_STRINGS = [
    {
      key: `PAGE_TITLE`,
      en: `Project Euphonia`,
      description: `Web page title for all pages`,
      text: `\u092A\u094D\u0930\u094B\u091C\u0947\u0915\u094D\u091F \u092F\u0942\u092B\u094B\u0928\u093F\u092F\u093E`
    },
    {
      key: `HELP_LINK`,
      description: `Help hyperlink HREF property when the user needs help or has questions.`,
      text: `http://g.co/disabilitysupport`
    },
    {
      key: `WELCOME_TITLE`,
      en: `Welcome to Project Euphonia!`,
      description: `Signup screen and consent screen titles`,
      text: `Project Euphonia \u092E\u0947\u0902 \u0906\u092A\u0915\u093E \u0938\u094D\u0935\u093E\u0917\u0924 \u0939\u0948!`
    },
    {
      key: `We're exploring how Google products and services
    that use speech as an input method could work better for more people. We're seeking
    voice contributions from adults who have difficulty being understood by others.
    Voice samples can help us improve how Google understands individuals with speech
    impairments.`,
      description: `Signup screen`,
      text: `\u0939\u092E \u0910\u0938\u0947 \u0924\u0930\u0940\u0915\u0947 \u090F\u0915\u094D\u0938\u092A\u094D\u0932\u094B\u0930 \u0915\u0930 \u0930\u0939\u0947 \u0939\u0948\u0902 \u091C\u093F\u0928\u0938\u0947 \u0907\u0928\u092A\u0941\u091F \u0915\u0947 \u0932\u093F\u090F \u092C\u094B\u0932\u0940 \u0915\u093E \u0907\u0938\u094D\u0924\u0947\u092E\u093E\u0932 \u0915\u0930\u0928\u0947 \u0935\u093E\u0932\u0947 Google \u0915\u0947 \u092A\u094D\u0930\u0949\u0921\u0915\u094D\u091F \u0914\u0930 \u0938\u0947\u0935\u093E\u090F\u0902 \u092C\u0947\u0939\u0924\u0930 \u0939\u094B \u0938\u0915\u0947\u0902. \u0938\u093E\u0925 \u0939\u0940, \u0907\u0928\u0915\u093E \u092B\u093C\u093E\u092F\u0926\u093E \u091C\u094D\u093C\u092F\u093E\u0926\u093E \u0938\u0947 \u091C\u094D\u093C\u092F\u093E\u0926\u093E \u0932\u094B\u0917\u094B\u0902 \u0915\u094B \u092E\u093F\u0932\u0947. \u0939\u092E \u0910\u0938\u0947 \u0935\u092F\u0938\u094D\u0915 \u0932\u094B\u0917\u094B\u0902 \u0938\u0947 \u0909\u0928\u0915\u0940 \u0906\u0935\u093E\u091C\u093C \u0915\u0940 \u0930\u093F\u0915\u0949\u0930\u094D\u0921\u093F\u0902\u0917 \u0915\u093E \u092F\u094B\u0917\u0926\u093E\u0928 \u091A\u093E\u0939\u0924\u0947 \u0939\u0948\u0902 \u091C\u093F\u0928\u0915\u0940 \u092C\u094B\u0932\u0940 \u0915\u094B \u0932\u094B\u0917 \u0906\u0938\u093E\u0928\u0940 \u0938\u0947 \u0928\u0939\u0940\u0902 \u0938\u092E\u091D \u092A\u093E\u0924\u0947. \u092C\u094B\u0932\u0940 \u0915\u0947 \u0905\u0932\u0917-\u0905\u0932\u0917 \u0938\u0948\u0902\u092A\u0932 \u0938\u0947, Google \u0910\u0938\u0947 \u0932\u094B\u0917\u094B\u0902 \u0915\u0940 \u092C\u093E\u0924 \u0915\u094B \u092C\u0947\u0939\u0924\u0930 \u0924\u0930\u0940\u0915\u0947 \u0938\u0947 \u0938\u092E\u091D \u092A\u093E\u0924\u093E \u0939\u0948 \u091C\u093F\u0928\u094D\u0939\u0947\u0902 \u092C\u094B\u0932\u0928\u0947 \u092E\u0947\u0902 \u092A\u0930\u0947\u0936\u093E\u0928\u0940 \u0939\u094B\u0924\u0940 \u0939\u0948.`
    },
    {
      key: `<b>IMPORTANT:</b> If you're filling out
    this form on behalf of someone else, please ensure you have their permission
    to do so.`,
      description: `Signup screen`,
      text: `<b>\u0905\u0939\u092E \u091C\u093E\u0928\u0915\u093E\u0930\u0940:</b> \u0910\u0938\u0947 \u0932\u094B\u0917 \u091C\u094B \u0915\u093F\u0938\u0940 \u0914\u0930 \u0915\u0947 \u0932\u093F\u090F \u092F\u0939 \u092B\u093C\u0949\u0930\u094D\u092E \u092D\u0930 \u0930\u0939\u0947 \u0939\u0948\u0902, \u092F\u0939 \u092A\u0915\u094D\u0915\u093E \u0915\u0930 \u0932\u0947\u0902 \u0915\u093F \u0906\u092A\u0928\u0947 \u0909\u0938 \u0935\u094D\u092F\u0915\u094D\u0924\u093F \u0938\u0947 \u092B\u093C\u0949\u0930\u094D\u092E \u092D\u0930\u0928\u0947 \u0915\u0940 \u0905\u0928\u0941\u092E\u0924\u093F \u0932\u0940 \u0939\u0948.`
    },
    {
      key: `Questions? <a id=signuphelplink target="_blank">Contact Us</a>`,
      en: `Questions? <a id=signuphelplink target="_blank">Contact Us</a>`,
      description: `Signup screen`,
      text: `\u0915\u094D\u092F\u093E \u0906\u092A\u0915\u094B \u0915\u0941\u091B \u092A\u0942\u091B\u0928\u093E \u0939\u0948? 
        <a id=signuphelplink target="_blank"
        >\u0939\u092E\u0938\u0947 \u0938\u0902\u092A\u0930\u094D\u0915 \u0915\u0930\u0947\u0902</a>`
    },
    {
      key: `Already enrolled? &nbsp;`,
      description: `Signup screen`,
      text: `\u0915\u094D\u092F\u093E \u0906\u092A\u0928\u0947 \u092A\u0939\u0932\u0947 \u0939\u0940 \u0930\u091C\u093F\u0938\u094D\u091F\u0930 \u0915\u0930 \u0932\u093F\u092F\u093E \u0939\u0948? &nbsp;`
    },
    {
      key: `Click to sign in and continue recording`,
      description: `Signup screen`,
      text: `\u0938\u093E\u0907\u0928 \u0907\u0928 \u0915\u0930\u0915\u0947 \u0930\u093F\u0915\u0949\u0930\u094D\u0921 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093F\u090F \u0915\u094D\u0932\u093F\u0915 \u0915\u0930\u0947\u0902`
    },
    {
      key: `To get started, please confirm your eligibility:`,
      description: `Signup screen`,
      text: `\u0936\u0941\u0930\u0942 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093F\u090F, \u0915\u0943\u092A\u092F\u093E \u091C\u093C\u0930\u0942\u0930\u0940 \u0936\u0930\u094D\u0924\u094B\u0902 \u0915\u0940 \u092A\u0941\u0937\u094D\u091F\u093F \u0915\u0930\u0947\u0902:`
    },
    {
      key: `Strangers, or voice technologies like Google Assistant, have difficulty understanding my speech (not because of an accent)`,
      description: `Signup screen eligibility question`,
      text: `\u0905\u0928\u091C\u093E\u0928 \u0932\u094B\u0917\u094B\u0902 \u092F\u093E \u0906\u0935\u093E\u091C\u093C \u0915\u0940 \u092A\u0939\u091A\u093E\u0928 \u0915\u0930\u0928\u0947 \u0935\u093E\u0932\u0940 Google Assistant \u091C\u0948\u0938\u0940 \u091F\u0947\u0915\u094D\u0928\u094B\u0932\u0949\u091C\u0940 \u0915\u094B \u092E\u0947\u0930\u0940 \u092C\u093E\u0924 \u0938\u092E\u091D\u0928\u0947 \u092E\u0947\u0902 \u0926\u093F\u0915\u094D\u0915\u0924 \u0939\u094B\u0924\u0940 \u0939\u0948. \u0939\u093E\u0932\u093E\u0902\u0915\u093F, \u092E\u0947\u0930\u0947 \u092C\u094B\u0932\u0928\u0947 \u0915\u093E \u0932\u0939\u091C\u093E \u0907\u0938\u0915\u0940 \u0935\u091C\u0939 \u0928\u0939\u0940\u0902 \u0939\u0948`
    },
    {
      key: `I am at least 18 years of age`,
      description: `Signup screen eligibility question`,
      text: `\u092E\u0947\u0930\u0940 \u0909\u092E\u094D\u0930 18 \u0938\u093E\u0932 \u0938\u0947 \u0915\u092E \u0928\u0939\u0940\u0902 \u0939\u0948`
    },
    {
      key: `Sign in and continue`,
      description: `Signup screen button`,
      text: `\u0938\u093E\u0907\u0928 \u0907\u0928 \u0915\u0930\u0947\u0902 \u0914\u0930 \u091C\u093E\u0930\u0940 \u0930\u0916\u0947\u0902`
    },
    {
      key: `You will need to sign in with your Google
    Account to contribute to the project. If you do not have a Google Account, you can
    create one when you click to continue.`,
      description: `Signup screen instructions`,
      text: `\u0907\u0938 \u092A\u094D\u0930\u094B\u091C\u0947\u0915\u094D\u091F \u092E\u0947\u0902 \u092F\u094B\u0917\u0926\u093E\u0928 \u0926\u0947\u0928\u0947 \u0915\u0947 \u0932\u093F\u090F \u0906\u092A\u0915\u094B \u0905\u092A\u0928\u0947 Google \u0916\u093E\u0924\u0947 \u0938\u0947 \u0938\u093E\u0907\u0928 \u0907\u0928 \u0915\u0930\u0928\u093E \u0939\u094B\u0917\u093E. \u0905\u0917\u0930 \u0906\u092A\u0915\u0947 \u092A\u093E\u0938 Google \u0916\u093E\u0924\u093E \u0928\u0939\u0940\u0902 \u0939\u0948, \u0924\u094B '\u091C\u093E\u0930\u0940 \u0930\u0916\u0947\u0902' \u092A\u0930 \u0915\u094D\u0932\u093F\u0915 \u0915\u0930\u0915\u0947 \u0928\u092F\u093E \u0916\u093E\u0924\u093E \u092C\u0928\u093E\u090F\u0902.`
    },
    {
      key: `Next`,
      description: `Interest form button, advance to the next screen`,
      text: `\u0906\u0917\u0947 \u092C\u095D\u0947\u0902`
    },
    {
      key: `Go Back`,
      description: `Interest form button, go back to the signup screen`,
      text: `\u0935\u093E\u092A\u0938 \u091C\u093E\u090F\u0902`
    },
    {
      key: `You must type your name to agree to the terms.`,
      description: `Consent form screen, require consent to proceed`,
      text: `\u0936\u0930\u094D\u0924\u094B\u0902 \u0938\u0947 \u0938\u0939\u092E\u0924 \u0939\u094B\u0928\u0947 \u0915\u0947 \u0932\u093F\u090F \u0905\u092A\u0928\u093E \u0928\u093E\u092E \u0921\u093E\u0932\u0928\u093E \u091C\u093C\u0930\u0942\u0930\u0940 \u0939\u0948.`
    },
    {
      key: `Reset form and start over`,
      description: `Interest form button, clear fields and start over`,
      text: `\u092B\u093C\u0949\u0930\u094D\u092E \u0930\u0940\u0938\u0947\u091F \u0915\u0930\u0947\u0902 \u0914\u0930 \u092B\u093F\u0930 \u0938\u0947 \u0936\u0941\u0930\u0942 \u0915\u0930\u0947\u0902`
    },
    {
      key: `You are enrolling as <b id=whoisenrolling>&nbsp;</b>.
    Please review the following agreement: <span id=consentcounter></span>`,
      description: `Consent screen instructions`,
      text: `\u0906\u092A\u0928\u0947 <b id=whoisenrolling>&nbsp;</b> \u0915\u0947 \u0924\u094C\u0930 \u092A\u0930 \u0930\u091C\u093F\u0938\u094D\u091F\u0930 \u0915\u093F\u092F\u093E \u0939\u0948. \u0915\u0943\u092A\u092F\u093E \u092F\u0939\u093E\u0902 \u0926\u093F\u090F \u0917\u090F \u0915\u093E\u0928\u0942\u0928\u0940 \u0938\u092E\u091D\u094C\u0924\u0947 \u0915\u094B \u092A\u095D\u0947\u0902: <span id=consentcounter></span>`
    },
    {
      key: `Enroll`,
      description: `Consent screen, final action; consents to the program and allows recording`,
      text: `\u0930\u091C\u093F\u0938\u094D\u091F\u0930 \u0915\u0930\u0947\u0902`
    },
    {
      key: `Next Agreement`,
      description: `Consent screen, to agree to the current consent and then see the next one. Only shows when there are multiple consents`,
      text: `\u0905\u0917\u0932\u093E \u0915\u093E\u0928\u0942\u0928\u0940 \u0938\u092E\u091D\u094C\u0924\u093E`
    },
    {
      key: `INSTRUCTIONS_TITLE`,
      en: `Thanks for signing up for Project Euphonia!`,
      description: `Instructions screen title`,
      text: `Project Euphonia \u092E\u0947\u0902 \u0938\u093E\u0907\u0928 \u0905\u092A \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093F\u090F \u0927\u0928\u094D\u092F\u0935\u093E\u0926!`
    },
    {
      key: `INSTRUCTIONS_VIDEO_HTML`,
      description: `Instructional video iframe from YouTube`,
      text: `
    <iframe width="560" height="315" src="https://www.youtube.com/embed/sMLED9xrLts"
        title="YouTube video player" frameborder="0"
        allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
    `
    },
    {
      key: `INSTRUCTIONS_HTML`,
      en: `    <ul>
    <li>Please take a moment to watch this video introduction.</li>
    <li>On the next screen, you'll see <b>cards</b> to read aloud.</li>
    <li>You'll want to be in a <b>quiet setting</b> and avoid any background noise.</li>
    <li>You'll press the blue Record button, and then <b>read the
    card aloud</b>, as accurately as possible.</li>
    <li>When you are <b>finished speaking</b>, press the blue button again to stop recording.</li>
    <li>When you finish recording all the cards, you're done!</li>
    <li>Having trouble recording? <a target="_blank" href="http://g.co/disabilitysupport">Contact us</a> for help.</li>`,
      description: `Instructions screen details`,
      text: `<ul> 
    <li>\u0915\u0943\u092A\u092F\u093E \u0925\u094B\u095C\u093E \u0938\u092E\u092F \u0928\u093F\u0915\u093E\u0932\u0915\u0930, \u0907\u0938 \u092A\u094D\u0930\u094B\u091C\u0947\u0915\u094D\u091F \u0915\u0947 \u092C\u093E\u0930\u0947 \u092E\u0947\u0902 \u092C\u0924\u093E\u0928\u0947 \u0935\u093E\u0932\u093E \u092F\u0939 \u0935\u0940\u0921\u093F\u092F\u094B \u0926\u0947\u0916\u0947\u0902.</li> 
    <li>\u0905\u0917\u0932\u0940 \u0938\u094D\u0915\u094D\u0930\u0940\u0928 \u092A\u0930 \u092C\u094B\u0932\u0915\u0930 \u092A\u0922\u093C\u0928\u0947 \u0915\u0947 \u0932\u093F\u090F \u0906\u092A\u0915\u094B <b>\u0915\u093E\u0930\u094D\u0921</b> \u0926\u093F\u0916\u0947\u0902\u0917\u0947.</li> <li>\u0906\u092A\u0915\u094B \u0915\u093F\u0938\u0940 <b>\u0936\u093E\u0902\u0924 \u091C\u0917\u0939</b> \u092A\u0930 \u0930\u093F\u0915\u0949\u0930\u094D\u0921\u093F\u0902\u0917 \u0915\u0930\u0928\u0940 \u091A\u093E\u0939\u093F\u090F \u0914\u0930 \u092C\u0948\u0915\u0917\u094D\u0930\u093E\u0909\u0902\u0921 \u0915\u0947 \u0936\u094B\u0930 \u0938\u0947 \u092C\u091A\u0928\u093E \u091A\u093E\u0939\u093F\u090F.</li> 
    <li>\u0928\u0940\u0932\u0947 \u0930\u0902\u0917 \u0915\u093E \u0930\u093F\u0915\u0949\u0930\u094D\u0921 \u092C\u091F\u0928 \u0926\u092C\u093E\u090F\u0902 \u0914\u0930 \u092B\u093F\u0930 \u091C\u093F\u0924\u0928\u093E \u0939\u094B \u0938\u0915\u0947 \u0909\u0924\u0928\u0947 \u0938\u0939\u0940 \u0924\u0930\u0940\u0915\u0947 \u0938\u0947 <b>\u0915\u093E\u0930\u094D\u0921 \u0915\u094B \u092C\u094B\u0932\u0915\u0930 \u092A\u0922\u093C\u0947\u0902</b>.</li> 
    <li>\u0915\u093E\u0930\u094D\u0921 <b>\u092A\u0922\u093C\u0928\u0947 \u0915\u0947 \u092C\u093E\u0926</b>, \u0930\u093F\u0915\u0949\u0930\u094D\u0921\u093F\u0902\u0917 \u0915\u094B \u092C\u0902\u0926 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093F\u090F, \u0928\u0940\u0932\u0947 \u0930\u0902\u0917 \u0915\u093E \u092C\u091F\u0928 \u0926\u092C\u093E\u090F\u0902.</li> 
    <li>\u0938\u092D\u0940 \u0915\u093E\u0930\u094D\u0921 \u0915\u0940 \u0930\u093F\u0915\u0949\u0930\u094D\u0921\u093F\u0902\u0917 \u0915\u0930 \u0932\u0947\u0928\u0947 \u0915\u093E \u092E\u0924\u0932\u092C \u0939\u0948 \u0915\u093F \u0906\u092A\u0915\u093E \u0915\u093E\u092E \u092A\u0942\u0930\u093E \u0939\u0941\u0906!</li> <li>\u0915\u094D\u092F\u093E \u0906\u092A\u0915\u094B \u0930\u093F\u0915\u0949\u0930\u094D\u0921\u093F\u0902\u0917 \u0915\u0930\u0928\u0947 \u092E\u0947\u0902 \u0938\u092E\u0938\u094D\u092F\u093E \u0906 \u0930\u0939\u0940 \u0939\u0948? \u0938\u0939\u093E\u092F\u0924\u093E \u0915\u0947 \u0932\u093F\u090F <a target="_blank" href="http://g.co/disabilitysupport">\u0939\u092E\u0938\u0947 \u0938\u0902\u092A\u0930\u094D\u0915 \u0915\u0930\u0947\u0902</a>.</li>`
    },
    {
      key: `Get Started`,
      description: `Instructions screen button to continue to next screen`,
      text: `\u0936\u0941\u0930\u0942 \u0915\u0930\u0947\u0902`
    },
    {
      key: `Microphone Setup`,
      description: `Microphone and settings screen title`,
      text: `\u092E\u093E\u0907\u0915\u094D\u0930\u094B\u092B\u093C\u094B\u0928 \u0915\u093E \u0938\u0947\u091F\u0905\u092A`
    },
    {
      key: `
    In order to record your speech, we need permission to use your microphone
    through your web browser. <b>Please click "Allow"</b> to grant use of your microphone.`,
      description: `Microphone permission instructions`,
      text: `\u0906\u092A\u0915\u0940 \u092C\u094B\u0932\u0940 \u0930\u093F\u0915\u0949\u0930\u094D\u0921 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093F\u090F, Euphonia \u0915\u094B \u0935\u0947\u092C \u092C\u094D\u0930\u093E\u0909\u095B\u0930 \u092A\u0930 \u092E\u093E\u0907\u0915\u094D\u0930\u094B\u092B\u093C\u094B\u0928 \u0910\u0915\u094D\u0938\u0947\u0938 \u0915\u0930\u0928\u0947 \u0915\u0940 \u0905\u0928\u0941\u092E\u0924\u093F \u0926\u0947\u0928\u093E \u091C\u093C\u0930\u0942\u0930\u0940 \u0939\u0948. \u092E\u093E\u0907\u0915\u094D\u0930\u094B\u092B\u093C\u094B\u0928 \u0915\u0947 \u0907\u0938\u094D\u0924\u0947\u092E\u093E\u0932 \u0915\u0940 \u0905\u0928\u0941\u092E\u0924\u093F \u0926\u0947\u0928\u0947 \u0915\u0947 \u0932\u093F\u090F, <b>\u0915\u0943\u092A\u092F\u093E "\u0905\u0928\u0941\u092E\u0924\u093F \u0926\u0947\u0902" \u092A\u0930 \u0915\u094D\u0932\u093F\u0915 \u0915\u0930\u0947\u0902</b>.`
    },
    {
      key: `
    We could not access your microphone due to a permission problem. You'll need to allow access
    in order to continue.`,
      description: `Microphone permission error message`,
      text: `\u0905\u0928\u0941\u092E\u0924\u093F \u0928\u0939\u0940\u0902 \u092E\u093F\u0932\u0928\u0947 \u0915\u0940 \u0935\u091C\u0939 \u0938\u0947 Euphonia \u0906\u092A\u0915\u0947 \u092E\u093E\u0907\u0915\u094D\u0930\u094B\u092B\u093C\u094B\u0928 \u0915\u094B \u0910\u0915\u094D\u0938\u0947\u0938 \u0928\u0939\u0940\u0902 \u0915\u0930 \u0938\u0915\u093E. \u091C\u093E\u0930\u0940 \u0930\u0916\u0928\u0947 \u0915\u0947 \u0932\u093F\u090F \u0906\u092A\u0915\u094B \u092E\u093E\u0907\u0915\u094D\u0930\u094B\u092B\u093C\u094B\u0928 \u0915\u094B \u0910\u0915\u094D\u0938\u0947\u0938 \u0915\u0930\u0928\u0947 \u0915\u0940 \u0905\u0928\u0941\u092E\u0924\u093F \u0926\u0947\u0928\u0940 \u0939\u094B\u0917\u0940.`
    },
    {
      key: `
    It looks like your microphone permission is blocked. You'll need to <b>allow access</b>
    by clicking the <b>address bar of your browser</b>, and/or <b>reset permission</b> for the microphone.`,
      description: `Microphone permission error message`,
      text: `\u0910\u0938\u093E \u0932\u0917\u0924\u093E \u0939\u0948 \u0915\u093F \u0906\u092A\u0915\u0947 \u092E\u093E\u0907\u0915\u094D\u0930\u094B\u092B\u093C\u094B\u0928 \u0915\u094B \u0910\u0915\u094D\u0938\u0947\u0938 \u0915\u0930\u0928\u0947 \u0915\u0940 \u0905\u0928\u0941\u092E\u0924\u093F \u0928\u0939\u0940\u0902 \u0939\u0948. \u0906\u092A\u0915\u094B <b>\u092C\u094D\u0930\u093E\u0909\u091C\u093C\u0930 \u0915\u0947 \u092A\u0924\u093E \u092C\u093E\u0930</b> \u092E\u0947\u0902 \u0915\u094D\u0932\u093F\u0915 \u0915\u0930\u0915\u0947 <b>\u0910\u0915\u094D\u0938\u0947\u0938 \u0915\u0940 \u0905\u0928\u0941\u092E\u0924\u093F</b> \u0926\u0947\u0928\u0940 \u0939\u094B\u0917\u0940 \u0914\u0930/\u092F\u093E \u0905\u092A\u0928\u0947 \u092E\u093E\u0907\u0915\u094D\u0930\u094B\u092B\u093C\u094B\u0928 \u0915\u0947 \u0932\u093F\u090F <b>\u0905\u0928\u0941\u092E\u0924\u093F \u0930\u0940\u0938\u0947\u091F</b> \u0915\u0930\u0928\u0940 \u0939\u094B\u0917\u0940.`
    },
    {
      key: `
    Your microphone is all set! You can start recording as soon as you're ready.`,
      description: `Microphone permission success message`,
      text: `\u0906\u092A\u0915\u0947 \u092E\u093E\u0907\u0915\u094D\u0930\u094B\u092B\u093C\u094B\u0928 \u0915\u093E \u0907\u0938\u094D\u0924\u0947\u092E\u093E\u0932 \u0915\u093F\u092F\u093E \u091C\u093E \u0938\u0915\u0924\u093E \u0939\u0948! \u0906\u092A \u091C\u092C \u0924\u0948\u092F\u093E\u0930 \u0939\u094B\u0902, \u0924\u094B \u0930\u093F\u0915\u0949\u0930\u094D\u0921\u093F\u0902\u0917 \u0936\u0941\u0930\u0942 \u0915\u0930\u0947\u0902.`
    },
    {
      key: `Use the default microphone`,
      description: `Let's the user choose the browser's default recording device instead of picking one explicitly`,
      text: `\u0921\u093F\u095E\u0949\u0932\u094D\u091F \u092E\u093E\u0907\u0915\u094D\u0930\u094B\u092B\u093C\u094B\u0928 \u0915\u093E \u0907\u0938\u094D\u0924\u0947\u092E\u093E\u0932 \u0915\u0930\u0947\u0902`
    },
    {
      key: `Save`,
      description: `Microphone configuration screen, accept changes to microphone device`,
      text: `\u0938\u0947\u0935 \u0915\u0930\u0947\u0902`
    },
    {
      key: `Try again`,
      description: `Microphone permission failure retry button`,
      text: `\u092B\u093F\u0930 \u0938\u0947 \u0915\u094B\u0936\u093F\u0936 \u0915\u0930\u0947\u0902`
    },
    {
      key: `Start recording!`,
      description: `Microphone setup screen button, continue to recording screen`,
      text: `\u0930\u093F\u0915\u0949\u0930\u094D\u0921\u093F\u0902\u0917 \u0936\u0941\u0930\u0942 \u0915\u0930\u0947\u0902!`
    },
    {
      key: `Microphone settings`,
      description: `Microphone setup screen title`,
      text: `\u092E\u093E\u0907\u0915\u094D\u0930\u094B\u092B\u093C\u094B\u0928 \u0915\u0940 \u0938\u0947\u091F\u093F\u0902\u0917`
    },
    {
      key: `Previous card`,
      description: `Recording screen button, go back to prior card`,
      text: `\u092A\u093F\u091B\u0932\u093E \u0915\u093E\u0930\u094D\u0921`
    },
    {
      key: `Next card`,
      description: `Recording screen button, go forward to next card`,
      text: `\u0905\u0917\u0932\u093E \u0915\u093E\u0930\u094D\u0921`
    },
    {
      key: `Replay`,
      description: `Recording screen button, listen to previously recorded audio`,
      text: `\u092B\u093F\u0930 \u0938\u0947 \u091A\u0932\u093E\u090F\u0902`
    },
    {
      key: `Stop`,
      description: `Recording screen button, to interrupt a recording that's currently being played back`,
      text: `\u092C\u0902\u0926 \u0915\u0930\u0947\u0902`
    },
    {
      key: `Delete`,
      description: `Recording screen button, delete a previous recording`,
      text: `\u092E\u093F\u091F\u093E\u090F\u0902`
    },
    {
      key: `Deleting...`,
      description: `Recording screen button, shown briefly while the recording is being deleted`,
      text: `\u092E\u093F\u091F\u093E\u092F\u093E \u091C\u093E \u0930\u0939\u093E \u0939\u0948...`
    },
    {
      key: `Record`,
      description: `Recording screen button, record audio for a card`,
      text: `\u0930\u093F\u0915\u0949\u0930\u094D\u0921 \u0915\u0930\u0947\u0902`
    },
    {
      key: `Record Again`,
      description: `Recording screen button, record audio for a card that already has been recorded`,
      text: `\u092B\u093F\u0930 \u0938\u0947 \u0930\u093F\u0915\u0949\u0930\u094D\u0921 \u0915\u0930\u0947\u0902`
    },
    {
      key: `(this card is done)`,
      description: `Labels tasks that have already been recorded once`,
      text: `(\u0906\u092A\u0928\u0947 \u0907\u0938 \u0915\u093E\u0930\u094D\u0921 \u0915\u0940 \u0930\u093F\u0915\u0949\u0930\u094D\u0921\u093F\u0902\u0917 \u0915\u0930 \u0932\u0940 \u0939\u0948)`
    },
    {
      key: `Cancel`,
      description: `Recording screen button and microphone setting screen button, cancel recording / microphone changes`,
      text: `\u0930\u0926\u094D\u0926 \u0915\u0930\u0947\u0902`
    },
    {
      key: `Done`,
      description: `Recording screen button, shown while recording to end the recording and start uploading it`,
      text: `\u0939\u094B \u0917\u092F\u093E`
    },
    {
      key: `Starting...`,
      description: `Recording screen button, shown briefly just before the microphone starts listening`,
      text: `\u0936\u0941\u0930\u0942 \u0939\u094B \u0930\u0939\u093E \u0939\u0948...`
    },
    {
      key: `Now recording...`,
      description: `Recording screen button, shown briefly just before the microphone starts listening`,
      text: `\u0930\u093F\u0915\u0949\u0930\u094D\u0921\u093F\u0902\u0917 \u0936\u0941\u0930\u0942 \u0939\u094B \u0917\u0908 \u0939\u0948...`
    },
    {
      key: `Recording uploaded!`,
      description: `Recording screen message when the recording uploaded successfully`,
      text: `\u0930\u093F\u0915\u0949\u0930\u094D\u0921\u093F\u0902\u0917 \u0905\u092A\u0932\u094B\u0921 \u0915\u0940 \u0917\u0908!`
    },
    {
      key: `Recording uploaded! Here's the next card.`,
      description: `Recording screen message when the recording uploads successfully and the next card is automatically displayed`,
      text: `\u0930\u093F\u0915\u0949\u0930\u094D\u0921\u093F\u0902\u0917 \u0905\u092A\u0932\u094B\u0921 \u0915\u0940 \u0917\u0908! \u092F\u0939 \u0930\u0939\u093E \u0905\u0917\u0932\u093E \u0915\u093E\u0930\u094D\u0921.`
    },
    {
      key: `Recording deleted.`,
      description: `Recording screen message when a recording has just been deleted`,
      text: `\u0930\u093F\u0915\u0949\u0930\u094D\u0921\u093F\u0902\u0917 \u092E\u093F\u091F\u093E\u0908 \u0917\u0908.`
    },
    {
      key: `Recording canceled.`,
      description: `Recording screen message when a recording has just been canceled`,
      text: `\u0930\u093F\u0915\u0949\u0930\u094D\u0921\u093F\u0902\u0917 \u0930\u0926\u094D\u0926 \u0939\u094B \u0917\u0908.`
    },
    {
      key: `No recording to delete.`,
      description: `Error message when the user deletes but nothing is selected.`,
      text: `\u092E\u093F\u091F\u093E\u0928\u0947 \u0915\u0947 \u0932\u093F\u090F \u0915\u094B\u0908 \u0930\u093F\u0915\u0949\u0930\u094D\u0921\u093F\u0902\u0917 \u0909\u092A\u0932\u092C\u094D\u0927 \u0928\u0939\u0940\u0902 \u0939\u0948.`
    },
    {
      key: `No recording to play.`,
      description: `Error message when the user replays but nothing is selected.`,
      text: `\u091A\u0932\u093E\u0928\u0947 \u0915\u0947 \u0932\u093F\u090F \u0915\u094B\u0908 \u0930\u093F\u0915\u0949\u0930\u094D\u0921\u093F\u0902\u0917 \u0909\u092A\u0932\u092C\u094D\u0927 \u0928\u0939\u0940\u0902 \u0939\u0948.`
    },
    {
      key: `Upload failed, your audio may not be saved.`,
      description: `Error message when the user's recording was not received by the server.`,
      text: `\u0930\u093F\u0915\u0949\u0930\u094D\u0921\u093F\u0902\u0917 \u0905\u092A\u0932\u094B\u0921 \u0928\u0939\u0940\u0902 \u0939\u0941\u0908, \u0939\u094B \u0938\u0915\u0924\u093E \u0939\u0948 \u0906\u092A\u0915\u093E \u0911\u0921\u093F\u092F\u094B \u0938\u0947\u0935 \u0928 \u0939\u0941\u0906 \u0939\u094B.`
    },
    {
      key: `Canceling...`,
      description: `Recording screen button, shown briefly when the recording is being canceled`,
      text: `\u0930\u0926\u094D\u0926 \u0915\u0940 \u091C\u093E \u0930\u0939\u0940 \u0939\u0948...`
    },
    {
      key: `Uploading...`,
      description: `Recording screen button, shown briefly when the recording is being uploaded`,
      text: `\u0905\u092A\u0932\u094B\u0921 \u0939\u094B \u0930\u0939\u0940 \u0939\u0948...`
    },
    {
      key: `?`,
      description: `Recording screen button, go to help screen`,
      text: `?`
    },
    {
      key: `&#x1F50A;`,
      description: `Speak prompt button, which uses computerized speech to play the prompt audibly`,
      text: `&#x1F50A;`
    },
    {
      key: `Continue`,
      description: `Sign up screen and consent screen buttons, continue to the next page`,
      text: `\u091C\u093E\u0930\u0940 \u0930\u0916\u0947\u0902`
    },
    {
      key: `No assignments`,
      description: `Recording screen, message when the user has no cards to work on`,
      text: `\u0915\u094B\u0908 \u0905\u0938\u093E\u0907\u0928\u092E\u0947\u0902\u091F \u0928\u0939\u0940\u0902 \u0939\u0948`
    },
    {
      key: `<b>{number_of_completed_cards}</b> of <b>{total_number_of_tasks_needed}</b> cards <b>done</b>`,
      description: `Recording screen, progress message of tasks completed so far`,
      text: `<b>{total_number_of_tasks_needed}</b> \u092E\u0947\u0902 \u0938\u0947 <b>{number_of_completed_cards}</b> \u0915\u093E\u0930\u094D\u0921 <b>\u0930\u093F\u0915\u0949\u0930\u094D\u0921 \u0915\u093F\u090F \u0917\u090F</b>`
    },
    {
      key: `Thank you!`,
      description: `Done screen title, shown when the user has finished at least one pass`,
      text: `\u0927\u0928\u094D\u092F\u0935\u093E\u0926!`
    },
    {
      key: `          Great work! You've gone through the cards once, and recorded
    <b class=count>{number_of_completed_cards} cards</b>
    out of the total (<b>{total_number_of_tasks_needed} cards</b>).
    When you're ready, you can click the button below to finish up the rest of the cards.      `,
      description: `Done screen instructions, asks the user to go finish the rest of the cards`,
      text: `\u092C\u0939\u0941\u0924 \u092C\u0922\u093C\u093F\u092F\u093E! \u0906\u092A\u0928\u0947 \u0938\u093E\u0930\u0947 \u0915\u093E\u0930\u094D\u0921 \u090F\u0915 \u092C\u093E\u0930 \u0926\u0947\u0916 \u0932\u093F\u090F \u0939\u0948\u0902 \u0914\u0930 \u0915\u0941\u0932 <b>{total_number_of_tasks_needed} \u0915\u093E\u0930\u094D\u0921</b> \u092E\u0947\u0902 \u0938\u0947 <b class=count>{number_of_completed_cards} \u0915\u093E\u0930\u094D\u0921</b> \u0915\u094B \u0930\u093F\u0915\u0949\u0930\u094D\u0921 \u0915\u0930 \u0932\u093F\u092F\u093E \u0939\u0948. \u091C\u092C \u0906\u092A \u0924\u0948\u092F\u093E\u0930 \u0939\u094B\u0902, \u0924\u092C \u092C\u093E\u0915\u0940 \u092C\u091A\u0947 \u0915\u093E\u0930\u094D\u0921 \u0915\u094B \u0930\u093F\u0915\u0949\u0930\u094D\u0921 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093F\u090F \u0928\u0940\u091A\u0947 \u0926\u093F\u092F\u093E \u0917\u092F\u093E \u092C\u091F\u0928 \u0926\u092C\u093E\u090F\u0902.`
    },
    {
      key: `          You're almost done! You've gone through the cards once, and recorded
    <b class=count>{number_of_completed_cards} cards</b>
    out of the total (<b>{total_number_of_tasks_needed} cards</b>).
    When you're ready, you can click the button below to finish up the rest of the cards.      `,
      description: `Done screen instructions, asks the user to go finish the rest of the cards. This version displays when the user has done more than 75% of the work.`,
      text: `\u0906\u092A\u0928\u0947 \u0915\u0930\u0940\u092C-\u0915\u0930\u0940\u092C \u0938\u092D\u0940 \u0915\u093E\u0930\u094D\u0921 \u0915\u0940 \u0930\u093F\u0915\u0949\u0930\u094D\u0921\u093F\u0902\u0917 \u0915\u0930 \u0932\u0940 \u0939\u0948! \u0906\u092A\u0928\u0947 \u0938\u093E\u0930\u0947 \u0915\u093E\u0930\u094D\u0921 \u090F\u0915 \u092C\u093E\u0930 \u0926\u0947\u0916 \u0932\u093F\u090F \u0939\u0948\u0902 \u0914\u0930 \u0915\u0941\u0932 <b>{total_number_of_tasks_needed} \u0915\u093E\u0930\u094D\u0921</b> \u092E\u0947\u0902 \u0938\u0947 <b class=count>{number_of_completed_cards} \u0915\u093E\u0930\u094D\u0921</b> \u0915\u094B \u0930\u093F\u0915\u0949\u0930\u094D\u0921 \u0915\u0930 \u0932\u093F\u092F\u093E \u0939\u0948. \u091C\u092C \u0906\u092A \u0924\u0948\u092F\u093E\u0930 \u0939\u094B\u0902, \u0924\u092C \u092C\u093E\u0915\u0940 \u092C\u091A\u0947 \u0915\u093E\u0930\u094D\u0921 \u0915\u094B \u0930\u093F\u0915\u0949\u0930\u094D\u0921 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093F\u090F \u0928\u0940\u091A\u0947 \u0926\u093F\u092F\u093E \u0917\u092F\u093E \u092C\u091F\u0928 \u0926\u092C\u093E\u090F\u0902.`
    },
    {
      key: `Continue Recording`,
      description: `Done screen and instructions screen buttons, return to the recording screen`,
      text: `\u0930\u093F\u0915\u0949\u0930\u094D\u0921\u093F\u0902\u0917 \u091C\u093E\u0930\u0940 \u0930\u0916\u0947\u0902`
    },
    {
      key: `Continue recording!`,
      description: `Microphone settings screen, return to the recording screen`,
      text: `\u0930\u093F\u0915\u0949\u0930\u094D\u0921\u093F\u0902\u0917 \u091C\u093E\u0930\u0940 \u0930\u0916\u0947\u0902!`
    },
    {
      key: `You previously indicated that you are eligible.`,
      description: `Signup screen, a message showing that the participant has already completed this form`,
      text: `\u0906\u092A\u0928\u0947 \u092A\u0939\u0932\u0947 \u092F\u0939 \u092C\u0924\u093E\u092F\u093E \u0925\u093E \u0915\u093F \u0906\u092A \u091C\u093C\u0930\u0942\u0930\u0940 \u0936\u0930\u094D\u0924\u0947\u0902 \u092A\u0942\u0930\u0940 \u0915\u0930\u0924\u0947/\u0915\u0930\u0924\u0940 \u0939\u0948\u0902.`
    },
    {
      key: `You have already completed this form.`,
      description: `Interest form screen, a message showing that the participant has already completed this form`,
      text: `\u0906\u092A\u0928\u0947 \u092F\u0939 \u092B\u093C\u0949\u0930\u094D\u092E \u092A\u0939\u0932\u0947 \u0939\u0940 \u092D\u0930 \u0926\u093F\u092F\u093E \u0939\u0948.`
    },
    {
      key: `Country is required.`,
      description: `Interest form screen, a message showing that a required field needs to be filled in.`,
      text: `\u0926\u0947\u0936 \u0915\u093E \u0928\u093E\u092E \u0921\u093E\u0932\u0928\u093E \u095B\u0930\u0942\u0930\u0940 \u0939\u0948.`
    },
    {
      key: `State is required.`,
      description: `Interest form screen, a message showing that a required field needs to be filled in.`,
      text: `\u0930\u093E\u091C\u094D\u092F \u0915\u093E \u0928\u093E\u092E \u0921\u093E\u0932\u0928\u093E \u095B\u0930\u0942\u0930\u0940 \u0939\u0948.`
    },
    {
      key: `Please tell us if someone will be helping you record.`,
      description: `Interest form screen, a message showing that a required field needs to be filled in.`,
      text: `\u0905\u0917\u0930 \u0930\u093F\u0915\u0949\u0930\u094D\u0921\u093F\u0902\u0917 \u092E\u0947\u0902 \u0915\u094B\u0908 \u0906\u092A\u0915\u0940 \u092E\u0926\u0926 \u0915\u0930\u0947\u0917\u093E, \u0924\u094B \u0915\u0943\u092A\u092F\u093E \u0939\u092E\u0947\u0902 \u0907\u0938\u0915\u0940 \u091C\u093E\u0928\u0915\u093E\u0930\u0940 \u0926\u0947\u0902.`
    },
    {
      key: `Please tell us how to email the person helping you.`,
      description: `Interest form screen, a message showing that a required field needs to be filled in.`,
      text: `\u091C\u094B \u0935\u094D\u092F\u0915\u094D\u0924\u093F \u0930\u093F\u0915\u0949\u0930\u094D\u0921\u093F\u0902\u0917 \u092E\u0947\u0902 \u0906\u092A\u0915\u0940 \u092E\u0926\u0926 \u0915\u0930\u0947\u0917\u093E \u0915\u0943\u092A\u092F\u093E \u0909\u0938\u0915\u093E \u0908\u092E\u0947\u0932 \u092A\u0924\u093E \u0926\u0947\u0902.`
    },
    {
      key: `You'll need to give consent to proceed.`,
      description: `Interest form screen, a message showing that a required field needs to be filled in.`,
      text: `\u0906\u092A\u0915\u094B \u091C\u093E\u0930\u0940 \u0930\u0916\u0928\u0947 \u0915\u0947 \u0932\u093F\u090F \u0905\u092A\u0928\u0940 \u0938\u0939\u092E\u0924\u093F \u0926\u0947\u0928\u0940 \u0939\u094B\u0917\u0940.`
    },
    {
      key: `Please write your initials next to your consent.`,
      description: `Interest form screen, a message showing that a required field needs to be filled in.`,
      text: `\u0915\u0943\u092A\u092F\u093E \u0905\u092A\u0928\u0940 \u0938\u0939\u092E\u0924\u093F \u0915\u0947 \u0906\u0917\u0947 \u0905\u092A\u0928\u0947 \u0928\u093E\u092E \u0915\u093E \u092A\u0939\u0932\u093E \u0905\u0915\u094D\u0937\u0930 \u0932\u093F\u0916\u0947\u0902.`
    },
    {
      key: `You'll need to accept the terms to proceed.`,
      description: `Interest form screen, a message showing that a required field needs to be filled in.`,
      text: `\u091C\u093E\u0930\u0940 \u0930\u0916\u0928\u0947 \u0915\u0947 \u0932\u093F\u090F, \u0906\u092A\u0915\u094B \u0936\u0930\u094D\u0924\u0947\u0902 \u0938\u094D\u0935\u0940\u0915\u093E\u0930 \u0915\u0930\u0928\u0940 \u0939\u094B\u0902\u0917\u0940.`
    },
    {
      key: `You have already consented.`,
      description: `Consent screen, a message showing that the participant has already completed this form`,
      text: `\u0906\u092A\u0928\u0947 \u092A\u0939\u0932\u0947 \u0939\u0940 \u0938\u0939\u092E\u0924\u093F \u0926\u0947 \u0926\u0940 \u0939\u0948.`
    },
    {
      key: `By typing my name here, I agree to these terms:`,
      description: `Consent screen, indicates that the participant consents`,
      text: `\u0905\u092A\u0928\u093E \u0928\u093E\u092E \u0932\u093F\u0916\u0928\u0947 \u0915\u093E \u092E\u0924\u0932\u092C \u0939\u0948 \u0915\u093F \u092E\u0948\u0902 \u0907\u0928 \u0936\u0930\u094D\u0924\u094B\u0902 \u0938\u0947 \u0938\u0939\u092E\u0924 \u0939\u0942\u0902:`
    },
    {
      key: `&nbsp;(Agreement {which_agreement_number} of {total_number_of_agreements})`,
      description: ``,
      text: `&nbsp;({total_number_of_agreements} \u092E\u0947\u0902 \u0938\u0947 {which_agreement_number} \u0915\u093E\u0928\u0942\u0928\u0940 \u0938\u092E\u091D\u094C\u0924\u093E)`
    },
    {
      key: `Congratulations! You're all done!`,
      description: `Progress bar display when there are no tasks left to do`,
      text: `\u092C\u0927\u093E\u0908 \u0939\u094B! \u0906\u092A\u0928\u0947 \u0938\u092D\u0940 \u0915\u093E\u0930\u094D\u0921 \u0915\u0940 \u0930\u093F\u0915\u0949\u0930\u094D\u0921\u093F\u0902\u0917 \u0915\u0930 \u0932\u0940 \u0939\u0948!`
    },
    {
      key: `Congratulations!`,
      description: `Title of the done screen`,
      text: `\u092C\u0927\u093E\u0908 \u0939\u094B!`
    },
    {
      key: `Review Recordings (optional)`,
      description: `Button on done screen which returns to the recording screen, if the user wants to listen to recordings`,
      text: `\u0930\u093F\u0915\u0949\u0930\u094D\u0921\u093F\u0902\u0917 \u0915\u0940 \u0938\u092E\u0940\u0915\u094D\u0937\u093E \u0915\u0930\u0947\u0902 (\u091C\u093C\u0930\u0942\u0930\u0940 \u0928\u0939\u0940\u0902)`
    },
    {
      key: `
    You have completed all your cards! We'll be reviewing them soon, and if everything
    looks good, you'll be receiving an email from rewards@perks.com within the next 7-10
    business days with a link to claim your gift card.
    <br/><br/>
    <b>Thank you for contributing <b class=count>{number_of_completed_cards} cards</b> to the project!</b>
    <br/><br/>
    (If you wish, you can now go back and review your recordings, but this is not necessary. <b>You're done!</b>)`,
      description: `Descriptive text on the done screen`,
      text: `\u0906\u092A\u0928\u0947 \u0938\u092D\u0940 \u0915\u093E\u0930\u094D\u0921 \u0915\u0940 \u0930\u093F\u0915\u0949\u0930\u094D\u0921\u093F\u0902\u0917 \u0915\u0930 \u0932\u0940 \u0939\u0948! \u091C\u0932\u094D\u0926 \u0939\u0940 \u0939\u092E \u0909\u0928\u0915\u0940 \u0938\u092E\u0940\u0915\u094D\u0937\u093E \u0915\u0930\u0947\u0902\u0917\u0947 \u0914\u0930 \u0905\u0917\u0930 \u0939\u092E\u0947\u0902 \u0915\u094B\u0908 \u0938\u092E\u0938\u094D\u092F\u093E \u0928\u0939\u0940\u0902 \u092E\u093F\u0932\u0940, \u0924\u094B rewards@perks.com \u0938\u0947 \u0906\u092A\u0915\u094B \u090F\u0915 \u0908\u092E\u0947\u0932 \u092D\u0947\u091C\u093E \u091C\u093E\u090F\u0917\u093E. \u092F\u0939 \u0908\u092E\u0947\u0932, \u0906\u092A\u0915\u094B 7 \u0938\u0947 10 \u0915\u093E\u092E\u0915\u093E\u091C\u0940 \u0926\u093F\u0928\u094B\u0902 \u0915\u0947 \u0905\u0902\u0926\u0930 \u092E\u093F\u0932\u0947\u0917\u093E. \u0938\u093E\u0925 \u0939\u0940, \u0907\u0938\u092E\u0947\u0902 \u090F\u0915 \u0932\u093F\u0902\u0915 \u0939\u094B\u0917\u093E \u091C\u093F\u0938\u0915\u0940 \u092E\u0926\u0926 \u0938\u0947 \u0909\u092A\u0939\u093E\u0930 \u0915\u093E\u0930\u094D\u0921 \u0915\u093E \u0926\u093E\u0935\u093E \u0915\u093F\u092F\u093E \u091C\u093E \u0938\u0915\u0924\u093E \u0939\u0948. <br/><br/> <b>Project Euphonia \u092E\u0947\u0902 <b class=count>{number_of_completed_cards} \u0915\u093E\u0930\u094D\u0921</b> \u0915\u093E \u092F\u094B\u0917\u0926\u093E\u0928 \u0926\u0947\u0928\u0947 \u0915\u0947 \u0932\u093F\u090F \u0927\u0928\u094D\u092F\u0935\u093E\u0926!</b> <br/><br/> \u0906\u092A\u0915\u0947 \u092A\u093E\u0938 \u092A\u0940\u091B\u0947 \u091C\u093E\u0915\u0930 \u0905\u092A\u0928\u0940 \u0930\u093F\u0915\u0949\u0930\u094D\u0921\u093F\u0902\u0917 \u0915\u0940 \u0938\u092E\u0940\u0915\u094D\u0937\u093E \u0915\u0930\u0928\u0947 \u0915\u093E \u0935\u093F\u0915\u0932\u094D\u092A \u0939\u0948. \u0939\u093E\u0932\u093E\u0902\u0915\u093F, \u0910\u0938\u093E \u0915\u0930\u0928\u093E \u091C\u093C\u0930\u0942\u0930\u0940 \u0928\u0939\u0940\u0902 \u0939\u0948. <b>\u0939\u094B \u0917\u092F\u093E!</b>`
    },
    {
      key: `__INTEREST_FORM_HTML__`,
      description: `The HTML for the interest form; all HTML IDs must be intact exactly as is!`,
      // Each translatable string is on a line by itself to make it a little easier to translate
      text: `

    <div class=title
    >Google Project Euphonia \u092E\u0947\u0902 \u0926\u093F\u0932\u091A\u0938\u094D\u092A\u0940 \u0926\u093F\u0916\u093E\u0928\u0947 \u0938\u0947 \u091C\u0941\u0921\u093C\u093E \u095E\u0949\u0930\u094D\u092E</div>
    <div class=sectiontitle
    >\u0906\u092A\u0915\u0947 \u092C\u093E\u0930\u0947 \u092E\u0947\u0902 \u091C\u093E\u0928\u0915\u093E\u0930\u0940</div>
    <div class=formbox>
    <div class=fieldname><label for=ifname
    >\u0928\u093E\u092E</label>
    <span class=optional
    >(\u095B\u0930\u0942\u0930\u0940 \u0928\u0939\u0940\u0902)</span>
    </div>
    <div class=fielddescription
    >\u0915\u094B\u0908 \u0926\u0942\u0938\u0930\u093E \u0928\u093E\u092E, \u0928\u093E\u092E \u0914\u0930 \u0938\u0930\u0928\u0947\u092E, \u0938\u093F\u0930\u094D\u092B\u093C \u0928\u093E\u092E \u0935\u0917\u0948\u0930\u0939. \u0906\u092A\u0915\u094B \u091C\u093F\u0938 \u0928\u093E\u092E \u0938\u0947 \u092A\u0941\u0915\u093E\u0930\u093E \u091C\u093E\u0928\u093E \u092A\u0938\u0902\u0926 \u0939\u094B!</div>
    <input id=ifname class=formtext />
    </div>
    
    <div class=formbox>
    <div class=fieldname><label for=ifcountry
    >\u0906\u092A\u0915\u093E \u0928\u093F\u0935\u093E\u0938 \u0915\u093F\u0938 \u0926\u0947\u0936 \u092E\u0947\u0902 \u0939\u0948?</label>
    <span class=required>*</span></div>
    <div class=fielddescription
    >\u091C\u093C\u0930\u0942\u0930\u0940 \u0938\u0942\u091A\u0928\u093E, \u0915\u0943\u092A\u092F\u093E \u0927\u094D\u092F\u093E\u0928 \u0926\u0947\u0902: \u0939\u092E\u0947\u0902 \u0916\u0947\u0926 \u0939\u0948 \u0915\u093F \u0924\u093E\u0930\u0947 \u0915\u0947 \u0928\u093F\u0936\u093E\u0928 (*) \u0915\u0947 \u0938\u093E\u0925 \u0928\u0940\u091A\u0947 \u0926\u093F\u090F \u0917\u090F \u0926\u0947\u0936\u094B\u0902 \u0915\u0947 \u0928\u093E\u0917\u0930\u093F\u0915\u094B\u0902 \u0915\u094B \u0939\u092E \u0907\u0938 \u0938\u092E\u092F \u0909\u092A\u0939\u093E\u0930 \u0915\u093E\u0930\u094D\u0921 \u0928\u0939\u0940\u0902 \u092D\u0947\u091C \u0938\u0915\u0924\u0947. \u0905\u0917\u0930 \u0906\u092A\u0915\u093E \u0928\u093F\u0935\u093E\u0938 \u0907\u0928\u092E\u0947\u0902 \u0938\u0947 \u0915\u093F\u0938\u0940 \u0926\u0947\u0936 \u092E\u0947\u0902 \u0939\u0948, \u0924\u092C \u092D\u0940 \u0939\u092E \u0906\u092A\u0915\u093E Project Euphonia \u0930\u093F\u0938\u0930\u094D\u091A \u092E\u0947\u0902 \u092D\u093E\u0917 \u0932\u0947\u0928\u0947 \u0915\u093E \u0938\u094D\u0935\u093E\u0917\u0924 \u0915\u0930\u0924\u0947 \u0939\u0948\u0902. \u0906\u0928\u0947 \u0935\u093E\u0932\u0947 \u0938\u092E\u092F \u092E\u0947\u0902 \u091C\u092C \u092D\u0940 \u0906\u092A\u0915\u094B \u0909\u092A\u0939\u093E\u0930 \u0915\u093E\u0930\u094D\u0921 \u092D\u0947\u091C\u0947 \u091C\u093E \u0938\u0915\u0947\u0902\u0917\u0947, \u0939\u092E \u0906\u092A\u0915\u094B \u0907\u0938\u0915\u0940 \u0938\u0942\u091A\u0928\u093E \u0926\u0947\u0902\u0917\u0947
    </div>
    <select id=ifcountry class=formselect>
    <option value="India">\u092D\u093E\u0930\u0924</option>
    <option value="USA">United States of America</option>
    <option value="* Afghanistan">* Afghanistan</option>
    <option value="* Albania">* Albania</option>
    <option value="Algeria">Algeria</option>
    <option value="Andorra">Andorra</option>
    <option value="Angola">Angola</option>
    <option value="Antigua and Barbuda">Antigua and Barbuda</option>
    <option value="Argentina">Argentina</option>
    <option value="Armenia">Armenia</option>
    <option value="Aruba">Aruba</option>
    <option value="Australia">Australia</option>
    <option value="Austria">Austria</option>
    <option value="Azerbaijan">Azerbaijan</option>
    <option value="* Bahamas, The">* Bahamas, The</option>
    <option value="Bahrain">Bahrain</option>
    <option value="Bangladesh">Bangladesh</option>
    <option value="* Barbados">* Barbados</option>
    <option value="* Belarus">* Belarus</option>
    <option value="Belgium">Belgium</option>
    <option value="Belize">Belize</option>
    <option value="* Benin">* Benin</option>
    <option value="Bhutan">Bhutan</option>
    <option value="Bolivia">Bolivia</option>
    <option value="* Bosnia and Herzegovina">* Bosnia and Herzegovina</option>
    <option value="Botswana">Botswana</option>
    <option value="Brazil">Brazil</option>
    <option value="Brunei">Brunei</option>
    <option value="Bulgaria">Bulgaria</option>
    <option value="* Burkina Faso">* Burkina Faso</option>
    <option value="* Burma">* Burma</option>
    <option value="* Burundi">* Burundi</option>
    <option value="* Cambodia">* Cambodia</option>
    <option value="Cameroon">Cameroon</option>
    <option value="Canada">Canada</option>
    <option value="Cabo Verde">Cabo Verde</option>
    <option value="* Central African Republic">* Central African Republic</option>
    <option value="* Chad">* Chad</option>
    <option value="Chile">Chile</option>
    <option value="China">China</option>
    <option value="* Colombia">* Colombia</option>
    <option value="* Comoros">* Comoros</option>
    <option value="* Congo, Democratic Republic of the">* Congo, Democratic Republic of the</option>
    <option value="* Congo, Republic of the">* Congo, Republic of the</option>
    <option value="Costa Rica">Costa Rica</option>
    <option value="* Cote d'Ivoire">* Cote d'Ivoire</option>
    <option value="Croatia">Croatia</option>
    <option value="* Cuba">* Cuba</option>
    <option value="Curacao">Curacao</option>
    <option value="Cyprus">Cyprus</option>
    <option value="Czechia">Czechia</option>
    <option value="Denmark">Denmark</option>
    <option value="Djibouti">Djibouti</option>
    <option value="Dominica">Dominica</option>
    <option value="* Dominican Republic">* Dominican Republic</option>
    <option value="East Timor (see Timor-Leste)">East Timor (see Timor-Leste)</option>
    <option value="Ecuador">Ecuador</option>
    <option value="Egypt">Egypt</option>
    <option value="El Salvador">El Salvador</option>
    <option value="* Equatorial Guinea">* Equatorial Guinea</option>
    <option value="* Eritrea">* Eritrea</option>
    <option value="Estonia">Estonia</option>
    <option value="Eswatini">Eswatini</option>
    <option value="Ethiopia">Ethiopia</option>
    <option value="Fiji">Fiji</option>
    <option value="Finland">Finland</option>
    <option value="France">France</option>
    <option value="Gabon">Gabon</option>
    <option value="Gambia, The">Gambia, The</option>
    <option value="Georgia">Georgia</option>
    <option value="Germany">Germany</option>
    <option value="Ghana">Ghana</option>
    <option value="Greece">Greece</option>
    <option value="Grenada">Grenada</option>
    <option value="Guatemala">Guatemala</option>
    <option value="* Guinea">* Guinea</option>
    <option value="* Guinea-Bissau">* Guinea-Bissau</option>
    <option value="Guyana">Guyana</option>
    <option value="* Haiti">* Haiti</option>
    <option value="Holy See">Holy See</option>
    <option value="Honduras">Honduras</option>
    <option value="Hong Kong">Hong Kong</option>
    <option value="Hungary">Hungary</option>
    <option value="Iceland">Iceland</option>
    <option value="Indonesia">Indonesia</option>
    <option value="* Iran">* Iran</option>
    <option value="* Iraq">* Iraq</option>
    <option value="Ireland">Ireland</option>
    <option value="Israel">Israel</option>
    <option value="Italy">Italy</option>
    <option value="Jamaica">Jamaica</option>
    <option value="Japan">Japan</option>
    <option value="Jordan">Jordan</option>
    <option value="Kazakhstan">Kazakhstan</option>
    <option value="Kenya">Kenya</option>
    <option value="Kiribati">Kiribati</option>
    <option value="Korea, North">Korea, North</option>
    <option value="Korea, South">Korea, South</option>
    <option value="* Kosovo">* Kosovo</option>
    <option value="Kuwait">Kuwait</option>
    <option value="Kyrgyzstan">Kyrgyzstan</option>
    <option value="* Laos">* Laos</option>
    <option value="* Latvia">* Latvia</option>
    <option value="* Lebanon">* Lebanon</option>
    <option value="* Lesotho">* Lesotho</option>
    <option value="* Liberia">* Liberia</option>
    <option value="* Libya">* Libya</option>
    <option value="Liechtenstein">Liechtenstein</option>
    <option value="Lithuania">Lithuania</option>
    <option value="Luxembourg">Luxembourg</option>
    <option value="Macau">Macau</option>
    <option value="* Madagascar">* Madagascar</option>
    <option value="Malawi">Malawi</option>
    <option value="Malaysia">Malaysia</option>
    <option value="Maldives">Maldives</option>
    <option value="* Mali">* Mali</option>
    <option value="Malta">Malta</option>
    <option value="Marshall Islands">Marshall Islands</option>
    <option value="Mauritania">Mauritania</option>
    <option value="* Mauritius">* Mauritius</option>
    <option value="Mexico">Mexico</option>
    <option value="Micronesia">Micronesia</option>
    <option value="Moldova">Moldova</option>
    <option value="Monaco">Monaco</option>
    <option value="Mongolia">Mongolia</option>
    <option value="* Montenegro">* Montenegro</option>
    <option value="Morocco">Morocco</option>
    <option value="Mozambique">Mozambique</option>
    <option value="Namibia">Namibia</option>
    <option value="Nauru">Nauru</option>
    <option value="Nepal">Nepal</option>
    <option value="Netherlands">Netherlands</option>
    <option value="New Zealand">New Zealand</option>
    <option value="* Nicaragua">* Nicaragua</option>
    <option value="Niger">Niger</option>
    <option value="* Nigeria">* Nigeria</option>
    <option value="* North Korea">* North Korea</option>
    <option value="* North Macedonia">* North Macedonia</option>
    <option value="Norway">Norway</option>
    <option value="Oman">Oman</option>
    <option value="Pakistan">Pakistan</option>
    <option value="Palau">Palau</option>
    <option value="Palestinian Territories">Palestinian Territories</option>
    <option value="* Panama">* Panama</option>
    <option value="Papua New Guinea">Papua New Guinea</option>
    <option value="Paraguay">Paraguay</option>
    <option value="Peru">Peru</option>
    <option value="Philippines">Philippines</option>
    <option value="Poland">Poland</option>
    <option value="Portugal">Portugal</option>
    <option value="Qatar">Qatar</option>
    <option value="Romania">Romania</option>
    <option value="* Russia">* Russia</option>
    <option value="Rwanda">Rwanda</option>
    <option value="Saint Kitts and Nevis">Saint Kitts and Nevis</option>
    <option value="Saint Lucia">Saint Lucia</option>
    <option value="Saint Vincent and the Grenadines">Saint Vincent and the Grenadines</option>
    <option value="Samoa">Samoa</option>
    <option value="San Marino">San Marino</option>
    <option value="Sao Tome and Principe">Sao Tome and Principe</option>
    <option value="Saudi Arabia">Saudi Arabia</option>
    <option value="Senegal">Senegal</option>
    <option value="* Serbia">* Serbia</option>
    <option value="Seychelles">Seychelles</option>
    <option value="Sierra Leone">Sierra Leone</option>
    <option value="Singapore">Singapore</option>
    <option value="Sint Maarten">Sint Maarten</option>
    <option value="Slovakia">Slovakia</option>
    <option value="* Slovenia">* Slovenia</option>
    <option value="Solomon Islands">Solomon Islands</option>
    <option value="* Somalia">* Somalia</option>
    <option value="South Africa">South Africa</option>
    <option value="South Korea">South Korea</option>
    <option value="* South Sudan">* South Sudan</option>
    <option value="Spain">Spain</option>
    <option value="Sri Lanka">Sri Lanka</option>
    <option value="* Sudan">* Sudan</option>
    <option value="Suriname">Suriname</option>
    <option value="Swaziland">Swaziland</option>
    <option value="Sweden">Sweden</option>
    <option value="Switzerland">Switzerland</option>
    <option value="* Syria">* Syria</option>
    <option value="Taiwan">Taiwan</option>
    <option value="Tajikistan">Tajikistan</option>
    <option value="Tanzania">Tanzania</option>
    <option value="Thailand">Thailand</option>
    <option value="Timor-Leste">Timor-Leste</option>
    <option value="Togo">Togo</option>
    <option value="Tonga">Tonga</option>
    <option value="Trinidad and Tobago">Trinidad and Tobago</option>
    <option value="* Tunisia">* Tunisia</option>
    <option value="* Turkey">* Turkey</option>
    <option value="Turkmenistan">Turkmenistan</option>
    <option value="Tuvalu">Tuvalu</option>
    <option value="* Uganda">* Uganda</option>
    <option value="* Ukraine">* Ukraine</option>
    <option value="United Arab Emirates">United Arab Emirates</option>
    <option value="United Kingdom">United Kingdom</option>
    <option value="Uruguay">Uruguay</option>
    <option value="Uzbekistan">Uzbekistan</option>
    <option value="Vanuatu">Vanuatu</option>
    <option value="* Venezuela">* Venezuela</option>
    <option value="Vietnam">Vietnam</option>
    <option value="Yemen">Yemen</option>
    <option value="Zambia">Zambia</option>
    <option value="* Zimbabwe">* Zimbabwe</option>
    </select>
    </div>
    
    <div class=formbox id=usstatebox>
    <div class=fieldname><label for=ifstate
    >\u0906\u092A\u0915\u093E \u0928\u093F\u0935\u093E\u0938 \u0915\u093F\u0938 \u0926\u0947\u0936 \u092F\u093E \u0907\u0932\u093E\u0915\u0947 \u092E\u0947\u0902 \u0939\u0948?</label>
    <span class=required>*</span></div>
    <select id=ifstate class=formselect>
    <option value=""></option>
    <option value="AL">Alabama</option>
    <option value="AK">Alaska</option>
    <option value="AZ">Arizona</option>
    <option value="AR">Arkansas</option>
    <option value="AS">American Samoa</option>
    <option value="CA">California</option>
    <option value="CO">Colorado</option>
    <option value="CT">Connecticut</option>
    <option value="DE">Delaware</option>
    <option value="FL">Florida</option>
    <option value="GA">Georgia</option>
    <option value="GU">Guam</option>
    <option value="HI">Hawaii</option>
    <option value="ID">Idaho</option>
    <option value="IL">Illinois</option>
    <option value="IN">Indiana</option>
    <option value="IA">Iowa</option>
    <option value="KS">Kansas</option>
    <option value="KY">Kentucky</option>
    <option value="LA">Louisiana</option>
    <option value="ME">Maine</option>
    <option value="MD">Maryland</option>
    <option value="MA">Massachusetts</option>
    <option value="MI">Michigan</option>
    <option value="MN">Minnesota</option>
    <option value="MS">Mississippi</option>
    <option value="MO">Missouri</option>
    <option value="MT">Montana</option>
    <option value="NE">Nebraska</option>
    <option value="NV">Nevada</option>
    <option value="NH">New Hampshire</option>
    <option value="NJ">New Jersey</option>
    <option value="NM">New Mexico</option>
    <option value="NY">New York</option>
    <option value="NC">North Carolina</option>
    <option value="ND">North Dakota</option>
    <option value="MP">Northern Mariana Islands</option>
    <option value="OH">Ohio</option>
    <option value="OK">Oklahoma</option>
    <option value="OR">Oregon</option>
    <option value="PA">Pennsylvania</option>
    <option value="PR">Puerto Rico</option>
    <option value="RI">Rhode Island</option>
    <option value="SC">South Carolina</option>
    <option value="SD">South Dakota</option>
    <option value="TN">Tennessee</option>
    <option value="TX">Texas</option>
    <option value="VI">U.S. Virgin Islands</option>
    <option value="UT">Utah</option>
    <option value="VT">Vermont</option>
    <option value="VA">Virginia</option>
    <option value="WA">Washington</option>
    <option value="WV">West Virginia</option>
    <option value="WI">Wisconsin</option>
    <option value="WY">Wyoming</option>
    </select>
    </div>
    
    <div class=formbox>
    <div class=fieldname><label for=ifcity
    >\u0906\u092A\u0915\u093E \u0918\u0930 \u0915\u093F\u0938 \u0936\u0939\u0930 \u092E\u0947\u0902 \u0939\u0948?</label>
    <span class=optional
    >(\u095B\u0930\u0942\u0930\u0940 \u0928\u0939\u0940\u0902)</span>
    </div>
    <input id=ifcity class=formtext />
    </div>
    
    <div class=formbox>
    <div class=fieldname><label for=ifaccent
    >\u0906\u092A\u0915\u094B \u0905\u092A\u0928\u0947 \u092C\u094B\u0932\u0928\u0947 \u0915\u0947 \u0932\u0939\u091C\u093C\u0947 \u0915\u094B \u0915\u093F\u0938 \u0915\u0948\u091F\u0917\u0930\u0940 \u092E\u0947\u0902 \u0930\u0916\u0928\u093E \u0939\u0948?</label>
    <span class=optional
    >(\u095B\u0930\u0942\u0930\u0940 \u0928\u0939\u0940\u0902)</span>
    </div>
    <input id=ifaccent class=formtext />
    </div>
    
    <div class=sectiontitle
    >\u091C\u093C\u094D\u092F\u093E\u0926\u093E \u091C\u093E\u0928\u0915\u093E\u0930\u0940</div>
    
    <div class=formbox>
    <div class=fieldname><label for=ifreferral
    >\u0915\u0943\u092A\u092F\u093E \u0939\u092E\u0947\u0902 \u092C\u0924\u093E\u090F\u0902 \u0915\u093F \u0906\u092A\u0915\u094B \u0907\u0938 \u092A\u094D\u0930\u094B\u091C\u0947\u0915\u094D\u091F \u0915\u0947 \u092C\u093E\u0930\u0947 \u092E\u0947\u0902 \u091C\u093E\u0928\u0915\u093E\u0930\u0940 \u0915\u0939\u093E\u0902 \u0938\u0947 \u092E\u093F\u0932\u0940</label>
    <span class=optional
    >(\u095B\u0930\u0942\u0930\u0940 \u0928\u0939\u0940\u0902)</span>
    </div>
    <input id=ifreferral class=formtext />
    </div>
    
    <div class=formbox role=radiogroup id=ifgendergroup style="display: none;">
    <div class=fieldname><label for=ifgendergroup
    >\u0906\u092A\u0915\u0940 \u0932\u0948\u0902\u0917\u093F\u0915 \u092A\u0939\u091A\u093E\u0928 \u0915\u094D\u092F\u093E \u0939\u0948</label>
    <span class=optional
    >(\u095B\u0930\u0942\u0930\u0940 \u0928\u0939\u0940\u0902)</span>
    </div>
    <div class=checkboxrow>
    <input type=radio name=ifgender id=ifgenderfemale />
    <label for=ifgenderfemale
    >\u092E\u0939\u093F\u0932\u093E</label>
    </div>
    <div class=checkboxrow>
    <input type=radio name=ifgender id=ifgendermale />
    <label for=ifgendermale
    >\u092A\u0941\u0930\u0941\u0937</label>
    </div>
    <div class=checkboxrow>
    <input type=radio name=ifgender id=ifgenderno />
    <label for=ifgenderno
    >\u092E\u0941\u091D\u0947 \u0928\u0939\u0940\u0902 \u092C\u0924\u093E\u0928\u093E</label>
    </div>
    <div class=checkboxrow>
    <input type=radio name=ifgender id=ifgenderother />
    <label for=ifgenderother
    >\u0905\u0928\u094D\u092F:</label>
    <input type=text class=formtext id=ifgenderothertext />
    </div>
    </div>
    
    <div class=formbox style="display: none;">
    <div class=fieldname><label for=ifrace
    >\u0906\u092A \u0915\u093F\u0938 \u0928\u0938\u094D\u0932 \u0938\u0947 \u0939\u0948\u0902</label>
    <span class=optional
    >(\u095B\u0930\u0942\u0930\u0940 \u0928\u0939\u0940\u0902)</span>
    </div>
    <input id=ifrace class=formtext />
    </div>
    
    <div class=formbox>
    <div class=fieldname
    >\u0906\u092A\u0915\u0947 \u092A\u093E\u0938 \u0907\u0928\u092E\u0947\u0902 \u0938\u0947 \u0915\u093F\u0928 \u0938\u0941\u0935\u093F\u0927\u093E\u0913\u0902 \u0915\u093E \u0910\u0915\u094D\u0938\u0947\u0938 \u0939\u0948?
    <span class=optional
    >(\u095B\u0930\u0942\u0930\u0940 \u0928\u0939\u0940\u0902)</span>
    </div>
    <div class=checkboxrow>
    <input type=checkbox id=ifdevicecomputer />
    <label for=ifdevicecomputer
    >\u0907\u0902\u091F\u0930\u0928\u0947\u091F \u0915\u0928\u0947\u0915\u094D\u0936\u0928 \u0915\u0947 \u0938\u093E\u0925 \u090F\u0915 \u0915\u0902\u092A\u094D\u092F\u0942\u091F\u0930 \u091C\u093F\u0938\u092E\u0947\u0902 \u092E\u093E\u0907\u0915\u094D\u0930\u094B\u092B\u093C\u094B\u0928 \u0914\u0930 \u0938\u094D\u092A\u0940\u0915\u0930 \u0915\u0940 \u0938\u0941\u0935\u093F\u0927\u093E \u092E\u094C\u091C\u0942\u0926 \u0939\u094B</label>
    </div>
    <div class=checkboxrow>
    <input type=checkbox id=ifdeviceandroid />
    <label for=ifdeviceandroid
    >\u090F\u0915 Android \u095E\u094B\u0928 \u092F\u093E \u091F\u0948\u092C\u0932\u0947\u091F, \u091C\u0948\u0938\u0947 \u0915\u093F Samsung, Pixel, Nexus \u0935\u0917\u0948\u0930\u0939</label>
    </div>
    <div class=checkboxrow>
    <input type=checkbox id=ifdeviceiphone />
    <label for=ifdeviceiphone
    >iPhone \u092F\u093E iPad</label>
    </div>
    <div class=checkboxrow>
    <input type=checkbox id=ifdevicenone />
    <label for=ifdevicenone
    >\u0907\u0928\u092E\u0947\u0902 \u0938\u0947 \u0915\u094B\u0908 \u0928\u0939\u0940\u0902</label>
    </div>
    <div class=checkboxrow>
    <input type=checkbox id=ifdeviceother />
    <label for=ifdeviceother
    >\u0905\u0928\u094D\u092F:</label>
    <input type=text class=formtext id=ifdeviceothertext aria-labelledby="ifdeviceotherlabel" />
    </div>
    </div>
    
    <div class=formbox id=helperbox>
    <div class=fieldname
    >\u0915\u094D\u092F\u093E \u092C\u094B\u0932\u0940 \u0915\u0947 \u0938\u0948\u0902\u092A\u0932 \u0930\u093F\u0915\u0949\u0930\u094D\u0921 \u0915\u0930\u0928\u0947 \u092E\u0947\u0902 \u0915\u094B\u0908 \u0906\u092A\u0915\u0940 \u092E\u0926\u0926 \u0915\u0930\u0947\u0917\u093E
    <span class=required>*</span></div>
    <div class=fielddescription
    >\u0909\u0926\u093E\u0939\u0930\u0923 \u0915\u0947 \u0932\u093F\u090F, \u092A\u0930\u093F\u0935\u093E\u0930 \u0915\u093E \u0915\u094B\u0908 \u0938\u0926\u0938\u094D\u092F, \u092C\u094B\u0932\u0940 \u0915\u094B \u092C\u0947\u0939\u0924\u0930 \u092C\u0928\u093E\u0928\u0947 \u092E\u0947\u0902 \u092E\u0926\u0926 \u0915\u0930\u0928\u0947 \u0935\u093E\u0932\u093E \u091A\u093F\u0915\u093F\u0924\u094D\u0938\u0915 \u092F\u093E \u0915\u094B\u0908 \u0905\u0928\u094D\u092F \u0935\u094D\u092F\u0915\u094D\u0924\u093F</div>
    <div class=checkboxrow>
    <input type=radio name=ifhelper id=ifhelperno selected />
    <label for=ifhelperno
    >\u0928\u0939\u0940\u0902, \u092E\u0941\u091D\u0947 \u0907\u0938\u0915\u0947 \u0932\u093F\u090F \u0915\u093F\u0938\u0940 \u0915\u0940 \u092E\u0926\u0926 \u0915\u0940 \u091C\u093C\u0930\u0942\u0930\u0924 \u0928\u0939\u0940\u0902 \u092A\u0921\u093C\u0947\u0917\u0940</label>
    </div>
    <div class=checkboxrow>
    <input type=radio name=ifhelper id=ifhelperyes />
    <label for=ifhelperyes
    >\u0939\u093E\u0902, \u0907\u0938\u0915\u0947 \u0932\u093F\u090F \u0915\u094B\u0908 \u092E\u0941\u091D\u0947 \u092E\u0926\u0926 \u0915\u0930\u0947\u0917\u093E \u0914\u0930 \u0909\u0928\u094D\u0939\u0947\u0902 \u0906\u092A\u0938\u0947 \u0905\u092A\u0928\u0940 \u0938\u0902\u092A\u0930\u094D\u0915 \u091C\u093E\u0928\u0915\u093E\u0930\u0940 \u0936\u0947\u092F\u0930 \u092E\u0947\u0902 \u0915\u094B\u0908 \u092A\u0930\u0947\u0936\u093E\u0928\u0940 \u0928\u0939\u0940\u0902 \u0939\u0948</label>
    </div>
    </div>
    
    <!-- Helper panel appears if the user chooses "yes" above -->
    <div id=helpersection>
    <div class=sectiontitle
    >\u0906\u092A\u0915\u0940 \u092E\u0926\u0926 \u0915\u0930\u0928\u0947 \u0935\u093E\u0932\u0947 \u0935\u094D\u092F\u0915\u094D\u0924\u093F \u0915\u0947 \u092C\u093E\u0930\u0947 \u092E\u0947\u0902 \u091C\u093E\u0928\u0915\u093E\u0930\u0940</div>
    <div class=formbox>
    <div class=fielddescription>
    \u0915\u0943\u092A\u092F\u093E \u0939\u092E\u0947\u0902 \u0906\u092A\u0915\u0940 \u092E\u0926\u0926 \u0915\u0930\u0928\u0947 \u0935\u093E\u0932\u0947 \u0935\u094D\u092F\u0915\u094D\u0924\u093F \u0915\u0947 \u092C\u093E\u0930\u0947 \u092E\u0947\u0902 \u091C\u093E\u0928\u0915\u093E\u0930\u0940 \u0926\u0947\u0902, \u0924\u093E\u0915\u093F \u0939\u092E \u0906\u092A \u0926\u094B\u0928\u094B\u0902 \u0938\u0947 \u0938\u0902\u092A\u0930\u094D\u0915 \u0915\u0930 \u092A\u093E\u090F\u0902. \u092E\u0926\u0926 \u0915\u0930\u0928\u0947 \u0935\u093E\u0932\u0947 \u0935\u094D\u092F\u0915\u094D\u0924\u093F \u0915\u0940 \u091C\u093E\u0928\u0915\u093E\u0930\u0940 \u0926\u0947\u0928\u0947 \u0915\u093E \u092E\u0924\u0932\u092C \u0939\u0948 \u0915\u093F \u0907\u0938 \u0930\u093F\u0938\u0930\u094D\u091A \u092E\u0947\u0902 \u0906\u092A\u0915\u0947 \u0939\u093F\u0938\u094D\u0938\u093E \u0932\u0947\u0928\u0947 \u0938\u0947 \u091C\u0941\u0921\u093C\u0940 \u0938\u092D\u0940 \u091C\u093E\u0928\u0915\u093E\u0930\u0940, \u0909\u0938 \u0935\u094D\u092F\u0915\u094D\u0924\u093F \u0915\u0947 \u0938\u093E\u0925 \u092D\u0940 \u0936\u0947\u092F\u0930 \u0915\u0940 \u091C\u093E\u090F\u0917\u0940 \u0914\u0930 \u0906\u092A \u0907\u0938 \u092C\u093E\u0924 \u0938\u0947 \u0938\u0939\u092E\u0924 \u0939\u0948\u0902. \u092E\u0926\u0926 \u0915\u0930\u0928\u0947 \u0935\u093E\u0932\u0947 \u090F\u0915 \u0938\u0947 \u091C\u094D\u093C\u092F\u093E\u0926\u093E \u0935\u094D\u092F\u0915\u094D\u0924\u093F\u092F\u094B\u0902 \u0915\u0947 \u0928\u093E\u092E \u0914\u0930 \u0909\u0928\u0915\u0947 \u0908\u092E\u0947\u0932 \u092A\u0924\u0947 \u0926\u093F\u090F \u091C\u093E \u0938\u0915\u0924\u0947 \u0939\u0948\u0902. \u0939\u0930 \u0928\u093E\u092E \u0914\u0930 \u0908\u092E\u0947\u0932 \u092A\u0924\u0947 \u0915\u0947 \u092C\u0940\u091A \u0915\u0949\u092E\u093E \u091C\u093C\u0930\u0942\u0930 \u0932\u0917\u093E\u090F\u0902.
    </div>
    </div>
    
    <div class=formbox>
    <div class=fieldname><label for=ifassistantname
    >\u092E\u0926\u0926 \u0915\u0930\u0928\u0947 \u0935\u093E\u0932\u0947 \u0935\u094D\u092F\u0915\u094D\u0924\u093F \u0915\u093E \u0928\u093E\u092E</label>
    <span class=optional
    >(\u095B\u0930\u0942\u0930\u0940 \u0928\u0939\u0940\u0902)</span>
    </div>
    <input type=text class=formtext id=ifassistantname />
    </div>
    
    <div class=formbox>
    <div class=fieldname><label for=ifassistantemail
    >\u092E\u0926\u0926 \u0915\u0930\u0928\u0947 \u0935\u093E\u0932\u0947 \u0935\u094D\u092F\u0915\u094D\u0924\u093F \u0915\u093E \u0908\u092E\u0947\u0932 \u092A\u0924\u093E</label>
    <span class=required>*</span></div>
    <input type=text class=formtext id=ifassistantemail />
    </div>
    
    <div class=formbox>
    <div class=fieldname><label for=ifassistantrelationship
    >\u0907\u0938 \u0935\u094D\u092F\u0915\u094D\u0924\u093F \u0914\u0930 \u0906\u092A\u0915\u0947 \u092C\u0940\u091A \u0915\u094D\u092F\u093E \u0930\u093F\u0936\u094D\u0924\u093E \u0939\u0948?</label>
    <span class=optional
    >(\u095B\u0930\u0942\u0930\u0940 \u0928\u0939\u0940\u0902)</span>
    </div>
    <div class=fielddescription
    >\u0909\u0926\u093E\u0939\u0930\u0923 \u0915\u0947 \u0932\u093F\u090F: \u0938\u0939\u093E\u092F\u0915, \u0926\u094B\u0938\u094D\u0924, \u092A\u0930\u093F\u0935\u093E\u0930 \u0915\u093E \u0938\u0926\u0938\u094D\u092F, \u092C\u094B\u0932\u0940 \u0915\u094B \u092C\u0947\u0939\u0924\u0930 \u092C\u0928\u093E\u0928\u0947 \u092E\u0947\u0902 \u092E\u0926\u0926 \u0915\u0930\u0928\u0947 \u0935\u093E\u0932\u093E \u091A\u093F\u0915\u093F\u0924\u094D\u0938\u0915 \u0935\u0917\u0948\u0930\u0939.</div>
    <input type=text class=formtext id=ifassistantrelationship />
    </div>
    </div>
    
    <div class=sectiontitle
    >Google Project Euphonia \u0915\u0947 \u0932\u093F\u090F \u0938\u0939\u092E\u0924\u093F \u0926\u0947\u0928\u0947 \u0915\u093E \u092B\u093C\u0949\u0930\u094D\u092E</div>
    
    <div class=forminfobox>
    <div class=fieldname
    >\u0910\u0938\u0947 \u0938\u0935\u093E\u0932\u094B\u0902 \u0915\u0940 \u0938\u0942\u091A\u0940 \u091C\u093F\u0928\u092E\u0947\u0902 \u0926\u0940 \u0917\u0908 \u091C\u093E\u0928\u0915\u093E\u0930\u0940 \u0938\u0902\u0935\u0947\u0926\u0928\u0936\u0940\u0932 \u0939\u0948. \u0938\u093E\u0925 \u0939\u0940, \u0907\u0938 \u091C\u093E\u0928\u0915\u093E\u0930\u0940 \u0938\u0947 \u091C\u0935\u093E\u092C \u0926\u0947\u0928\u0947 \u0935\u093E\u0932\u0947 \u0935\u094D\u092F\u0915\u094D\u0924\u093F \u0915\u0940 \u092A\u0939\u091A\u093E\u0928 \u0915\u0940 \u091C\u093E \u0938\u0915\u0924\u0940 \u0939\u0948</div>
    <div class=fielddescription>
    \u092F\u0947 \u0938\u0935\u093E\u0932 \u092A\u0942\u091B\u0947 \u091C\u093E\u0928\u0947 \u0915\u093E \u092E\u0915\u0938\u0926, \u092F\u0939 \u092A\u0924\u093E \u0932\u0917\u093E\u0928\u093E \u0939\u0948 \u0915\u093F \u0930\u093F\u0938\u0930\u094D\u091A \u092E\u0947\u0902 \u0939\u093F\u0938\u094D\u0938\u093E \u0932\u0947\u0928\u0947 \u0935\u093E\u0932\u093E \u0935\u094D\u092F\u0915\u094D\u0924\u093F, Google \u0915\u0947 \u0907\u0938 \u0921\u0947\u091F\u093E \u0915\u0932\u0947\u0915\u094D\u0936\u0928 \u0915\u0947 \u0932\u093F\u090F \u091C\u093C\u0930\u0942\u0930\u0940 \u0936\u0930\u094D\u0924\u0947\u0902 \u092A\u0942\u0930\u0940 \u0915\u0930\u0924\u093E \u0939\u0948 \u092F\u093E \u0928\u0939\u0940\u0902. Google \u0907\u0938 \u0921\u0947\u091F\u093E \u0915\u093E \u0907\u0938\u094D\u0924\u0947\u092E\u093E\u0932, \u092C\u094B\u0932\u0940 \u092A\u0939\u091A\u093E\u0928\u0928\u0947 \u0935\u093E\u0932\u0940 \u091F\u0947\u0915\u094D\u0928\u094B\u0932\u0949\u091C\u0940 \u0938\u0947 \u091C\u0941\u0921\u093C\u0947 \u0905\u092A\u0928\u0947 \u092E\u094C\u091C\u0942\u0926\u093E \u0914\u0930 \u0906\u0928\u0947 \u0935\u093E\u0932\u0947 \u092A\u094D\u0930\u0949\u0921\u0915\u094D\u091F \u0914\u0930 \u0938\u0947\u0935\u093E\u0913\u0902 \u0915\u094B \u092C\u0947\u0939\u0924\u0930 \u092C\u0928\u093E\u0928\u0947 \u0915\u0947 \u0932\u093F\u090F \u0915\u0930\u0947\u0917\u093E. \u0907\u0938\u092E\u0947\u0902, \u0907\u0928 \u092A\u094D\u0930\u0949\u0921\u0915\u094D\u091F \u0914\u0930 \u0938\u0947\u0935\u093E\u0913\u0902 \u0915\u0947 \u0932\u093F\u090F \u0930\u093F\u0938\u0930\u094D\u091A \u0915\u0930\u0928\u093E, \u0907\u0928\u094D\u0939\u0947\u0902 \u0921\u093F\u091C\u093C\u093E\u0907\u0928 \u0914\u0930 \u0921\u0947\u0935\u0932\u092A \u0915\u0930\u0928\u093E, \u0907\u0928\u094D\u0939\u0947\u0902 \u092C\u0928\u093E\u0928\u093E, \u0914\u0930 \u0932\u094B\u0917\u094B\u0902 \u0915\u0947 \u0932\u093F\u090F \u0907\u0928\u0915\u0940 \u0938\u0941\u0932\u092D\u0924\u093E \u0915\u094B \u092C\u0947\u0939\u0924\u0930 \u0915\u0930\u0928\u093E \u0936\u093E\u092E\u093F\u0932 \u0939\u0948.
    \u0910\u0938\u093E \u0939\u094B \u0938\u0915\u0924\u093E \u0939\u0948 \u0915\u093F \u0938\u0935\u093E\u0932\u094B\u0902 \u0915\u0940 \u0907\u0938 \u0938\u0942\u091A\u0940 \u092E\u0947\u0902 \u0926\u0940 \u0917\u0908 \u091C\u093E\u0928\u0915\u093E\u0930\u0940 \u0915\u093E \u0907\u0938\u094D\u0924\u0947\u092E\u093E\u0932, \u0921\u0947\u091F\u093E \u0915\u0932\u0947\u0915\u094D\u0936\u0928 \u0915\u0947 \u0926\u094C\u0930\u093E\u0928 \u0926\u0940 \u0917\u0908 \u0906\u092A\u0915\u0940 \u0905\u0928\u094D\u092F \u091C\u093E\u0928\u0915\u093E\u0930\u0940 \u0914\u0930 \u0921\u0947\u091F\u093E \u0915\u0947 \u0938\u093E\u0925 \u092E\u093F\u0932\u093E\u0915\u0930 \u0915\u093F\u092F\u093E \u091C\u093E\u090F. \u0939\u093E\u0932\u093E\u0902\u0915\u093F, \u092F\u0939 \u0924\u092D\u0940 \u0939\u094B\u0917\u093E, \u091C\u092C \u0906\u092A\u0915\u094B \u0930\u093F\u0938\u0930\u094D\u091A \u0915\u093E \u0939\u093F\u0938\u094D\u0938\u093E \u092C\u0928\u0928\u0947 \u0915\u0947 \u0932\u093F\u090F \u091A\u0941\u0928 \u0932\u093F\u092F\u093E \u091C\u093E\u0924\u093E \u0939\u0948.
    </div>
    </div>
    
    <div class=formbox>
    <div class=fieldname>
    \u0938\u0939\u092E\u0924\u093F \u092E\u093F\u0932\u0928\u0947 \u0915\u0947 \u092C\u093E\u0926, Google \u0930\u093F\u0938\u0930\u094D\u091A \u092E\u0947\u0902 \u0939\u093F\u0938\u094D\u0938\u093E \u0932\u0947 \u0930\u0939\u0947 \u0932\u094B\u0917\u094B\u0902 \u0915\u0940 \u0928\u093F\u091C\u0940 \u091C\u093E\u0928\u0915\u093E\u0930\u0940 \u0915\u094B \u0907\u0915\u091F\u094D\u0920\u093E \u0914\u0930 \u092A\u094D\u0930\u094B\u0938\u0947\u0938 \u0915\u0930\u0924\u093E \u0939\u0948. \u0921\u0947\u091F\u093E \u0915\u0932\u0947\u0915\u094D\u0936\u0928 \u091F\u093E\u0938\u094D\u0915 \u092E\u0947\u0902 \u0939\u093F\u0938\u094D\u0938\u093E \u0932\u0947\u0928\u0947 \u092A\u0930, \u0932\u094B\u0917\u094B\u0902 \u0915\u0940 \u0935\u0939\u0940 \u0928\u093F\u091C\u0940 \u091C\u093E\u0928\u0915\u093E\u0930\u0940 \u0932\u0940 \u091C\u093E\u0924\u0940 \u0939\u0948 \u091C\u093F\u0938\u0915\u0947 \u0932\u093F\u090F \u0935\u0947 \u0905\u0928\u0941\u092E\u0924\u093F \u0926\u0947\u0924\u0947 \u0939\u0948\u0902. \u0907\u0938\u092E\u0947\u0902 \u0932\u094B\u0917\u094B\u0902 \u0915\u0940, \u0938\u0939\u093E\u092F\u0915 \u091F\u0947\u0915\u094D\u0928\u094B\u0932\u0949\u091C\u0940 \u0915\u0947 \u0907\u0938\u094D\u0924\u0947\u092E\u093E\u0932, \u0928\u0939\u0940\u0902 \u092C\u094B\u0932 \u092A\u093E\u0928\u093E \u092F\u093E \u092C\u094B\u0932\u0928\u0947 \u092E\u0947\u0902 \u0939\u094B\u0928\u0947 \u0935\u093E\u0932\u0940 \u092A\u0930\u0947\u0936\u093E\u0928\u0940, \u0914\u0930 \u092C\u094B\u0932\u0928\u0947 \u0915\u0947 \u092A\u0948\u091F\u0930\u094D\u0928 \u0915\u0940 \u091C\u093E\u0928\u0915\u093E\u0930\u0940 \u0936\u093E\u092E\u093F\u0932 \u0939\u094B\u0924\u0940 \u0939\u0948. \u0939\u093E\u0932\u093E\u0902\u0915\u093F, \u0910\u0938\u093E \u0924\u092D\u0940 \u0939\u094B\u0924\u093E \u0939\u0948, \u091C\u092C (\u0915) \u0932\u094B\u0917 \u0907\u0928 \u0938\u0935\u093E\u0932\u094B\u0902 \u0915\u0947 \u091C\u0935\u093E\u092C \u0938\u092C\u092E\u093F\u091F \u0915\u0930\u0924\u0947 \u0939\u0948\u0902 \u0914\u0930 (\u0916) \u0907\u0938 \u092A\u094D\u0930\u094B\u091C\u0947\u0915\u094D\u091F \u092E\u0947\u0902 \u0939\u093F\u0938\u094D\u0938\u093E \u0932\u0947\u0928\u0947 \u0915\u0947 \u0932\u093F\u090F \u091A\u0941\u0928\u0947 \u091C\u093E\u0924\u0947 \u0939\u0948\u0902.
    <span class=required>*</span>
    </div>
    <div class=checkboxrow>
    <input type=checkbox id=ifformconsent />
    <label for=ifformconsent>
    \u092E\u0948\u0902 \u0907\u0938\u0938\u0947 \u0938\u0939\u092E\u0924 \u0939\u0942\u0902 \u0914\u0930 \u092F\u0939\u093E\u0902 \u0905\u092A\u0928\u0947 \u0928\u093E\u092E \u0915\u093E \u092A\u0939\u0932\u093E \u0905\u0915\u094D\u0937\u0930 \u0921\u093E\u0932\u0942\u0902\u0917\u093E/\u0921\u093E\u0932\u0942\u0902\u0917\u0940:
    </label>
    <input type=text class=formtext id=ifconsentinitials aria-labelledby="ifformconsentlabel" />
    </div>
    </div>
    
    <div class=formbox>
    <div class=fieldname>
    \u0915\u0943\u092A\u092F\u093E \u0939\u092E\u093E\u0930\u0947 \u0928\u093F\u092F\u092E \u0914\u0930 \u0936\u0930\u094D\u0924\u0947\u0902 \u0914\u0930 \u0939\u092E\u093E\u0930\u0940 \u0928\u093F\u091C\u0924\u093E \u0928\u0940\u0924\u093F \u0926\u0947\u0916\u0947\u0902
    <span class=required>*</span>
    </div>
    <div class=checkboxrow>
    <input type=checkbox id=ifformtos />
    <label for=ifformtos>
    \u092E\u0948\u0902 \u0928\u093F\u092F\u092E \u0914\u0930 \u0936\u0930\u094D\u0924\u094B\u0902
    <a target="_blank" href="https://www.google.com/policies/terms/"
    >\u0938\u0947 \u0938\u0939\u092E\u0924 \u0939\u0942\u0902</a>
    \u0914\u0930 \u0938\u092E\u091D\u0924\u093E/\u0938\u092E\u091D\u0924\u0940 \u0939\u0942\u0902 \u0915\u093F \u092E\u0947\u0930\u0940 \u091C\u093E\u0928\u0915\u093E\u0930\u0940 \u0915\u093E \u0907\u0938\u094D\u0924\u0947\u092E\u093E\u0932 \u092A\u094D\u0930\u0949\u0921\u0915\u094D\u091F \u0915\u0947 \u0932\u093F\u090F \u0930\u093F\u0938\u0930\u094D\u091A, \u0921\u0947\u0935\u0932\u092A\u092E\u0947\u0902\u091F, \u0914\u0930 \u092C\u094B\u0932\u0940 \u0938\u0947 \u091C\u0941\u0921\u093C\u0940 \u091F\u0947\u0915\u094D\u0928\u094B\u0932\u0949\u091C\u0940 \u0915\u094B \u092C\u0947\u0939\u0924\u0930 \u092C\u0928\u093E\u0928\u0947 \u0915\u0947 \u0932\u093F\u090F \u0915\u093F\u092F\u093E \u091C\u093E\u090F\u0917\u093E. \u0938\u093E\u0925 \u0939\u0940, \u092F\u0939 Google \u0915\u0940 \u0928\u093F\u091C\u0924\u093E \u0928\u0940\u0924\u093F
    <a target="_blank" href="https://www.google.com/policies/privacy/"
    >\u0915\u0947 \u092E\u0941\u0924\u093E\u092C\u093F\u0915 \u0915\u093F\u092F\u093E \u091C\u093E\u090F\u0917\u093E</a>
    .
    </label>
    </div>
    </div>
    
    <div class=forminfobox>
    <div class=fieldname>
    \u0907\u0938 \u092B\u093C\u0949\u0930\u094D\u092E \u0915\u094B \u0938\u092C\u092E\u093F\u091F \u0915\u0930\u0928\u0947 \u0915\u093E \u092E\u0924\u0932\u092C \u0939\u0948 \u0915\u093F \u0906\u092A\u0928\u0947 Google \u0914\u0930 \u0909\u0938\u0915\u0940 \u0938\u0939\u093E\u092F\u0915 \u0915\u0902\u092A\u0928\u093F\u092F\u094B\u0902 \u0915\u094B, \u0908\u092E\u0947\u0932 \u0938\u0947 \u0938\u0902\u092A\u0930\u094D\u0915 \u0915\u0930\u0928\u0947 \u0915\u0940 \u0905\u0928\u0941\u092E\u0924\u093F \u0926\u0940 \u0939\u0948.
    </div>
    </div>
    
    <div class=formbox>
    <div class=fieldname><label for=ifotherinfo>
    \u0915\u094D\u092F\u093E \u0906\u092A\u0915\u094B \u0915\u094B\u0908 \u0914\u0930 \u091C\u093E\u0928\u0915\u093E\u0930\u0940 \u0936\u0947\u092F\u0930 \u0915\u0930\u0928\u0940 \u0939\u0948?
    </label>
    <span class=optional
    >(\u095B\u0930\u0942\u0930\u0940 \u0928\u0939\u0940\u0902)</span>
    </div>
    <input id=ifotherinfo class=formtext />
    </div>
    `
    }
  ];

  // ../common/strings_ja.ts
  var JA_STRINGS = [
    {
      key: `PAGE_TITLE`,
      en: `Project Euphonia`,
      description: `Web page title for all pages`,
      text: `\u30D7\u30ED\u30B8\u30A7\u30AF\u30C8\u30E6\u30FC\u30D5\u30A9\u30CB\u30A2`
    },
    {
      key: `HELP_LINK`,
      description: `Help hyperlink HREF property when the user needs help or has questions.`,
      text: `http://g.co/disabilitysupport`
    },
    {
      key: `WELCOME_TITLE`,
      en: `Welcome to Project Euphonia!`,
      description: `Signup screen and consent screen titles`,
      text: `Project Euphonia \u3078\u3088\u3046\u3053\u305D`
    },
    {
      key: `We're exploring how Google products and services
    that use speech as an input method could work better for more people. We're seeking
    voice contributions from adults who have difficulty being understood by others.
    Voice samples can help us improve how Google understands individuals with speech
    impairments.`,
      description: `Signup screen`,
      text: `Google \u3067\u306F\u3001\u97F3\u58F0\u5165\u529B\u3092\u4F7F\u7528\u3059\u308B Google \u306E\u88FD\u54C1\u3084\u30B5\u30FC\u30D3\u30B9\u304C\u3001\u3088\u308A\u591A\u304F\u306E\u4EBA\u3005\u306B\u5F79\u7ACB\u3064\u65B9\u6CD5\u3092\u6A21\u7D22\u3057\u3066\u3044\u307E\u3059\u3002Google \u3067\u306F\u3001\u805E\u304D\u53D6\u308B\u306E\u304C\u96E3\u3057\u3044 18 \u6B73\u4EE5\u4E0A\u306E\u65B9\u306E\u97F3\u58F0\u3092\u96C6\u3081\u3066\u3044\u307E\u3059\u3002\u97F3\u58F0\u30B5\u30F3\u30D7\u30EB\u306F\u3001\u767A\u8A71\u969C\u304C\u3044\u306E\u3042\u308B\u65B9\u306E\u767A\u8A71\u306B\u95A2\u3059\u308B Google \u306E\u8A8D\u8B58\u6A5F\u80FD\u306E\u6539\u5584\u306B\u5F79\u7ACB\u3061\u307E\u3059\u3002`
    },
    {
      key: `<b>IMPORTANT:</b> If you're filling out
    this form on behalf of someone else, please ensure you have their permission
    to do so.`,
      description: `Signup screen`,
      text: `<b>\u91CD\u8981:</b> \u3053\u306E\u30D5\u30A9\u30FC\u30E0\u306B\u4EE3\u7406\u3067\u8A18\u5165\u3055\u308C\u308B\u5834\u5408\u306F\u3001\u5FC5\u305A\u3054\u672C\u4EBA\u306E\u8A31\u53EF\u3092\u5F97\u308B\u3088\u3046\u306B\u3057\u3066\u304F\u3060\u3055\u3044\u3002`
    },
    {
      key: `Questions? <a id=signuphelplink target="_blank">Contact Us</a>`,
      en: `Questions? <a id=signuphelplink target="_blank">Contact Us</a>`,
      description: `Signup screen`,
      text: `\u3054\u4E0D\u660E\u306A\u70B9\u304C\u3042\u308B\u5834\u5408\u306F\u3001
        <a id=signuphelplink target="_blank"
        >\u304A\u554F\u3044\u5408\u308F\u305B\u304F\u3060\u3055\u3044</a>`
    },
    {
      key: `Already enrolled? &nbsp;`,
      description: `Signup screen`,
      text: `\u3059\u3067\u306B\u767B\u9332\u3055\u308C\u3066\u3044\u308B\u5834\u5408\u306F\u3001&nbsp;`
    },
    {
      key: `Click to sign in and continue recording`,
      description: `Signup screen`,
      text: `\u30AF\u30EA\u30C3\u30AF\u3057\u3066\u30ED\u30B0\u30A4\u30F3\u3057\u3001\u9332\u97F3\u3092\u7D9A\u884C\u3057\u307E\u3059`
    },
    {
      key: `To get started, please confirm your eligibility:`,
      description: `Signup screen`,
      text: `\u306F\u3058\u3081\u306B\u3001\u53C2\u52A0\u8CC7\u683C\u3092\u3054\u78BA\u8A8D\u304F\u3060\u3055\u3044\u3002`
    },
    {
      key: `Strangers, or voice technologies like Google Assistant, have difficulty understanding my speech (not because of an accent)`,
      description: `Signup screen eligibility question`,
      text: `\u767A\u8A71\u304C\u3001\u4ED6\u4EBA\u3084 Google \u30A2\u30B7\u30B9\u30BF\u30F3\u30C8\u306A\u3069\u306E\u97F3\u58F0\u8A8D\u8B58\u6280\u8853\u306B\u7406\u89E3\u3055\u308C\u306B\u304F\u3044\uFF08\u30A2\u30AF\u30BB\u30F3\u30C8\u3084\u8A1B\u308A\u306F\u9664\u304F\uFF09`
    },
    {
      key: `I am at least 18 years of age`,
      description: `Signup screen eligibility question`,
      text: `18 \u6B73\u4EE5\u4E0A\u3067\u3059`
    },
    {
      key: `Sign in and continue`,
      description: `Signup screen button`,
      text: `\u30ED\u30B0\u30A4\u30F3\u3057\u3066\u7D9A\u884C\u3059\u308B`
    },
    {
      key: `You will need to sign in with your Google
    Account to contribute to the project. If you do not have a Google Account, you can
    create one when you click to continue.`,
      description: `Signup screen instructions`,
      text: `\u30D7\u30ED\u30B8\u30A7\u30AF\u30C8\u306B\u53C2\u52A0\u3059\u308B\u306B\u306F\u3001Google \u30A2\u30AB\u30A6\u30F3\u30C8\u3067\u30ED\u30B0\u30A4\u30F3\u3059\u308B\u5FC5\u8981\u304C\u3042\u308A\u307E\u3059\u3002Google \u30A2\u30AB\u30A6\u30F3\u30C8\u3092\u304A\u6301\u3061\u3067\u306A\u3044\u5834\u5408\u306F\u3001\u30AF\u30EA\u30C3\u30AF\u3057\u3066\u7D9A\u884C\u3059\u308B\u3068\u4F5C\u6210\u3067\u304D\u307E\u3059\u3002`
    },
    {
      key: `Next`,
      description: `Interest form button, advance to the next screen`,
      text: `\u6B21\u3078`
    },
    {
      key: `Go Back`,
      description: `Interest form button, go back to the signup screen`,
      text: `\u623B\u308B`
    },
    {
      key: `You must type your name to agree to the terms.`,
      description: `Consent form screen, require consent to proceed`,
      text: `\u6761\u4EF6\u306B\u540C\u610F\u3059\u308B\u306B\u306F\u3001\u304A\u540D\u524D\u306E\u5165\u529B\u304C\u5FC5\u8981\u3067\u3059\u3002`
    },
    {
      key: `Reset form and start over`,
      description: `Interest form button, clear fields and start over`,
      text: `\u30D5\u30A9\u30FC\u30E0\u3092\u30EA\u30BB\u30C3\u30C8\u3057\u3066\u6700\u521D\u304B\u3089\u3084\u308A\u76F4\u3059`
    },
    {
      key: `You are enrolling as <b id=whoisenrolling>&nbsp;</b>.
    Please review the following agreement: <span id=consentcounter></span>`,
      description: `Consent screen instructions`,
      text: `<b id=whoisenrolling>&nbsp;</b> \u3068\u3057\u3066\u767B\u9332\u3057\u3066\u3044\u307E\u3059\u3002\u6B21\u306E\u540C\u610F\u4E8B\u9805\u3092\u3054\u78BA\u8A8D\u304F\u3060\u3055\u3044: <span id=consentcounter></span>`
    },
    {
      key: `Enroll`,
      description: `Consent screen, final action; consents to the program and allows recording`,
      text: `\u767B\u9332`
    },
    {
      key: `Next Agreement`,
      description: `Consent screen, to agree to the current consent and then see the next one. Only shows when there are multiple consents`,
      text: `\u6B21\u306E\u540C\u610F\u4E8B\u9805`
    },
    {
      key: `INSTRUCTIONS_TITLE`,
      en: `Thanks for signing up for Project Euphonia!`,
      description: `Instructions screen title`,
      text: `Project Euphonia \u306B\u304A\u7533\u3057\u8FBC\u307F\u3044\u305F\u3060\u304D\u3001\u3042\u308A\u304C\u3068\u3046\u3054\u3056\u3044\u307E\u3059`
    },
    {
      key: `INSTRUCTIONS_VIDEO_HTML`,
      description: `Instructional video iframe from YouTube`,
      text: `
    <iframe width="560" height="315" src="https://www.youtube.com/embed/sMLED9xrLts"
        title="YouTube video player" frameborder="0"
        allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
    `
    },
    {
      key: `INSTRUCTIONS_HTML`,
      en: `    <ul>
    <li>Please take a moment to watch this video introduction.</li>
    <li>On the next screen, you'll see <b>cards</b> to read aloud.</li>
    <li>You'll want to be in a <b>quiet setting</b> and avoid any background noise.</li>
    <li>You'll press the blue Record button, and then <b>read the
    card aloud</b>, as accurately as possible.</li>
    <li>When you are <b>finished speaking</b>, press the blue button again to stop recording.</li>
    <li>When you finish recording all the cards, you're done!</li>
    <li>Having trouble recording? <a target="_blank" href="http://g.co/disabilitysupport">Contact us</a> for help.</li>`,
      description: `Instructions screen details`,
      text: `<ul>
      <li>\u52D5\u753B\u306E\u7D39\u4ECB\u3092\u3054\u89A7\u304F\u3060\u3055\u3044\u3002</li>
      <li>\u6B21\u306E\u753B\u9762\u306B\u306F\u3001\u8AAD\u307F\u4E0A\u3052\u308B<b>\u30AB\u30FC\u30C9</b>\u304C\u8868\u793A\u3055\u308C\u307E\u3059\u3002</li>
      <li><b>\u9759\u304B\u306A\u74B0\u5883</b>\u306B\u8EAB\u3092\u7F6E\u3044\u3066\u3001\u80CC\u5F8C\u3067\u96D1\u97F3\u304C\u3057\u306A\u3044\u3088\u3046\u306B\u3057\u3066\u304F\u3060\u3055\u3044\u3002</li>
      <li>\u9752\u8272\u306E\u9332\u97F3\u30DC\u30BF\u30F3\u3092\u62BC\u3057\u3066\u3001\u3067\u304D\u308B\u3060\u3051\u6B63\u78BA\u306B<b>\u30AB\u30FC\u30C9\u3092\u8AAD\u307F\u4E0A\u3052\u3066</b>\u304F\u3060\u3055\u3044\u3002</li>
      <li><b>\u8AAD\u307F\u4E0A\u3052\u304C\u7D42\u308F\u3063\u305F\u3089</b>\u3001\u3082\u3046\u4E00\u5EA6\u9752\u3044\u30DC\u30BF\u30F3\u3092\u62BC\u3057\u3066\u9332\u97F3\u3092\u6B62\u3081\u3066\u304F\u3060\u3055\u3044\u3002</li>
      <li>\u5168\u30AB\u30FC\u30C9\u306E\u9332\u97F3\u304C\u7D42\u308F\u308C\u3070\u3001\u5B8C\u4E86\u3067\u3059</li><li>\u9332\u97F3\u306B\u554F\u984C\u304C\u3042\u308B\u5834\u5408\u306F
      <a target="_blank" href="http://g.co/disabilitysupport">\u304A\u554F\u3044\u5408\u308F\u305B</a>\u304F\u3060\u3055\u3044\u3002
      </li>`
    },
    {
      key: `Get Started`,
      description: `Instructions screen button to continue to next screen`,
      text: `\u59CB\u3081\u308B`
    },
    {
      key: `Microphone Setup`,
      description: `Microphone and settings screen title`,
      text: `\u30DE\u30A4\u30AF\u306E\u8A2D\u5B9A`
    },
    {
      key: `
    In order to record your speech, we need permission to use your microphone
    through your web browser. <b>Please click "Allow"</b> to grant use of your microphone.`,
      description: `Microphone permission instructions`,
      text: `\u767A\u8A71\u3092\u9332\u97F3\u3059\u308B\u305F\u3081\u306B\u3001Euphonia \u306F\u30A6\u30A7\u30D6\u30D6\u30E9\u30A6\u30B6\u304B\u3089\u306E\u30DE\u30A4\u30AF\u306E\u4F7F\u7528\u8A31\u53EF\u304C\u5FC5\u8981\u3067\u3059\u3002<b>\u300C\u8A31\u53EF\u300D\u3092\u30AF\u30EA\u30C3\u30AF\u3057\u3066</b>\u30DE\u30A4\u30AF\u306E\u4F7F\u7528\u3092\u8A31\u53EF\u3057\u3066\u304F\u3060\u3055\u3044\u3002`
    },
    {
      key: `
    We could not access your microphone due to a permission problem. You'll need to allow access
    in order to continue.`,
      description: `Microphone permission error message`,
      text: `\u6A29\u9650\u306E\u554F\u984C\u306B\u3088\u308A\u3001\u30DE\u30A4\u30AF\u306B\u30A2\u30AF\u30BB\u30B9\u3067\u304D\u307E\u305B\u3093\u3067\u3057\u305F\u3002\u7D9A\u884C\u3059\u308B\u306B\u306F\u3001\u30A2\u30AF\u30BB\u30B9\u3092\u8A31\u53EF\u3059\u308B\u5FC5\u8981\u304C\u3042\u308A\u307E\u3059\u3002`
    },
    {
      key: `
    It looks like your microphone permission is blocked. You'll need to <b>allow access</b>
    by clicking the <b>address bar of your browser</b>, and/or <b>reset permission</b> for the microphone.`,
      description: `Microphone permission error message`,
      text: `\u30DE\u30A4\u30AF\u306E\u6A29\u9650\u304C\u30D6\u30ED\u30C3\u30AF\u3055\u308C\u3066\u3044\u308B\u3088\u3046\u3067\u3059\u3002<b>\u30D6\u30E9\u30A6\u30B6\u306E\u30A2\u30C9\u30EC\u30B9\u30D0\u30FC</b>\u3092\u30AF\u30EA\u30C3\u30AF\u3057\u3066<b>\u30A2\u30AF\u30BB\u30B9\u3092\u8A31\u53EF</b>\u3059\u308B\u304B\u3001\u30DE\u30A4\u30AF\u306E<b>\u6A29\u9650\u3092\u30EA\u30BB\u30C3\u30C8</b>\u3059\u308B\u5FC5\u8981\u304C\u3042\u308A\u307E\u3059\u3002`
    },
    {
      key: `
    Your microphone is all set! You can start recording as soon as you're ready.`,
      description: `Microphone permission success message`,
      text: `\u30DE\u30A4\u30AF\u306F\u8A2D\u5B9A\u3055\u308C\u3066\u3044\u307E\u3059\u3002\u6E96\u5099\u304C\u6574\u3048\u3070\u3001\u3059\u3050\u306B\u9332\u97F3\u3092\u958B\u59CB\u3067\u304D\u307E\u3059\u3002`
    },
    {
      key: `Use the default microphone`,
      description: `Let's the user choose the browser's default recording device instead of picking one explicitly`,
      text: `\u30C7\u30D5\u30A9\u30EB\u30C8\u306E\u30DE\u30A4\u30AF\u3092\u4F7F\u7528\u3059\u308B`
    },
    {
      key: `Save`,
      description: `Microphone configuration screen, accept changes to microphone device`,
      text: `\u4FDD\u5B58`
    },
    {
      key: `Try again`,
      description: `Microphone permission failure retry button`,
      text: `\u3084\u308A\u76F4\u3059`
    },
    {
      key: `Start recording!`,
      description: `Microphone setup screen button, continue to recording screen`,
      text: `\u9332\u97F3\u3092\u958B\u59CB`
    },
    {
      key: `Microphone settings`,
      description: `Microphone setup screen title`,
      text: `\u30DE\u30A4\u30AF\u306E\u8A2D\u5B9A`
    },
    {
      key: `Previous card`,
      description: `Recording screen button, go back to prior card`,
      text: `\u524D\u306E\u30AB\u30FC\u30C9`
    },
    {
      key: `Next card`,
      description: `Recording screen button, go forward to next card`,
      text: `\u6B21\u306E\u30AB\u30FC\u30C9`
    },
    {
      key: `Replay`,
      description: `Recording screen button, listen to previously recorded audio`,
      text: `\u518D\u751F`
    },
    {
      key: `Stop`,
      description: `Recording screen button, to interrupt a recording that's currently being played back`,
      text: `\u505C\u6B62`
    },
    {
      key: `Delete`,
      description: `Recording screen button, delete a previous recording`,
      text: `\u524A\u9664`
    },
    {
      key: `Deleting...`,
      description: `Recording screen button, shown briefly while the recording is being deleted`,
      text: `\u524A\u9664\u4E2D...`
    },
    {
      key: `Record`,
      description: `Recording screen button, record audio for a card`,
      text: `\u9332\u97F3`
    },
    {
      key: `Record Again`,
      description: `Recording screen button, record audio for a card that already has been recorded`,
      text: `\u3082\u3046\u4E00\u5EA6\u9332\u97F3`
    },
    {
      key: `(this card is done)`,
      description: `Labels tasks that have already been recorded once`,
      text: `\uFF08\u3053\u306E\u30AB\u30FC\u30C9\u306F\u5B8C\u4E86\u3057\u3066\u3044\u307E\u3059\uFF09`
    },
    {
      key: `Cancel`,
      description: `Recording screen button and microphone setting screen button, cancel recording / microphone changes`,
      text: `\u30AD\u30E3\u30F3\u30BB\u30EB`
    },
    {
      key: `Done`,
      description: `Recording screen button, shown while recording to end the recording and start uploading it`,
      text: `\u5B8C\u4E86`
    },
    {
      key: `Starting...`,
      description: `Recording screen button, shown briefly just before the microphone starts listening`,
      text: `\u958B\u59CB\u3057\u3066\u3044\u307E\u3059...`
    },
    {
      key: `Now recording...`,
      description: `Recording screen button, shown briefly just before the microphone starts listening`,
      text: `\u9332\u97F3\u3057\u3066\u3044\u307E\u3059...`
    },
    {
      key: `Recording uploaded!`,
      description: `Recording screen message when the recording uploaded successfully`,
      text: `\u9332\u97F3\u3092\u30A2\u30C3\u30D7\u30ED\u30FC\u30C9\u3057\u307E\u3057\u305F`
    },
    {
      key: `Recording uploaded! Here's the next card.`,
      description: `Recording screen message when the recording uploads successfully and the next card is automatically displayed`,
      text: `\u9332\u97F3\u3092\u30A2\u30C3\u30D7\u30ED\u30FC\u30C9\u3057\u307E\u3057\u305F\u3002\u6B21\u306E\u30AB\u30FC\u30C9\u306F\u3053\u3061\u3089\u3067\u3059\u3002`
    },
    {
      key: `Recording deleted.`,
      description: `Recording screen message when a recording has just been deleted`,
      text: `\u9332\u97F3\u3092\u524A\u9664\u3057\u307E\u3057\u305F\u3002`
    },
    {
      key: `Recording canceled.`,
      description: `Recording screen message when a recording has just been canceled`,
      text: `\u9332\u97F3\u3092\u30AD\u30E3\u30F3\u30BB\u30EB\u3057\u307E\u3057\u305F\u3002`
    },
    {
      key: `No recording to delete.`,
      description: `Error message when the user deletes but nothing is selected.`,
      text: `\u524A\u9664\u3059\u308B\u9332\u97F3\u304C\u3042\u308A\u307E\u305B\u3093\u3002`
    },
    {
      key: `No recording to play.`,
      description: `Error message when the user replays but nothing is selected.`,
      text: `\u518D\u751F\u3059\u308B\u9332\u97F3\u304C\u3042\u308A\u307E\u305B\u3093\u3002`
    },
    {
      key: `Upload failed, your audio may not be saved.`,
      description: `Error message when the user's recording was not received by the server.`,
      text: `\u30A2\u30C3\u30D7\u30ED\u30FC\u30C9\u306B\u5931\u6557\u3057\u307E\u3057\u305F\u3002\u97F3\u58F0\u304C\u4FDD\u5B58\u3055\u308C\u3066\u3044\u306A\u3044\u53EF\u80FD\u6027\u304C\u3042\u308A\u307E\u3059\u3002`
    },
    {
      key: `Canceling...`,
      description: `Recording screen button, shown briefly when the recording is being canceled`,
      text: `\u30AD\u30E3\u30F3\u30BB\u30EB\u3057\u3066\u3044\u307E\u3059...`
    },
    {
      key: `Uploading...`,
      description: `Recording screen button, shown briefly when the recording is being uploaded`,
      text: `\u30A2\u30C3\u30D7\u30ED\u30FC\u30C9\u3057\u3066\u3044\u307E\u3059...`
    },
    {
      key: `?`,
      description: `Recording screen button, go to help screen`,
      text: `?`
    },
    {
      key: `&#x1F50A;`,
      description: `Speak prompt button, which uses computerized speech to play the prompt audibly`,
      text: `&#x1F50A;`
    },
    {
      key: `Continue`,
      description: `Sign up screen and consent screen buttons, continue to the next page`,
      text: `\u7D9A\u884C`
    },
    {
      key: `No assignments`,
      description: `Recording screen, message when the user has no cards to work on`,
      text: `\u5272\u308A\u5F53\u3066\u306A\u3057`
    },
    {
      key: `<b>{number_of_completed_cards}</b> of <b>{total_number_of_tasks_needed}</b> cards <b>done</b>`,
      description: `Recording screen, progress message of tasks completed so far`,
      text: `<b>{total_number_of_tasks_needed}</b> \u500B\u4E2D <b>{number_of_completed_cards}</b> \u500B\u306E\u30AB\u30FC\u30C9\u304C<b>\u5B8C\u4E86</b>`
    },
    {
      key: `Thank you!`,
      description: `Done screen title, shown when the user has finished at least one pass`,
      text: `\u3042\u308A\u304C\u3068\u3046\u3054\u3056\u3044\u307E\u3057\u305F`
    },
    {
      key: `          Great work! You've gone through the cards once, and recorded
    <b class=count>{number_of_completed_cards} cards</b>
    out of the total (<b>{total_number_of_tasks_needed} cards</b>).
    When you're ready, you can click the button below to finish up the rest of the cards.      `,
      description: `Done screen instructions, asks the user to go finish the rest of the cards`,
      text: `\u304A\u3064\u304B\u308C\u3055\u307E\u3067\u3057\u305F\u3002\u30AB\u30FC\u30C9\u3092\u4E00\u5EA6\u8AAD\u307F\u4E0A\u3052\u3001\u5168\u4F53\uFF08<b>{total_number_of_tasks_needed} \u30AB\u30FC\u30C9</b>\uFF09\u306E\u3046\u3061 <b class=count>{number_of_completed_cards} \u30AB\u30FC\u30C9</b>\u3092\u9332\u97F3\u3057\u307E\u3057\u305F\u3002\u6E96\u5099\u304C\u6574\u3063\u305F\u3089\u3001\u4E0B\u306E\u30DC\u30BF\u30F3\u3092\u30AF\u30EA\u30C3\u30AF\u3059\u308B\u3068\u6B8B\u308A\u306E\u30AB\u30FC\u30C9\u3092\u4F5C\u696D\u3067\u304D\u307E\u3059\u3002`
    },
    {
      key: `          You're almost done! You've gone through the cards once, and recorded
    <b class=count>{number_of_completed_cards} cards</b>
    out of the total (<b>{total_number_of_tasks_needed} cards</b>).
    When you're ready, you can click the button below to finish up the rest of the cards.      `,
      description: `Done screen instructions, asks the user to go finish the rest of the cards. This version displays when the user has done more than 75% of the work.`,
      text: `\u3042\u3068\u5C11\u3057\u3067\u5B8C\u4E86\u3067\u3059\u3002\u30AB\u30FC\u30C9\u3092\u4E00\u5EA6\u8AAD\u307F\u4E0A\u3052\u3001\u5168\u4F53\uFF08<b>{total_number_of_tasks_needed} \u30AB\u30FC\u30C9</b>\uFF09\u306E\u3046\u3061 <b class=count>{number_of_completed_cards} \u30AB\u30FC\u30C9</b>\u3092\u9332\u97F3\u3057\u307E\u3057\u305F\u3002\u6E96\u5099\u304C\u6574\u3063\u305F\u3089\u3001\u4E0B\u306E\u30DC\u30BF\u30F3\u3092\u30AF\u30EA\u30C3\u30AF\u3059\u308B\u3068\u6B8B\u308A\u306E\u30AB\u30FC\u30C9\u3092\u4F5C\u696D\u3067\u304D\u307E\u3059\u3002`
    },
    {
      key: `Continue Recording`,
      description: `Done screen and instructions screen buttons, return to the recording screen`,
      text: `\u9332\u97F3\u3092\u7D9A\u884C`
    },
    {
      key: `Continue recording!`,
      description: `Microphone settings screen, return to the recording screen`,
      text: `\u9332\u97F3\u3092\u7D9A\u884C\u3057\u307E\u3059`
    },
    {
      key: `You previously indicated that you are eligible.`,
      description: `Signup screen, a message showing that the participant has already completed this form`,
      text: `\u3042\u306A\u305F\u306F\u3001\u4EE5\u524D\u306B\u53C2\u52A0\u8CC7\u683C\u304C\u3042\u308B\u3053\u3068\u3092\u793A\u3057\u307E\u3057\u305F\u3002`
    },
    {
      key: `You have already completed this form.`,
      description: `Interest form screen, a message showing that the participant has already completed this form`,
      text: `\u3053\u306E\u30D5\u30A9\u30FC\u30E0\u306F\u3059\u3067\u306B\u5B8C\u4E86\u3057\u3066\u3044\u307E\u3059\u3002`
    },
    {
      key: `Country is required.`,
      description: `Interest form screen, a message showing that a required field needs to be filled in.`,
      text: `\u56FD\u3092\u5165\u529B\u3057\u3066\u304F\u3060\u3055\u3044\u3002`
    },
    {
      key: `State is required.`,
      description: `Interest form screen, a message showing that a required field needs to be filled in.`,
      text: `\u5730\u57DF\u3092\u5165\u529B\u3057\u3066\u304F\u3060\u3055\u3044\u3002`
    },
    {
      key: `Please tell us if someone will be helping you record.`,
      description: `Interest form screen, a message showing that a required field needs to be filled in.`,
      text: `\u9332\u97F3\u3092\u30B5\u30DD\u30FC\u30C8\u3059\u308B\u65B9\u304C\u3044\u308C\u3070\u3001\u6559\u3048\u3066\u304F\u3060\u3055\u3044\u3002`
    },
    {
      key: `Please tell us how to email the person helping you.`,
      description: `Interest form screen, a message showing that a required field needs to be filled in.`,
      text: `\u30B5\u30DD\u30FC\u30C8\u3059\u308B\u65B9\u3078\u306E\u30E1\u30FC\u30EB\u9001\u4FE1\u65B9\u6CD5\u3092\u6559\u3048\u3066\u304F\u3060\u3055\u3044\u3002`
    },
    {
      key: `You'll need to give consent to proceed.`,
      description: `Interest form screen, a message showing that a required field needs to be filled in.`,
      text: `\u958B\u59CB\u3059\u308B\u306B\u306F\u540C\u610F\u304C\u5FC5\u8981\u3067\u3059\u3002`
    },
    {
      key: `Please write your initials next to your consent.`,
      description: `Interest form screen, a message showing that a required field needs to be filled in.`,
      text: `\u540C\u610F\u306E\u6A2A\u306B\u30A4\u30CB\u30B7\u30E3\u30EB\u3092\u3054\u8A18\u5165\u304F\u3060\u3055\u3044\u3002`
    },
    {
      key: `You'll need to accept the terms to proceed.`,
      description: `Interest form screen, a message showing that a required field needs to be filled in.`,
      text: `\u958B\u59CB\u3059\u308B\u306B\u306F\u6761\u4EF6\u306B\u540C\u610F\u3059\u308B\u5FC5\u8981\u304C\u3042\u308A\u307E\u3059\u3002`
    },
    {
      key: `You have already consented.`,
      description: `Consent screen, a message showing that the participant has already completed this form`,
      text: `\u3059\u3067\u306B\u540C\u610F\u3057\u3066\u3044\u307E\u3059\u3002`
    },
    {
      key: `By typing my name here, I agree to these terms:`,
      description: `Consent screen, indicates that the participant consents`,
      text: `\u540D\u524D\u3092\u5165\u529B\u3059\u308B\u3053\u3068\u3067\u3001\u3053\u308C\u3089\u306E\u6761\u4EF6\u306B\u540C\u610F\u3057\u307E\u3059\u3002`
    },
    {
      key: `&nbsp;(Agreement {which_agreement_number} of {total_number_of_agreements})`,
      description: ``,
      text: `&nbsp;({total_number_of_agreements} \u4EF6\u306E\u3046\u3061 {which_agreement_number} \u306B\u540C\u610F\uFF09`
    },
    {
      key: `Congratulations! You're all done!`,
      description: `Progress bar display when there are no tasks left to do`,
      text: `\u304A\u75B2\u308C\u3055\u307E\u3067\u3057\u305F\u3002\u3053\u308C\u3067\u3059\u3079\u3066\u5B8C\u4E86\u3067\u3059\u3002`
    },
    {
      key: `Congratulations!`,
      description: `Title of the done screen`,
      text: `\u304A\u75B2\u308C\u3055\u307E\u3067\u3057\u305F\u3002`
    },
    {
      key: `Review Recordings (optional)`,
      description: `Button on done screen which returns to the recording screen, if the user wants to listen to recordings`,
      text: `\u9332\u97F3\u306E\u78BA\u8A8D\uFF08\u7701\u7565\u53EF\uFF09`
    },
    {
      key: `
    You have completed all your cards! We'll be reviewing them soon, and if everything
    looks good, you'll be receiving an email from rewards@perks.com within the next 7-10
    business days with a link to claim your gift card.
    <br/><br/>
    <b>Thank you for contributing <b class=count>{number_of_completed_cards} cards</b> to the project!</b>
    <br/><br/>
    (If you wish, you can now go back and review your recordings, but this is not necessary. <b>You're done!</b>)`,
      description: `Descriptive text on the done screen`,
      text: `\u3059\u3079\u3066\u306E\u30AB\u30FC\u30C9\u3092\u5B8C\u4E86\u3057\u307E\u3057\u305F\u3002\u8FD1\u65E5\u4E2D\u306B Google \u3067\u78BA\u8A8D\u3057\u3066\u554F\u984C\u304C\u306A\u3051\u308C\u3070\u30017\uFF5E10 \u55B6\u696D\u65E5\u4EE5\u5185\u306B\u3001\u30AE\u30D5\u30C8\u30AB\u30FC\u30C9\u7372\u5F97\u7528\u306E\u30EA\u30F3\u30AF\u306E\u5165\u3063\u305F\u30E1\u30FC\u30EB\u304C\u3001rewards@perks.com \u304B\u3089\u5C4A\u304D\u307E\u3059\u3002<br/><br/><b>Project Euphonia \u306E <b class=count>{number_of_completed_cards} \u30AB\u30FC\u30C9</b>\u306B\u3054\u5354\u529B\u3044\u305F\u3060\u304D\u3001\u3042\u308A\u304C\u3068\u3046\u3054\u3056\u3044\u307E\u3059\u3002</b><br/><br/>\uFF08\u3054\u5E0C\u671B\u3067\u3042\u308C\u3070\u623B\u3063\u3066\u9332\u97F3\u3092\u78BA\u8A8D\u3067\u304D\u307E\u3059\u304C\u3001\u3053\u308C\u306F\u5FC5\u9808\u3067\u306F\u3042\u308A\u307E\u305B\u3093\u3002<b>\u3053\u308C\u3067\u5B8C\u4E86\u3067\u3059</b>\uFF09`
    },
    {
      key: `__INTEREST_FORM_HTML__`,
      description: `The HTML for the interest form; all HTML IDs must be intact exactly as is!`,
      // Each translatable string is on a line by itself to make it a little easier to translate
      text: `

    <div class=title
    >Google Project Euphonia: \u304A\u554F\u3044\u5408\u308F\u305B\u30D5\u30A9\u30FC\u30E0</div>
    <div class=sectiontitle
    >\u57FA\u672C\u60C5\u5831</div>
    <div class=formbox>
    <div class=fieldname><label for=ifname
    >\u540D\u524D</label>
    <span class=optional
    >\uFF08\u7701\u7565\u53EF\uFF09</span>
    </div>
    <div class=fielddescription
    >\u30CB\u30C3\u30AF\u30CD\u30FC\u30E0\u3001\u59D3\u540D\u3001\u540D\u524D\u306E\u307F\u3001\u306A\u3069\u3002\u304A\u597D\u307F\u306E\u3082\u306E\u3092\u3054\u5229\u7528\u304F\u3060\u3055\u3044\u3002</div>
    <input id=ifname class=formtext />
    </div>
    
    <div class=formbox>
    <div class=fieldname><label for=ifcountry
    >\u3069\u3061\u3089\u306E\u56FD\u306B\u304A\u4F4F\u307E\u3044\u3067\u3059\u304B\u3002</label>
    <span class=required>*</span></div>
    <div class=fielddescription
    >\u91CD\u8981\u3001\u3054\u6CE8\u610F\u304F\u3060\u3055\u3044: \u73FE\u6642\u70B9\u3067\u306F\u6B8B\u5FF5\u306A\u304C\u3089\u3001\u4EE5\u4E0B\u306B\u30A2\u30B9\u30BF\u30EA\u30B9\u30AF\uFF08*\uFF09\u3067\u793A\u3057\u3066\u3044\u308B\u56FD\u306B\u304A\u4F4F\u307E\u3044\u306E\u65B9\u306B\u306F\u30AE\u30D5\u30C8\u30AB\u30FC\u30C9\u3092\u9001\u4FE1\u3067\u304D\u307E\u305B\u3093\u3002\u3053\u308C\u3089\u306E\u56FD\u306B\u304A\u4F4F\u307E\u3044\u3067\u3082\u3001Project Euphonia \u306E\u8ABF\u67FB\u3078\u306E\u3054\u53C2\u52A0\u306F\u6B53\u8FCE\u3044\u305F\u3057\u307E\u3059\u306E\u3067\u3001\u30AE\u30D5\u30C8\u30AB\u30FC\u30C9\u3092\u53D7\u3051\u53D6\u308B\u3053\u3068\u304C\u3067\u304D\u308B\u3088\u3046\u306B\u306A\u308C\u3070\u3001\u304A\u77E5\u3089\u305B\u3044\u305F\u3057\u307E\u3059\u3002
    </div>
    <select id=ifcountry class=formselect>
    <option value="Japan">\u65E5\u672C</option>
    <option value="USA">United States of America</option> 
    <option value="* Afghanistan">* Afghanistan</option>
    <option value="* Albania">* Albania</option>
    <option value="Algeria">Algeria</option>
    <option value="Andorra">Andorra</option>
    <option value="Angola">Angola</option>
    <option value="Antigua and Barbuda">Antigua and Barbuda</option>
    <option value="Argentina">Argentina</option>
    <option value="Armenia">Armenia</option>
    <option value="Aruba">Aruba</option>
    <option value="Australia">Australia</option>
    <option value="Austria">Austria</option>
    <option value="Azerbaijan">Azerbaijan</option>
    <option value="* Bahamas, The">* Bahamas, The</option>
    <option value="Bahrain">Bahrain</option>
    <option value="Bangladesh">Bangladesh</option>
    <option value="* Barbados">* Barbados</option>
    <option value="* Belarus">* Belarus</option>
    <option value="Belgium">Belgium</option>
    <option value="Belize">Belize</option>
    <option value="* Benin">* Benin</option>
    <option value="Bhutan">Bhutan</option>
    <option value="Bolivia">Bolivia</option>
    <option value="* Bosnia and Herzegovina">* Bosnia and Herzegovina</option>
    <option value="Botswana">Botswana</option>
    <option value="Brazil">Brazil</option>
    <option value="Brunei">Brunei</option>
    <option value="Bulgaria">Bulgaria</option>
    <option value="* Burkina Faso">* Burkina Faso</option>
    <option value="* Burma">* Burma</option>
    <option value="* Burundi">* Burundi</option>
    <option value="* Cambodia">* Cambodia</option>
    <option value="Cameroon">Cameroon</option>
    <option value="Canada">Canada</option>
    <option value="Cabo Verde">Cabo Verde</option>
    <option value="* Central African Republic">* Central African Republic</option>
    <option value="* Chad">* Chad</option>
    <option value="Chile">Chile</option>
    <option value="China">China</option>
    <option value="* Colombia">* Colombia</option>
    <option value="* Comoros">* Comoros</option>
    <option value="* Congo, Democratic Republic of the">* Congo, Democratic Republic of the</option>
    <option value="* Congo, Republic of the">* Congo, Republic of the</option>
    <option value="Costa Rica">Costa Rica</option>
    <option value="* Cote d'Ivoire">* Cote d'Ivoire</option>
    <option value="Croatia">Croatia</option>
    <option value="* Cuba">* Cuba</option>
    <option value="Curacao">Curacao</option>
    <option value="Cyprus">Cyprus</option>
    <option value="Czechia">Czechia</option>
    <option value="Denmark">Denmark</option>
    <option value="Djibouti">Djibouti</option>
    <option value="Dominica">Dominica</option>
    <option value="* Dominican Republic">* Dominican Republic</option>
    <option value="East Timor (see Timor-Leste)">East Timor (see Timor-Leste)</option>
    <option value="Ecuador">Ecuador</option>
    <option value="Egypt">Egypt</option>
    <option value="El Salvador">El Salvador</option>
    <option value="* Equatorial Guinea">* Equatorial Guinea</option>
    <option value="* Eritrea">* Eritrea</option>
    <option value="Estonia">Estonia</option>
    <option value="Eswatini">Eswatini</option>
    <option value="Ethiopia">Ethiopia</option>
    <option value="Fiji">Fiji</option>
    <option value="Finland">Finland</option>
    <option value="France">France</option>
    <option value="Gabon">Gabon</option>
    <option value="Gambia, The">Gambia, The</option>
    <option value="Georgia">Georgia</option>
    <option value="Germany">Germany</option>
    <option value="Ghana">Ghana</option>
    <option value="Greece">Greece</option>
    <option value="Grenada">Grenada</option>
    <option value="Guatemala">Guatemala</option>
    <option value="* Guinea">* Guinea</option>
    <option value="* Guinea-Bissau">* Guinea-Bissau</option>
    <option value="Guyana">Guyana</option>
    <option value="* Haiti">* Haiti</option>
    <option value="Holy See">Holy See</option>
    <option value="Honduras">Honduras</option>
    <option value="Hong Kong">Hong Kong</option>
    <option value="Hungary">Hungary</option>
    <option value="Iceland">Iceland</option>
    <option value="India">India</option>
    <option value="Indonesia">Indonesia</option>
    <option value="* Iran">* Iran</option>
    <option value="* Iraq">* Iraq</option>
    <option value="Ireland">Ireland</option>
    <option value="Israel">Israel</option>
    <option value="Italy">Italy</option>
    <option value="Jamaica">Jamaica</option>
    <option value="Jordan">Jordan</option>
    <option value="Kazakhstan">Kazakhstan</option>
    <option value="Kenya">Kenya</option>
    <option value="Kiribati">Kiribati</option>
    <option value="Korea, North">Korea, North</option>
    <option value="Korea, South">Korea, South</option>
    <option value="* Kosovo">* Kosovo</option>
    <option value="Kuwait">Kuwait</option>
    <option value="Kyrgyzstan">Kyrgyzstan</option>
    <option value="* Laos">* Laos</option>
    <option value="* Latvia">* Latvia</option>
    <option value="* Lebanon">* Lebanon</option>
    <option value="* Lesotho">* Lesotho</option>
    <option value="* Liberia">* Liberia</option>
    <option value="* Libya">* Libya</option>
    <option value="Liechtenstein">Liechtenstein</option>
    <option value="Lithuania">Lithuania</option>
    <option value="Luxembourg">Luxembourg</option>
    <option value="Macau">Macau</option>
    <option value="* Madagascar">* Madagascar</option>
    <option value="Malawi">Malawi</option>
    <option value="Malaysia">Malaysia</option>
    <option value="Maldives">Maldives</option>
    <option value="* Mali">* Mali</option>
    <option value="Malta">Malta</option>
    <option value="Marshall Islands">Marshall Islands</option>
    <option value="Mauritania">Mauritania</option>
    <option value="* Mauritius">* Mauritius</option>
    <option value="Mexico">Mexico</option>
    <option value="Micronesia">Micronesia</option>
    <option value="Moldova">Moldova</option>
    <option value="Monaco">Monaco</option>
    <option value="Mongolia">Mongolia</option>
    <option value="* Montenegro">* Montenegro</option>
    <option value="Morocco">Morocco</option>
    <option value="Mozambique">Mozambique</option>
    <option value="Namibia">Namibia</option>
    <option value="Nauru">Nauru</option>
    <option value="Nepal">Nepal</option>
    <option value="Netherlands">Netherlands</option>
    <option value="New Zealand">New Zealand</option>
    <option value="* Nicaragua">* Nicaragua</option>
    <option value="Niger">Niger</option>
    <option value="* Nigeria">* Nigeria</option>
    <option value="* North Korea">* North Korea</option>
    <option value="* North Macedonia">* North Macedonia</option>
    <option value="Norway">Norway</option>
    <option value="Oman">Oman</option>
    <option value="Pakistan">Pakistan</option>
    <option value="Palau">Palau</option>
    <option value="Palestinian Territories">Palestinian Territories</option>
    <option value="* Panama">* Panama</option>
    <option value="Papua New Guinea">Papua New Guinea</option>
    <option value="Paraguay">Paraguay</option>
    <option value="Peru">Peru</option>
    <option value="Philippines">Philippines</option>
    <option value="Poland">Poland</option>
    <option value="Portugal">Portugal</option>
    <option value="Qatar">Qatar</option>
    <option value="Romania">Romania</option>
    <option value="* Russia">* Russia</option>
    <option value="Rwanda">Rwanda</option>
    <option value="Saint Kitts and Nevis">Saint Kitts and Nevis</option>
    <option value="Saint Lucia">Saint Lucia</option>
    <option value="Saint Vincent and the Grenadines">Saint Vincent and the Grenadines</option>
    <option value="Samoa">Samoa</option>
    <option value="San Marino">San Marino</option>
    <option value="Sao Tome and Principe">Sao Tome and Principe</option>
    <option value="Saudi Arabia">Saudi Arabia</option>
    <option value="Senegal">Senegal</option>
    <option value="* Serbia">* Serbia</option>
    <option value="Seychelles">Seychelles</option>
    <option value="Sierra Leone">Sierra Leone</option>
    <option value="Singapore">Singapore</option>
    <option value="Sint Maarten">Sint Maarten</option>
    <option value="Slovakia">Slovakia</option>
    <option value="* Slovenia">* Slovenia</option>
    <option value="Solomon Islands">Solomon Islands</option>
    <option value="* Somalia">* Somalia</option>
    <option value="South Africa">South Africa</option>
    <option value="South Korea">South Korea</option>
    <option value="* South Sudan">* South Sudan</option>
    <option value="Spain">Spain</option>
    <option value="Sri Lanka">Sri Lanka</option>
    <option value="* Sudan">* Sudan</option>
    <option value="Suriname">Suriname</option>
    <option value="Swaziland">Swaziland</option>
    <option value="Sweden">Sweden</option>
    <option value="Switzerland">Switzerland</option>
    <option value="* Syria">* Syria</option>
    <option value="Taiwan">Taiwan</option>
    <option value="Tajikistan">Tajikistan</option>
    <option value="Tanzania">Tanzania</option>
    <option value="Thailand">Thailand</option>
    <option value="Timor-Leste">Timor-Leste</option>
    <option value="Togo">Togo</option>
    <option value="Tonga">Tonga</option>
    <option value="Trinidad and Tobago">Trinidad and Tobago</option>
    <option value="* Tunisia">* Tunisia</option>
    <option value="* Turkey">* Turkey</option>
    <option value="Turkmenistan">Turkmenistan</option>
    <option value="Tuvalu">Tuvalu</option>
    <option value="* Uganda">* Uganda</option>
    <option value="* Ukraine">* Ukraine</option>
    <option value="United Arab Emirates">United Arab Emirates</option>
    <option value="United Kingdom">United Kingdom</option>
    <option value="Uruguay">Uruguay</option>
    <option value="Uzbekistan">Uzbekistan</option>
    <option value="Vanuatu">Vanuatu</option>
    <option value="* Venezuela">* Venezuela</option>
    <option value="Vietnam">Vietnam</option>
    <option value="Yemen">Yemen</option>
    <option value="Zambia">Zambia</option>
    <option value="* Zimbabwe">* Zimbabwe</option>
    </select>
    </div>
    
    <div class=formbox id=usstatebox>
    <div class=fieldname><label for=ifstate
    >\u3069\u3061\u3089\u306E\u5730\u57DF\u306B\u304A\u4F4F\u307E\u3044\u3067\u3059\u304B\u3002</label>
    <span class=required>*</span></div>
    <select id=ifstate class=formselect>
    <option value=""></option>
    <option value="AL">Alabama</option>
    <option value="AK">Alaska</option>
    <option value="AZ">Arizona</option>
    <option value="AR">Arkansas</option>
    <option value="AS">American Samoa</option>
    <option value="CA">California</option>
    <option value="CO">Colorado</option>
    <option value="CT">Connecticut</option>
    <option value="DE">Delaware</option>
    <option value="FL">Florida</option>
    <option value="GA">Georgia</option>
    <option value="GU">Guam</option>
    <option value="HI">Hawaii</option>
    <option value="ID">Idaho</option>
    <option value="IL">Illinois</option>
    <option value="IN">Indiana</option>
    <option value="IA">Iowa</option>
    <option value="KS">Kansas</option>
    <option value="KY">Kentucky</option>
    <option value="LA">Louisiana</option>
    <option value="ME">Maine</option>
    <option value="MD">Maryland</option>
    <option value="MA">Massachusetts</option>
    <option value="MI">Michigan</option>
    <option value="MN">Minnesota</option>
    <option value="MS">Mississippi</option>
    <option value="MO">Missouri</option>
    <option value="MT">Montana</option>
    <option value="NE">Nebraska</option>
    <option value="NV">Nevada</option>
    <option value="NH">New Hampshire</option>
    <option value="NJ">New Jersey</option>
    <option value="NM">New Mexico</option>
    <option value="NY">New York</option>
    <option value="NC">North Carolina</option>
    <option value="ND">North Dakota</option>
    <option value="MP">Northern Mariana Islands</option>
    <option value="OH">Ohio</option>
    <option value="OK">Oklahoma</option>
    <option value="OR">Oregon</option>
    <option value="PA">Pennsylvania</option>
    <option value="PR">Puerto Rico</option>
    <option value="RI">Rhode Island</option>
    <option value="SC">South Carolina</option>
    <option value="SD">South Dakota</option>
    <option value="TN">Tennessee</option>
    <option value="TX">Texas</option>
    <option value="VI">U.S. Virgin Islands</option>
    <option value="UT">Utah</option>
    <option value="VT">Vermont</option>
    <option value="VA">Virginia</option>
    <option value="WA">Washington</option>
    <option value="WV">West Virginia</option>
    <option value="WI">Wisconsin</option>
    <option value="WY">Wyoming</option>
    </select>
    </div>
    
    <div class=formbox>
    <div class=fieldname><label for=ifcity
    >\u3069\u3061\u3089\u306E\u90FD\u5E02\u306B\u304A\u4F4F\u307E\u3044\u3067\u3059\u304B\u3002</label>
    <span class=optional
    >\uFF08\u7701\u7565\u53EF\uFF09</span>
    </div>
    <input id=ifcity class=formtext />
    </div>
    
    <div class=formbox>
    <div class=fieldname><label for=ifaccent
    >\u30A2\u30AF\u30BB\u30F3\u30C8\u306B\u3069\u306E\u3088\u3046\u306A\u7279\u5FB4\u304C\u3042\u308A\u307E\u3059\u304B\u3002</label>
    <span class=optional
    >\uFF08\u7701\u7565\u53EF\uFF09</span>
    </div>
    <input id=ifaccent class=formtext />
    </div>
    
    <div class=sectiontitle
    >\u305D\u306E\u4ED6\u306E\u60C5\u5831</div>
    
    <div class=formbox>
    <div class=fieldname><label for=ifreferral
    >\u3053\u306E\u30D7\u30ED\u30B8\u30A7\u30AF\u30C8\u3092\u77E5\u3063\u305F\u304D\u3063\u304B\u3051\u3092\u6559\u3048\u3066\u304F\u3060\u3055\u3044</label>
    <span class=optional
    >\uFF08\u7701\u7565\u53EF\uFF09</span>
    </div>
    <input id=ifreferral class=formtext />
    </div>
    
    <div class=formbox role=radiogroup id=ifgendergroup style="display: none;">
    <div class=fieldname><label for=ifgendergroup
    >\u6027\u5225\u3092\u6559\u3048\u3066\u304F\u3060\u3055\u3044</label>
    <span class=optional
    >\uFF08\u7701\u7565\u53EF\uFF09</span>
    </div>
    <div class=checkboxrow>
    <input type=radio name=ifgender id=ifgenderfemale />
    <label for=ifgenderfemale
    >\u5973\u6027</label>
    </div>
    <div class=checkboxrow>
    <input type=radio name=ifgender id=ifgendermale />
    <label for=ifgendermale
    >\u7537\u6027</label>
    </div>
    <div class=checkboxrow>
    <input type=radio name=ifgender id=ifgenderno />
    <label for=ifgenderno
    >\u56DE\u7B54\u3057\u306A\u3044</label>
    </div>
    <div class=checkboxrow>
    <input type=radio name=ifgender id=ifgenderother />
    <label for=ifgenderother
    >\u305D\u306E\u4ED6:</label>
    <input type=text class=formtext id=ifgenderothertext />
    </div>
    </div>
    
    <div class=formbox style="display: none;">
    <div class=fieldname><label for=ifrace
    >\u4EBA\u7A2E\u3092\u6559\u3048\u3066\u304F\u3060\u3055\u3044</label>
    <span class=optional
    >\uFF08\u7701\u7565\u53EF\uFF09</span>
    </div>
    <input id=ifrace class=formtext />
    </div>
    
    <div class=formbox>
    <div class=fieldname
    >\u3069\u3061\u3089\u306B\u30A2\u30AF\u30BB\u30B9\u3067\u304D\u307E\u3059\u304B
    <span class=optional
    >\uFF08\u7701\u7565\u53EF\uFF09</span>
    </div>
    <div class=checkboxrow>
    <input type=checkbox id=ifdevicecomputer />
    <label for=ifdevicecomputer
    >\u30DE\u30A4\u30AF\u3068\u30B9\u30D4\u30FC\u30AB\u30FC\u3092\u5099\u3048\u3001\u30A4\u30F3\u30BF\u30FC\u30CD\u30C3\u30C8\u306B\u63A5\u7D9A\u3055\u308C\u305F\u30D1\u30BD\u30B3\u30F3</label>
    </div>
    <div class=checkboxrow>
    <input type=checkbox id=ifdeviceandroid />
    <label for=ifdeviceandroid
    >Android \u30B9\u30DE\u30FC\u30C8\u30D5\u30A9\u30F3\u307E\u305F\u306F\u30BF\u30D6\u30EC\u30C3\u30C8\uFF08Samsung\u3001Pixel\u3001Nexus \u306A\u3069\uFF09</label>
    </div>
    <div class=checkboxrow>
    <input type=checkbox id=ifdeviceiphone />
    <label for=ifdeviceiphone
    >iPhone \u307E\u305F\u306F iPad</label>
    </div>
    <div class=checkboxrow>
    <input type=checkbox id=ifdevicenone />
    <label for=ifdevicenone
    >\u4E0A\u8A18\u4EE5\u5916</label>
    </div>
    <div class=checkboxrow>
    <input type=checkbox id=ifdeviceother />
    <label for=ifdeviceother
    >\u305D\u306E\u4ED6:</label>
    <input type=text class=formtext id=ifdeviceothertext aria-labelledby="ifdeviceotherlabel" />
    </div>
    </div>
    
    <div class=formbox id=helperbox>
    <div class=fieldname
    >\u97F3\u58F0\u30B5\u30F3\u30D7\u30EB\u306E\u9332\u97F3\u3092\u30B5\u30DD\u30FC\u30C8\u3057\u3066\u304F\u308C\u308B\u65B9\u306F\u3044\u307E\u3059\u304B
    <span class=required>*</span></div>
    <div class=fielddescription
    >\u305F\u3068\u3048\u3070\u3001\u3054\u5BB6\u65CF\u3001\u8A00\u8A9E\u8074\u899A\u58EB\u306A\u3069</div>
    <div class=checkboxrow>
    <input type=radio name=ifhelper id=ifhelperno selected />
    <label for=ifhelperno
    >\u3044\u3044\u3048\u30011 \u4EBA\u3067\u53C2\u52A0\u3057\u307E\u3059</label>
    </div>
    <div class=checkboxrow>
    <input type=radio name=ifhelper id=ifhelperyes />
    <label for=ifhelperyes
    >\u306F\u3044\u3001\u30B5\u30DD\u30FC\u30C8\u3057\u3066\u304F\u308C\u308B\u4EBA\u304C\u304A\u308A\u3001\u9023\u7D61\u5148\u3082\u5171\u6709\u3067\u304D\u307E\u3059</label>
    </div>
    </div>
    
    <!-- Helper panel appears if the user chooses "yes" above -->
    <div id=helpersection>
    <div class=sectiontitle
    >\u30B5\u30DD\u30FC\u30C8\u3059\u308B\u65B9\u306B\u3064\u3044\u3066</div>
    <div class=formbox>
    <div class=fielddescription>
    \u3054\u672C\u4EBA\u3068\u3082\u30B5\u30DD\u30FC\u30C8\u3055\u308C\u308B\u65B9\u3068\u3082\u9023\u7D61\u304C\u3068\u308C\u308B\u3088\u3046\u306B\u3001\u30B5\u30DD\u30FC\u30C8\u3055\u308C\u308B\u65B9\u306B\u3064\u3044\u3066\u5C11\u3057\u6559\u3048\u3066\u304F\u3060\u3055\u3044\u3002\u30B5\u30DD\u30FC\u30C8\u3055\u308C\u308B\u65B9\u306E\u304A\u540D\u524D\u3092\u542B\u3081\u308B\u3053\u3068\u306B\u3088\u308A\u3001\u30B5\u30DD\u30FC\u30C8\u3055\u308C\u308B\u65B9\u304C\u3053\u306E\u30D7\u30ED\u30B8\u30A7\u30AF\u30C8\u306E\u3042\u306A\u305F\u306E\u53C2\u52A0\u60C5\u5831\u3092\u53D7\u3051\u53D6\u308B\u3053\u3068\u306B\u3064\u3044\u3066\u4E86\u627F\u3059\u308B\u3053\u3068\u306B\u306A\u308A\u307E\u3059\u3002\u30B5\u30DD\u30FC\u30C8\u3055\u308C\u308B\u65B9\u306E\u304A\u540D\u524D\u3068\u30E1\u30FC\u30EB\u30A2\u30C9\u30EC\u30B9\u306F\u8907\u6570\u8A18\u5165\u3067\u304D\u307E\u3059\u3002\u305D\u308C\u305E\u308C\u3092\u30AB\u30F3\u30DE\u3067\u533A\u5207\u3063\u3066\u304F\u3060\u3055\u3044\u3002
    </div>
    </div>
    
    <div class=formbox>
    <div class=fieldname><label for=ifassistantname
    >\u30B5\u30DD\u30FC\u30C8\u3055\u308C\u308B\u65B9\u306E\u304A\u540D\u524D</label>
    <span class=optional
    >\uFF08\u7701\u7565\u53EF\uFF09</span>
    </div>
    <input type=text class=formtext id=ifassistantname />
    </div>
    
    <div class=formbox>
    <div class=fieldname><label for=ifassistantemail
    >\u30B5\u30DD\u30FC\u30C8\u3055\u308C\u308B\u65B9\u306E\u30E1\u30FC\u30EB\u30A2\u30C9\u30EC\u30B9</label>
    <span class=required>*</span></div>
    <input type=text class=formtext id=ifassistantemail />
    </div>
    
    <div class=formbox>
    <div class=fieldname><label for=ifassistantrelationship
    >\u3069\u306E\u3088\u3046\u306A\u3054\u95A2\u4FC2\u306E\u65B9\u3067\u3059\u304B\u3002</label>
    <span class=optional
    >\uFF08\u7701\u7565\u53EF\uFF09</span>
    </div>
    <div class=fielddescription
    >\u305F\u3068\u3048\u3070\u3001\u4ECB\u8B77\u58EB\u3001\u3054\u53CB\u4EBA\u3001\u3054\u5BB6\u65CF\u3001\u8A00\u8A9E\u8074\u899A\u58EB\u306A\u3069</div>
    <input type=text class=formtext id=ifassistantrelationship />
    </div>
    </div>
    
    <div class=sectiontitle
    >Google Project Euphonia: \u540C\u610F</div>
    
    <div class=forminfobox>
    <div class=fieldname
    >\u500B\u4EBA\u3092\u7279\u5B9A\u3067\u304D\u308B\u6A5F\u5BC6\u60C5\u5831\u306E\u30A2\u30F3\u30B1\u30FC\u30C8\u53CE\u96C6\u306B\u3064\u3044\u3066</div>
    <div class=fielddescription>
    \u3053\u306E\u30A2\u30F3\u30B1\u30FC\u30C8\u306E\u76EE\u7684\u306F\u3001\u4ECA\u5F8C Google \u304C\u884C\u3046\u30C7\u30FC\u30BF\u53CE\u96C6\u4F5C\u696D\u3078\u306E\u53C2\u52A0\u8CC7\u683C\u3092\u78BA\u8A8D\u3059\u308B\u3053\u3068\u3067\u3059\u3002\u307E\u305F\u3001\u30C7\u30FC\u30BF\u53CE\u96C6\u306E\u76EE\u7684\u306F\u3001\u73FE\u5728\u304A\u3088\u3073\u4ECA\u5F8C\u306E\u97F3\u58F0\u8A8D\u8B58\u6280\u8853\u306B\u95A2\u308F\u308B\u88FD\u54C1\u3084\u30B5\u30FC\u30D3\u30B9\u306E\u30A2\u30AF\u30BB\u30B7\u30D3\u30EA\u30C6\u30A3\u3092\u3001Google \u304C\u8A2D\u8A08\u3001\u7814\u7A76\u3001\u958B\u767A\u3001\u69CB\u7BC9\u3001\u6539\u5584\u3059\u308B\u306E\u3092\u652F\u63F4\u3059\u308B\u3053\u3068\u3067\u3059\u3002
    \u53C2\u52A0\u8005\u306B\u9078\u3070\u308C\u305F\u5834\u5408\u3001\u3042\u306A\u305F\u304C\u3053\u306E\u30A2\u30F3\u30B1\u30FC\u30C8\u306B\u63D0\u4F9B\u3059\u308B\u60C5\u5831\u306F\u3001\u30C7\u30FC\u30BF\u53CE\u96C6\u306B\u969B\u3057\u3066\u63D0\u4F9B\u3059\u308B\u3053\u3068\u3092\u6C7A\u3081\u305F\u4ED6\u306E\u60C5\u5831\u3084\u30C7\u30FC\u30BF\u3068\u7D44\u307F\u5408\u308F\u3055\u308C\u308B\u5834\u5408\u304C\u3042\u308A\u307E\u3059\u3002
    </div>
    </div>
    
    <div class=formbox>
    <div class=fieldname>
    Google \u306F\u3001\u3042\u306A\u305F\u306E\u540C\u610F\u306B\u3082\u3068\u3065\u304D\u3001\uFF08a\uFF09\u672C\u30A2\u30F3\u30B1\u30FC\u30C8\u3092\u63D0\u51FA\u3044\u305F\u3060\u304F\u969B\u3001\uFF08b\uFF09\u30D7\u30ED\u30B8\u30A7\u30AF\u30C8\u3078\u306E\u53C2\u52A0\u8005\u306B\u9078\u3070\u308C\u30C7\u30FC\u30BF\u53CE\u96C6\u30BF\u30B9\u30AF\u306B\u53C2\u52A0\u3044\u305F\u3060\u304F\u969B\u306B\u3001\u652F\u63F4\u6280\u8853\u306E\u5229\u7528\u3001\u767A\u8A71\u6642\u306E\u969C\u304C\u3044\u3084\u4E0D\u90FD\u5408\u3001\u767A\u8A71\u30D1\u30BF\u30FC\u30F3\u306B\u95A2\u3059\u308B\u60C5\u5831\u3092\u542B\u3080\u3001\u3042\u306A\u305F\u304C\u63D0\u4F9B\u3092\u6C7A\u3081\u305F\u500B\u4EBA\u60C5\u5831\u306E\u53CE\u96C6\u3068\u51E6\u7406\u3092\u884C\u3044\u307E\u3059\u3002
    <span class=required>*</span>
    </div>
    <div class=checkboxrow>
    <input type=checkbox id=ifformconsent />
    <label for=ifformconsent>
    \u540C\u610F\u3057\u3001\u3053\u3053\u306B\u30A4\u30CB\u30B7\u30E3\u30EB\u3092\u5165\u529B\u3057\u307E\u3059\u3002
    </label>
    <input type=text class=formtext id=ifconsentinitials aria-labelledby="ifformconsentlabel" />
    </div>
    </div>
    
    <div class=formbox>
    <div class=fieldname>
    Google \u306E\u5229\u7528\u898F\u7D04\u3068\u30D7\u30E9\u30A4\u30D0\u30B7\u30FC \u30DD\u30EA\u30B7\u30FC\u3092\u3054\u78BA\u8A8D\u304F\u3060\u3055\u3044
    <span class=required>*</span>
    </div>
    <div class=checkboxrow>
    <input type=checkbox id=ifformtos />
    <label for=ifformtos>
    \u5229\u7528\u898F\u7D04\u306B
    <a target="_blank" href="https://www.google.com/policies/terms/"
    >\u540C\u610F\u3057\u3001</a>
    \u88FD\u54C1\u306E\u7814\u7A76\u30FB\u958B\u767A\u3001\u304A\u3088\u3073\u97F3\u58F0\u95A2\u9023\u6280\u8853\u306E\u6539\u5584\u306E\u305F\u3081\u306B\u3001Google \u306E\u30D7\u30E9\u30A4\u30D0\u30B7\u30FC \u30DD\u30EA\u30B7\u30FC\u306B\u5F93\u3063\u3066\u3001
    <a target="_blank" href="https://www.google.com/policies/privacy/"
    >\u79C1\u306E\u60C5\u5831\u304C\u4F7F\u7528\u3055\u308C\u308B\u3053\u3068\u3092\u8A8D\u3081\u307E\u3059</a>
    \u3002
    </label>
    </div>
    </div>
    
    <div class=forminfobox>
    <div class=fieldname>
    \u3053\u306E\u30D5\u30A9\u30FC\u30E0\u3092\u9001\u4FE1\u3059\u308B\u3053\u3068\u306B\u3088\u308A\u3001Google \u3068\u305D\u306E\u95A2\u9023\u4F1A\u793E\u304C\u30E1\u30FC\u30EB\u3067\u304A\u5BA2\u69D8\u3068\u9023\u7D61\u3092\u53D6\u308B\u3053\u3068\u306B\u540C\u610F\u3057\u305F\u3082\u306E\u3068\u3057\u307E\u3059\u3002
    </div>
    </div>
    
    <div class=formbox>
    <div class=fieldname><label for=ifotherinfo>
    \u4ED6\u306B\u5171\u6709\u3057\u305F\u3044\u60C5\u5831\u306F\u3042\u308A\u307E\u3059\u304B\u3002
    </label>
    <span class=optional
    >\uFF08\u7701\u7565\u53EF\uFF09</span>
    </div>
    <input id=ifotherinfo class=formtext />
    </div>
`
    }
  ];

  // ../common/strings_ca.ts
  var CA_STRINGS = [
    {
      key: `PAGE_TITLE`,
      en: `Project Euphonia`,
      description: `Web page title for all pages`,
      text: `Projecte Euphonia`
    },
    {
      key: `HELP_LINK`,
      description: `Help hyperlink HREF property when the user needs help or has questions.`,
      text: `http://g.co/disabilitysupport`
    },
    {
      key: `WELCOME_TITLE`,
      en: `Welcome to Project Euphonia!`,
      description: `Signup screen and consent screen titles`,
      text: `\xA1Et donem la benvinguda a Projecte Euphonia!`
    },
    {
      key: `We're exploring how Google products and services
    that use speech as an input method could work better for more people. We're seeking
    voice contributions from adults who have difficulty being understood by others.

    Voice samples can help us improve how Google understands individuals with speech
    impairments.`,
      description: `Signup screen`,
      text: `Estem investigan com podrien funcionar millor i arribar a m\xE9s persones els productes i serveis de Google que utilitzen la veu com a m\xE8tode d'introducci\xF3 de text. Necessitem la aportaci\xF3 de persones adultes la veu dels quals resulti dif\xEDcil d'entendre. Les mostres de veu poden ajudar-nos a fer que Google entengui millor a les persones que presentin alg\xFAn transtorn de la parla.`
    },
    {
      key: `<b>IMPORTANT:</b> If you're filling out
    this form on behalf of someone else, please ensure you have their permission
    to do so.`,
      description: `Signup screen`,
      text: `<b>IMPORTANTE:</b> Si quieres rellenar este formulario en nombre de otra persona, aseg\xFArate de tener su permiso para hacerlo.`
    },
    {
      key: `Questions? <a id=signuphelplink target="_blank">Contact Us</a>`,
      en: `Questions? <a id=signuphelplink target="_blank">Contact Us</a>`,
      description: `Signup screen`,
      text: `\xBFTienes alguna pregunta? 
        <a id=signuphelplink target="_blank"
        >Contacta con nosotros</a>`
    },
    {
      key: `Already enrolled? &nbsp;`,
      description: `Signup screen`,
      text: `\xBFYa te has registrado? &nbsp;`
    },
    {
      key: `Click to sign in and continue recording`,
      description: `Signup screen`,
      text: `Haz clic para iniciar sesi\xF3n y seguir grabando`
    },
    {
      key: `To get started, please confirm your eligibility:`,
      description: `Signup screen`,
      text: `Para empezar, confirma que cumples los requisitos:`
    },
    {
      key: `Strangers, or voice technologies like Google Assistant, have difficulty understanding my speech (not because of an accent)`,
      description: `Signup screen eligibility question`,
      text: `A las personas que no me conocen o a las tecnolog\xEDas de voz, como el Asistente de Google, les resulta dif\xEDcil entenderme cuando hablo (no por mi acento)`
    },
    {
      key: `I am at least 18 years of age`,
      description: `Signup screen eligibility question`,
      text: `Tengo 18 a\xF1os o m\xE1s`
    },
    {
      key: `Sign in and continue`,
      description: `Signup screen button`,
      text: `Iniciar sesi\xF3n y continuar`
    },
    {
      key: `You will need to sign in with your Google
    Account to contribute to the project. If you do not have a Google Account, you can
    create one when you click to continue.`,
      description: `Signup screen instructions`,
      text: `Tendr\xE1s que iniciar sesi\xF3n con tu cuenta de Google para poder colaborar en el proyecto. Si no tienes una cuenta de Google, puedes crear una cuando hagas clic para continuar.`
    },
    {
      key: `Next`,
      description: `Interest form button, advance to the next screen`,
      text: `Siguiente`
    },
    {
      key: `Go Back`,
      description: `Interest form button, go back to the signup screen`,
      text: `Volver`
    },
    {
      key: `You must type your name to agree to the terms.`,
      description: `Consent form screen, require consent to proceed`,
      text: `Debes escribir tu nombre para aceptar los t\xE9rminos.`
    },
    {
      key: `Reset form and start over`,
      description: `Interest form button, clear fields and start over`,
      text: `Borrar formulario y volver a empezar`
    },
    {
      key: `You are enrolling as <b id=whoisenrolling>&nbsp;</b>.
    Please review the following agreement: <span id=consentcounter></span>`,
      description: `Consent screen instructions`,
      text: `Te est\xE1s registrando como <b id=whoisenrolling>&nbsp;</b>. Lee el siguiente contrato: <span id=consentcounter></span>`
    },
    {
      key: `Enroll`,
      description: `Consent screen, final action; consents to the program and allows recording`,
      text: `Registrarse`
    },
    {
      key: `Next Agreement`,
      description: `Consent screen, to agree to the current consent and then see the next one. Only shows when there are multiple consents`,
      text: `Siguiente contrato`
    },
    {
      key: `INSTRUCTIONS_TITLE`,
      en: `Thanks for signing up for Project Euphonia!`,
      description: `Instructions screen title`,
      text: `\xA1Gracias por registrarte en Project Euphonia!`
    },
    {
      key: `INSTRUCTIONS_VIDEO_HTML`,
      description: `Instructional video iframe from YouTube`,
      text: `
    <iframe width="560" height="315" src="https://www.youtube.com/embed/sMLED9xrLts"
        title="YouTube video player" frameborder="0"
        allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
    `
    },
    {
      key: `INSTRUCTIONS_HTML`,
      en: `    <ul>
    <li>Please take a moment to watch this video introduction.</li>
    <li>On the next screen, you'll see <b>cards</b> to read aloud.</li>
    <li>You'll want to be in a <b>quiet setting</b> and avoid any background noise.</li>
    <li>You'll press the blue Record button, and then <b>read the
    card aloud</b>, as accurately as possible.</li>
    <li>When you are <b>finished speaking</b>, press the blue button again to stop recording.</li>
    <li>When you finish recording all the cards, you're done!</li>
    <li>Having trouble recording? <a target="_blank" href="http://g.co/disabilitysupport">Contact us</a> for help.</li>`,
      description: `Instructions screen details`,
      text: `<ul>
    <li>Dedica unos minutos a ver este v\xEDdeo introductorio.</li>
    <li>En la pantalla siguiente, ver\xE1s unas <b>tarjetas</b> que tendr\xE1s que leer en alto.</li>
    <li>Te recomendamos que est\xE9s en un <b>entorno tranquilo</b> en el que no haya ruidos de fondo.</li>
    <li>Tendr\xE1s que pulsar el bot\xF3n azul para grabar y, a continuaci\xF3n, <b>leer la tarjeta en voz alta</b> con la mayor precisi\xF3n posible.</li> <li>Cuando hayas <b>terminado de hablar</b>, pulsa de nuevo el bot\xF3n azul para dejar de grabar.</li>
    <li>Una vez grabadas todas las tarjetas, habr\xE1s terminado.</li>
    <li>\xBFTienes problemas para grabar?
    <a target="_blank" href="http://g.co/disabilitysupport">Ponte en contacto con nosotros</a> para que te ayudemos.</li>`
    },
    {
      key: `Get Started`,
      description: `Instructions screen button to continue to next screen`,
      text: `Empezar`
    },
    {
      key: `Microphone Setup`,
      description: `Microphone and settings screen title`,
      text: `Configuraci\xF3n del micr\xF3fono`
    },
    {
      key: `
    In order to record your speech, we need permission to use your microphone
    through your web browser. <b>Please click "Allow"</b> to grant use of your microphone.`,
      description: `Microphone permission instructions`,
      text: `Para poder grabar lo que dices, Euphonia necesita permiso para usar el micr\xF3fono a trav\xE9s de tu navegador web. <b>Haz clic en "Permitir"</b> para conced\xE9rselo.`
    },
    {
      key: `
    We could not access your microphone due to a permission problem. You'll need to allow access
    in order to continue.`,
      description: `Microphone permission error message`,
      text: `Euphonia no ha podido acceder a tu micr\xF3fono porque hay un problema con el permiso. Para continuar, tienes que permitir el acceso.`
    },
    {
      key: `
    It looks like your microphone permission is blocked. You'll need to <b>allow access</b>
    by clicking the <b>address bar of your browser</b>, and/or <b>reset permission</b> for the microphone.`,
      description: `Microphone permission error message`,
      text: `Parece que el permiso de acceso a tu micr\xF3fono est\xE1 bloqueado. Tienes que <b>permitir el acceso</b> haciendo clic en la <b>barra de direcciones de tu navegador</b>, o <b>restablecer el permiso</b> del micr\xF3fono.`
    },
    {
      key: `
    Your microphone is all set! You can start recording as soon as you're ready.`,
      description: `Microphone permission success message`,
      text: `\xA1El micr\xF3fono ya est\xE1 listo! Puedes empezar a grabar cuando quieras.`
    },
    {
      key: `Use the default microphone`,
      description: `Let's the user choose the browser's default recording device instead of picking one explicitly`,
      text: `Usar el micr\xF3fono predeterminado`
    },
    {
      key: `Save`,
      description: `Microphone configuration screen, accept changes to microphone device`,
      text: `Guardar`
    },
    {
      key: `Try again`,
      description: `Microphone permission failure retry button`,
      text: `Reintentar`
    },
    {
      key: `Start recording!`,
      description: `Microphone setup screen button, continue to recording screen`,
      text: `\xA1Empieza a grabar!`
    },
    {
      key: `Microphone settings`,
      description: `Microphone setup screen title`,
      text: `Ajustes del micr\xF3fono`
    },
    {
      key: `Previous card`,
      description: `Recording screen button, go back to prior card`,
      text: `Tarjeta anterior`
    },
    {
      key: `Next card`,
      description: `Recording screen button, go forward to next card`,
      text: `Tarjeta siguiente`
    },
    {
      key: `Replay`,
      description: `Recording screen button, listen to previously recorded audio`,
      text: `Volver a reproducir`
    },
    {
      key: `Stop`,
      description: `Recording screen button, to interrupt a recording that's currently being played back`,
      text: `Detener`
    },
    {
      key: `Delete`,
      description: `Recording screen button, delete a previous recording`,
      text: `Eliminar`
    },
    {
      key: `Deleting...`,
      description: `Recording screen button, shown briefly while the recording is being deleted`,
      text: `Eliminando...`
    },
    {
      key: `Record`,
      description: `Recording screen button, record audio for a card`,
      text: `Grabar`
    },
    {
      key: `Record Again`,
      description: `Recording screen button, record audio for a card that already has been recorded`,
      text: `Volver a grabar`
    },
    {
      key: `(this card is done)`,
      description: `Labels tasks that have already been recorded once`,
      text: `(ya has hecho esta tarjeta)`
    },
    {
      key: `Cancel`,
      description: `Recording screen button and microphone setting screen button, cancel recording / microphone changes`,
      text: `Cancelar`
    },
    {
      key: `Done`,
      description: `Recording screen button, shown while recording to end the recording and start uploading it`,
      text: `Listo`
    },
    {
      key: `Starting...`,
      description: `Recording screen button, shown briefly just before the microphone starts listening`,
      text: `Iniciando...`
    },
    {
      key: `Now recording...`,
      description: `Recording screen button, shown briefly just before the microphone starts listening`,
      text: `Grabando ahora...`
    },
    {
      key: `Recording uploaded!`,
      description: `Recording screen message when the recording uploaded successfully`,
      text: `Grabaci\xF3n subida.`
    },
    {
      key: `Recording uploaded! Here's the next card.`,
      description: `Recording screen message when the recording uploads successfully and the next card is automatically displayed`,
      text: `Grabaci\xF3n subida. Aqu\xED tienes la siguiente tarjeta.`
    },
    {
      key: `Recording deleted.`,
      description: `Recording screen message when a recording has just been deleted`,
      text: `Grabaci\xF3n eliminada.`
    },
    {
      key: `Recording canceled.`,
      description: `Recording screen message when a recording has just been canceled`,
      text: `Grabaci\xF3n cancelada.`
    },
    {
      key: `No recording to delete.`,
      description: `Error message when the user deletes but nothing is selected.`,
      text: `No hay ninguna grabaci\xF3n que eliminar.`
    },
    {
      key: `No recording to play.`,
      description: `Error message when the user replays but nothing is selected.`,
      text: `No hay ninguna grabaci\xF3n que reproducir.`
    },
    {
      key: `Upload failed, your audio may not be saved.`,
      description: `Error message when the user's recording was not received by the server.`,
      text: `No se ha podido subir la grabaci\xF3n. Puede que el audio no se guarde.`
    },
    {
      key: `Canceling...`,
      description: `Recording screen button, shown briefly when the recording is being canceled`,
      text: `Cancelando...`
    },
    {
      key: `Uploading...`,
      description: `Recording screen button, shown briefly when the recording is being uploaded`,
      text: `Subiendo...`
    },
    {
      key: `?`,
      description: `Recording screen button, go to help screen`,
      text: `?`
    },
    {
      key: `&#x1F50A;`,
      description: `Speak prompt button, which uses computerized speech to play the prompt audibly`,
      text: `&#x1F50A;`
    },
    {
      key: `Continue`,
      description: `Sign up screen and consent screen buttons, continue to the next page`,
      text: `Continuar`
    },
    {
      key: `No assignments`,
      description: `Recording screen, message when the user has no cards to work on`,
      text: `No hay ninguna tarea`
    },
    {
      key: `<b>{number_of_completed_cards}</b> of <b>{total_number_of_tasks_needed}</b> cards <b>done</b>`,
      description: `Recording screen, progress message of tasks completed so far`,
      text: `<b>{number_of_completed_cards}</b> de <b>{total_number_of_tasks_needed}</b> tarjetas <b>terminadas</b>`
    },
    {
      key: `Thank you!`,
      description: `Done screen title, shown when the user has finished at least one pass`,
      text: `\xA1Gracias!`
    },
    {
      key: `          Great work! You've gone through the cards once, and recorded
    <b class=count>{number_of_completed_cards} cards</b>
    out of the total (<b>{total_number_of_tasks_needed} cards</b>).
    When you're ready, you can click the button below to finish up the rest of the cards.      `,
      description: `Done screen instructions, asks the user to go finish the rest of the cards`,
      text: `\xA1Buen trabajo! Has visto las tarjetas una vez y has grabado <b class=count>{number_of_completed_cards} tarjetas</b> del total de <b>{total_number_of_tasks_needed}</b>. Cuando quieras, haz clic en el bot\xF3n de abajo para terminar el resto de las tarjetas.`
    },
    {
      key: `          You're almost done! You've gone through the cards once, and recorded
    <b class=count>{number_of_completed_cards} cards</b>
    out of the total (<b>{total_number_of_tasks_needed} cards</b>).
    When you're ready, you can click the button below to finish up the rest of the cards.      `,
      description: `Done screen instructions, asks the user to go finish the rest of the cards.
  This version displays when the user has done more than 75% of the work.`,
      text: `\xA1Ya casi has terminado! Has visto las tarjetas una vez y has grabado <b class=count>{number_of_completed_cards} tarjetas</b> del total de <b>{total_number_of_tasks_needed}</b>. Cuando quieras, haz clic en el bot\xF3n de abajo para terminar el resto de las tarjetas.`
    },
    {
      key: `Continue Recording`,
      description: `Done screen and instructions screen buttons, return to the recording screen`,
      text: `Seguir grabando`
    },
    {
      key: `Continue recording!`,
      description: `Microphone settings screen, return to the recording screen`,
      text: `\xA1Sigue grabando!`
    },
    {
      key: `You previously indicated that you are eligible.`,
      description: `Signup screen, a message showing that the participant has already completed this form`,
      text: `Has indicado anteriormente que cumples los requisitos.`
    },
    {
      key: `You have already completed this form.`,
      description: `Interest form screen, a message showing that the participant has already completed this form`,
      text: `Ya has completado este formulario.`
    },
    {
      key: `Country is required.`,
      description: `Interest form screen, a message showing that a required field needs to be filled in.`,
      text: `Es obligatorio indicar el pa\xEDs.`
    },
    {
      key: `State is required.`,
      description: `Interest form screen, a message showing that a required field needs to be filled in.`,
      text: `Es obligatorio indicar el estado/provincia.`
    },
    {
      key: `Please tell us if someone will be helping you record.`,
      description: `Interest form screen, a message showing that a required field needs to be filled in.`,
      text: `Ind\xEDcanos si alguien te va a ayudar a grabar.`
    },
    {
      key: `Please tell us how to email the person helping you.`,
      description: `Interest form screen, a message showing that a required field needs to be filled in.`,
      text: `Ind\xEDcanos c\xF3mo podemos contactar por correo electr\xF3nico con la persona que te va a ayudar.`
    },
    {
      key: `You'll need to give consent to proceed.`,
      description: `Interest form screen, a message showing that a required field needs to be filled in.`,
      text: `Tendr\xE1s que dar tu consentimiento para continuar.`
    },
    {
      key: `Please write your initials next to your consent.`,
      description: `Interest form screen, a message showing that a required field needs to be filled in.`,
      text: `Escribe tus iniciales junto a tu consentimiento.`
    },
    {
      key: `You'll need to accept the terms to proceed.`,
      description: `Interest form screen, a message showing that a required field needs to be filled in.`,
      text: `Tendr\xE1s que aceptar los t\xE9rminos para continuar.`
    },
    {
      key: `You have already consented.`,
      description: `Consent screen, a message showing that the participant has already completed this form`,
      text: `Ya has dado tu consentimiento.`
    },
    {
      key: `By typing my name here, I agree to these terms:`,
      description: `Consent screen, indicates that the participant consents`,
      text: `Al escribir mi nombre aqu\xED, acepto los siguientes t\xE9rminos:`
    },
    {
      key: `&nbsp;(Agreement {which_agreement_number} of {total_number_of_agreements})`,
      description: ``,
      text: `&nbsp;(Contrato {which_agreement_number} de {total_number_of_agreements})`
    },
    {
      key: `Congratulations! You're all done!`,
      description: `Progress bar display when there are no tasks left to do`,
      text: `\xA1Enhorabuena! \xA1Ya has terminado!`
    },
    {
      key: `Congratulations!`,
      description: `Title of the done screen`,
      text: `\xA1Enhorabuena!`
    },
    {
      key: `Review Recordings (optional)`,
      description: `Button on done screen which returns to the recording screen, if the user wants to listen to recordings`,
      text: `Revisar grabaciones (opcional)`
    },
    {
      key: `
    You have completed all your cards! We'll be reviewing them soon, and if everything
    looks good, you'll be receiving an email from rewards@perks.com within the next 7-10
    business days with a link to claim your gift card.
    <br/><br/>
  <b>Thank you for contributing <b class=count>{number_of_completed_cards} cards</b> to the project!</b>
    <br/><br/>
    (If you wish, you can now go back and review your recordings, but this is not necessary. <b>You're done!</b>)`,
      description: `Descriptive text on the done screen`,
      text: `Has completado todas las tarjetas. Las revisaremos pr\xF3ximamente y, si est\xE1 todo bien, recibir\xE1s un correo de rewards@perks.com en los pr\xF3ximos 7-10 d\xEDas h\xE1biles con un enlace a tu tarjeta regalo. <br/><br/> <b>Gracias por contribuir con <b class=count>{number_of_completed_cards} tarjetas</b> al Proyect Euphonia.</b> <br/><br/> Si quieres, puedes volver y revisar tus grabaciones, pero no es necesario. <b>Ya has acabado</b>.`
    },
    {
      key: `__INTEREST_FORM_HTML__`,
      description: `The HTML for the interest form; all HTML IDs must be intact exactly as is!`,
      text: `

    <div class=title
    >Proyecto Google Euphonia: formulario de inter\xE9s</div>
    <div class=sectiontitle
    >Informaci\xF3n sobre ti</div>
    <div class=formbox>
    <div class=fieldname><label for=ifname
    >Nombre</label>
    <span class=optional
    >(Opcional)</span>
    </div>
    <div class=fielddescription
    >Tu apodo, tu nombre y apellidos, solo tu nombre, etc. La forma en que prefieras que nos dirijamos a ti.</div>
    <input id=ifname class=formtext />
    </div>
    
    <div class=formbox>
    <div class=fieldname><label for=ifcountry
    >\xBFEn qu\xE9 pa\xEDs resides?</label>
    <span class=required>*</span></div>
    <div class=fielddescription
    >TEN EN CUENTA LA SIGUIENTE INFORMACI\xD3N IMPORTANTE: Lamentablemente, en este momento no podemos enviar tarjetas regalo a residentes de los pa\xEDses marcados a continuaci\xF3n con un asterisco (*). Si resides en uno de estos pa\xEDses, puedes participar en la investigaci\xF3n de Proyect Euphonia, y te avisaremos cuando puedas recibir tarjetas regalo.
    </div>
    <select id=ifcountry class=formselect>
    <option value="Spain">Espa\xF1a</option>
    <option value="USA">United States of America</option>
    <option value="* Afghanistan">* Afghanistan</option>
    <option value="* Albania">* Albania</option>
    <option value="Algeria">Algeria</option>
    <option value="Andorra">Andorra</option>
    <option value="Angola">Angola</option>
    <option value="Antigua and Barbuda">Antigua and Barbuda</option>
    <option value="Argentina">Argentina</option>
    <option value="Armenia">Armenia</option>
    <option value="Aruba">Aruba</option>
    <option value="Australia">Australia</option>
    <option value="Austria">Austria</option>
    <option value="Azerbaijan">Azerbaijan</option>
    <option value="* Bahamas, The">* Bahamas, The</option>
    <option value="Bahrain">Bahrain</option>
    <option value="Bangladesh">Bangladesh</option>
    <option value="* Barbados">* Barbados</option>
    <option value="* Belarus">* Belarus</option>
    <option value="Belgium">Belgium</option>
    <option value="Belize">Belize</option>
    <option value="* Benin">* Benin</option>
    <option value="Bhutan">Bhutan</option>
    <option value="Bolivia">Bolivia</option>
    <option value="* Bosnia and Herzegovina">* Bosnia and Herzegovina</option>
    <option value="Botswana">Botswana</option>
    <option value="Brazil">Brazil</option>
    <option value="Brunei">Brunei</option>
    <option value="Bulgaria">Bulgaria</option>
    <option value="* Burkina Faso">* Burkina Faso</option>
    <option value="* Burma">* Burma</option>
    <option value="* Burundi">* Burundi</option>
    <option value="* Cambodia">* Cambodia</option>
    <option value="Cameroon">Cameroon</option>
    <option value="Canada">Canada</option>
    <option value="Cabo Verde">Cabo Verde</option>
    <option value="* Central African Republic">* Central African Republic</option>
    <option value="* Chad">* Chad</option>
    <option value="Chile">Chile</option>
    <option value="China">China</option>
    <option value="* Colombia">* Colombia</option>
    <option value="* Comoros">* Comoros</option>
    <option value="* Congo, Democratic Republic of the">* Congo, Democratic Republic of the</option>
    <option value="* Congo, Republic of the">* Congo, Republic of the</option>
    <option value="Costa Rica">Costa Rica</option>
    <option value="* Cote d'Ivoire">* Cote d'Ivoire</option>
    <option value="Croatia">Croatia</option>
    <option value="* Cuba">* Cuba</option>
    <option value="Curacao">Curacao</option>
    <option value="Cyprus">Cyprus</option>
    <option value="Czechia">Czechia</option>
    <option value="Denmark">Denmark</option>
    <option value="Djibouti">Djibouti</option>
    <option value="Dominica">Dominica</option>
    <option value="* Dominican Republic">* Dominican Republic</option>
    <option value="East Timor (see Timor-Leste)">East Timor (see Timor-Leste)</option>
    <option value="Ecuador">Ecuador</option>
    <option value="Egypt">Egypt</option>
    <option value="El Salvador">El Salvador</option>
    <option value="* Equatorial Guinea">* Equatorial Guinea</option>
    <option value="* Eritrea">* Eritrea</option>
    <option value="Estonia">Estonia</option>
    <option value="Eswatini">Eswatini</option>
    <option value="Ethiopia">Ethiopia</option>
    <option value="Fiji">Fiji</option>
    <option value="Finland">Finland</option>
    <option value="France">France</option>
    <option value="Gabon">Gabon</option>
    <option value="Gambia, The">Gambia, The</option>
    <option value="Georgia">Georgia</option>
    <option value="Germany">Germany</option>
    <option value="Ghana">Ghana</option>
    <option value="Greece">Greece</option>
    <option value="Grenada">Grenada</option>
    <option value="Guatemala">Guatemala</option>
    <option value="* Guinea">* Guinea</option>
    <option value="* Guinea-Bissau">* Guinea-Bissau</option>
    <option value="Guyana">Guyana</option>
    <option value="* Haiti">* Haiti</option>
    <option value="Holy See">Holy See</option>
    <option value="Honduras">Honduras</option>
    <option value="Hong Kong">Hong Kong</option>
    <option value="Hungary">Hungary</option>
    <option value="Iceland">Iceland</option>
    <option value="India">India</option>
    <option value="Indonesia">Indonesia</option>
    <option value="* Iran">* Iran</option>
    <option value="* Iraq">* Iraq</option>
    <option value="Ireland">Ireland</option>
    <option value="Israel">Israel</option>
    <option value="Italy">Italy</option>
    <option value="Jamaica">Jamaica</option>
    <option value="Japan">Japan</option>
    <option value="Jordan">Jordan</option>
    <option value="Kazakhstan">Kazakhstan</option>
    <option value="Kenya">Kenya</option>
    <option value="Kiribati">Kiribati</option>
    <option value="Korea, North">Korea, North</option>
    <option value="Korea, South">Korea, South</option>
    <option value="* Kosovo">* Kosovo</option>
    <option value="Kuwait">Kuwait</option>
    <option value="Kyrgyzstan">Kyrgyzstan</option>
    <option value="* Laos">* Laos</option>
    <option value="* Latvia">* Latvia</option>
    <option value="* Lebanon">* Lebanon</option>
    <option value="* Lesotho">* Lesotho</option>
    <option value="* Liberia">* Liberia</option>
    <option value="* Libya">* Libya</option>
    <option value="Liechtenstein">Liechtenstein</option>
    <option value="Lithuania">Lithuania</option>
    <option value="Luxembourg">Luxembourg</option>
    <option value="Macau">Macau</option>
    <option value="* Madagascar">* Madagascar</option>
    <option value="Malawi">Malawi</option>
    <option value="Malaysia">Malaysia</option>
    <option value="Maldives">Maldives</option>
    <option value="* Mali">* Mali</option>
    <option value="Malta">Malta</option>
    <option value="Marshall Islands">Marshall Islands</option>
    <option value="Mauritania">Mauritania</option>
    <option value="* Mauritius">* Mauritius</option>
    <option value="Mexico">Mexico</option>
    <option value="Micronesia">Micronesia</option>
    <option value="Moldova">Moldova</option>
    <option value="Monaco">Monaco</option>
    <option value="Mongolia">Mongolia</option>
    <option value="* Montenegro">* Montenegro</option>
    <option value="Morocco">Morocco</option>
    <option value="Mozambique">Mozambique</option>
    <option value="Namibia">Namibia</option>
    <option value="Nauru">Nauru</option>
    <option value="Nepal">Nepal</option>
    <option value="Netherlands">Netherlands</option>
    <option value="New Zealand">New Zealand</option>
    <option value="* Nicaragua">* Nicaragua</option>
    <option value="Niger">Niger</option>
    <option value="* Nigeria">* Nigeria</option>
    <option value="* North Korea">* North Korea</option>
    <option value="* North Macedonia">* North Macedonia</option>
    <option value="Norway">Norway</option>
    <option value="Oman">Oman</option>
    <option value="Pakistan">Pakistan</option>
    <option value="Palau">Palau</option>
    <option value="Palestinian Territories">Palestinian Territories</option>
    <option value="* Panama">* Panama</option>
    <option value="Papua New Guinea">Papua New Guinea</option>
    <option value="Paraguay">Paraguay</option>
    <option value="Peru">Peru</option>
    <option value="Philippines">Philippines</option>
    <option value="Poland">Poland</option>
    <option value="Portugal">Portugal</option>
    <option value="Qatar">Qatar</option>
    <option value="Romania">Romania</option>
    <option value="* Russia">* Russia</option>
    <option value="Rwanda">Rwanda</option>
    <option value="Saint Kitts and Nevis">Saint Kitts and Nevis</option>
    <option value="Saint Lucia">Saint Lucia</option>
    <option value="Saint Vincent and the Grenadines">Saint Vincent and the Grenadines</option>
    <option value="Samoa">Samoa</option>
    <option value="San Marino">San Marino</option>
    <option value="Sao Tome and Principe">Sao Tome and Principe</option>
    <option value="Saudi Arabia">Saudi Arabia</option>
    <option value="Senegal">Senegal</option>
    <option value="* Serbia">* Serbia</option>
    <option value="Seychelles">Seychelles</option>
    <option value="Sierra Leone">Sierra Leone</option>
    <option value="Singapore">Singapore</option>
    <option value="Sint Maarten">Sint Maarten</option>
    <option value="Slovakia">Slovakia</option>
    <option value="* Slovenia">* Slovenia</option>
    <option value="Solomon Islands">Solomon Islands</option>
    <option value="* Somalia">* Somalia</option>
    <option value="South Africa">South Africa</option>
    <option value="South Korea">South Korea</option>
    <option value="* South Sudan">* South Sudan</option>
    <option value="Sri Lanka">Sri Lanka</option>
    <option value="* Sudan">* Sudan</option>
    <option value="Suriname">Suriname</option>
    <option value="Swaziland">Swaziland</option>
    <option value="Sweden">Sweden</option>
    <option value="Switzerland">Switzerland</option>
    <option value="* Syria">* Syria</option>
    <option value="Taiwan">Taiwan</option>
    <option value="Tajikistan">Tajikistan</option>
    <option value="Tanzania">Tanzania</option>
    <option value="Thailand">Thailand</option>
    <option value="Timor-Leste">Timor-Leste</option>
    <option value="Togo">Togo</option>
    <option value="Tonga">Tonga</option>
    <option value="Trinidad and Tobago">Trinidad and Tobago</option>
    <option value="* Tunisia">* Tunisia</option>
    <option value="* Turkey">* Turkey</option>
    <option value="Turkmenistan">Turkmenistan</option>
    <option value="Tuvalu">Tuvalu</option>
    <option value="* Uganda">* Uganda</option>
    <option value="* Ukraine">* Ukraine</option>
    <option value="United Arab Emirates">United Arab Emirates</option>
    <option value="United Kingdom">United Kingdom</option>
    <option value="Uruguay">Uruguay</option>
    <option value="Uzbekistan">Uzbekistan</option>
    <option value="Vanuatu">Vanuatu</option>
    <option value="* Venezuela">* Venezuela</option>
    <option value="Vietnam">Vietnam</option>
    <option value="Yemen">Yemen</option>
    <option value="Zambia">Zambia</option>
    <option value="* Zimbabwe">* Zimbabwe</option>
    </select>
    </div>
    
    <div class=formbox id=usstatebox>
    <div class=fieldname><label for=ifstate
    >\xBFEn qu\xE9 pa\xEDs o territorio resides?</label>
    <span class=required>*</span></div>
    <select id=ifstate class=formselect>
    <option value=""></option>
    <option value="AL">Alabama</option>
    <option value="AK">Alaska</option>
    <option value="AZ">Arizona</option>
    <option value="AR">Arkansas</option>
    <option value="AS">American Samoa</option>
    <option value="CA">California</option>
    <option value="CO">Colorado</option>
    <option value="CT">Connecticut</option>
    <option value="DE">Delaware</option>
    <option value="FL">Florida</option>
    <option value="GA">Georgia</option>
    <option value="GU">Guam</option>
    <option value="HI">Hawaii</option>
    <option value="ID">Idaho</option>
    <option value="IL">Illinois</option>
    <option value="IN">Indiana</option>
    <option value="IA">Iowa</option>
    <option value="KS">Kansas</option>
    <option value="KY">Kentucky</option>
    <option value="LA">Louisiana</option>
    <option value="ME">Maine</option>
    <option value="MD">Maryland</option>
    <option value="MA">Massachusetts</option>
    <option value="MI">Michigan</option>
    <option value="MN">Minnesota</option>
    <option value="MS">Mississippi</option>
    <option value="MO">Missouri</option>
    <option value="MT">Montana</option>
    <option value="NE">Nebraska</option>
    <option value="NV">Nevada</option>
    <option value="NH">New Hampshire</option>
    <option value="NJ">New Jersey</option>
    <option value="NM">New Mexico</option>
    <option value="NY">New York</option>
    <option value="NC">North Carolina</option>
    <option value="ND">North Dakota</option>
    <option value="MP">Northern Mariana Islands</option>
    <option value="OH">Ohio</option>
    <option value="OK">Oklahoma</option>
    <option value="OR">Oregon</option>
    <option value="PA">Pennsylvania</option>
    <option value="PR">Puerto Rico</option>
    <option value="RI">Rhode Island</option>
    <option value="SC">South Carolina</option>
    <option value="SD">South Dakota</option>
    <option value="TN">Tennessee</option>
    <option value="TX">Texas</option>
    <option value="VI">U.S. Virgin Islands</option>
    <option value="UT">Utah</option>
    <option value="VT">Vermont</option>
    <option value="VA">Virginia</option>
    <option value="WA">Washington</option>
    <option value="WV">West Virginia</option>
    <option value="WI">Wisconsin</option>
    <option value="WY">Wyoming</option>
    </select>
    </div>
    
    <div class=formbox>
    <div class=fieldname><label for=ifcity
    >\xBFEn qu\xE9 ciudad vives?</label>
    <span class=optional
    >(Opcional)</span>
    </div>
    <input id=ifcity class=formtext />
    </div>
    
    <div class=formbox>
    <div class=fieldname><label for=ifaccent
    >\xBFC\xF3mo describir\xEDas tu acento?</label>
    <span class=optional
    >(Opcional)</span>
    </div>
    <input id=ifaccent class=formtext />
    </div>
    
    <div class=sectiontitle
    >Informaci\xF3n adicional</div>
    
    <div class=formbox>
    <div class=fieldname><label for=ifreferral
    >Cu\xE9ntanos c\xF3mo conociste este proyecto</label>
    <span class=optional
    >(Opcional)</span>
    </div>
    <input id=ifreferral class=formtext />
    </div>
    
    <div class=formbox role=radiogroup id=ifgendergroup style="display: none;">
    <div class=fieldname><label for=ifgendergroup
    >\xBFCu\xE1l es tu sexo?</label>
    <span class=optional
    >(Opcional)</span>
    </div>
    <div class=checkboxrow>
    <input type=radio name=ifgender id=ifgenderfemale />
    <label for=ifgenderfemale
    >Mujer</label>
    </div>
    <div class=checkboxrow>
    <input type=radio name=ifgender id=ifgendermale />
    <label for=ifgendermale
    >Hombre</label>
    </div>
    <div class=checkboxrow>
    <input type=radio name=ifgender id=ifgenderno />
    <label for=ifgenderno
    >Prefiero no decirlo</label>
    </div>
    <div class=checkboxrow>
    <input type=radio name=ifgender id=ifgenderother />
    <label for=ifgenderother
    >Otro:</label>
    <input type=text class=formtext id=ifgenderothertext />
    </div>
    </div>
    
    <div class=formbox style="display: none;">
    <div class=fieldname><label for=ifrace
    >\xBFA qu\xE9 raza perteneces?</label>
    <span class=optional
    >(Opcional)</span>
    </div>
    <input id=ifrace class=formtext />
    </div>
    
    <div class=formbox>
    <div class=fieldname
    >\xBFA cu\xE1l de estos dispositivos tienes acceso?
    <span class=optional
    >(Opcional)</span>
    </div>
    <div class=checkboxrow>
    <input type=checkbox id=ifdevicecomputer />
    <label for=ifdevicecomputer
    >Un ordenador con conexi\xF3n a Internet, micr\xF3fono y altavoces</label>
    </div>
    <div class=checkboxrow>
    <input type=checkbox id=ifdeviceandroid />
    <label for=ifdeviceandroid
    >Un tel\xE9fono o tablet Android (por ejemplo, Samsung, Pixel, Nexus, etc.)</label>
    </div>
    <div class=checkboxrow>
    <input type=checkbox id=ifdeviceiphone />
    <label for=ifdeviceiphone
    >Un iPhone o un iPad</label>
    </div>
    <div class=checkboxrow>
    <input type=checkbox id=ifdevicenone />
    <label for=ifdevicenone
    >Ninguno de los anteriores</label>
    </div>
    <div class=checkboxrow>
    <input type=checkbox id=ifdeviceother />
    <label for=ifdeviceother
    >Otro:</label>
    <input type=text class=formtext id=ifdeviceothertext aria-labelledby="ifdeviceotherlabel" />
    </div>
    </div>
    
    <div class=formbox id=helperbox>
    <div class=fieldname
    >\xBFTe va a ayudar alguien a grabar las muestras de voz?
    <span class=required>*</span></div>
    <div class=fielddescription
    >Por ejemplo, un familiar, un logopeda u otra persona</div>
    <div class=checkboxrow>
    <input type=radio name=ifhelper id=ifhelperno selected />
    <label for=ifhelperno
    >No, voy a participar de forma independiente</label>
    </div>
    <div class=checkboxrow>
    <input type=radio name=ifhelper id=ifhelperyes />
    <label for=ifhelperyes
    >S\xED, me va a ayudar alguien, y esa persona est\xE1 de acuerdo con que comparta su informaci\xF3n</label>
    </div>
    </div>
    
    <!-- Helper panel appears if the user chooses "yes" above -->
    <div id=helpersection>
    <div class=sectiontitle
    >Informaci\xF3n sobre la persona que te va a ayudar</div>
    <div class=formbox>
    <div class=fielddescription>
    Nos gustar\xEDa que nos proporcionases un poco de informaci\xF3n sobre la persona que te va a ayudar para que podamos estar en contacto con ambos m\xE1s f\xE1cilmente. Al incluir el nombre de tu asistente, aceptas que reciba informaci\xF3n sobre tu participaci\xF3n en este proyecto. Puedes incluir m\xE1s de un asistente y un correo electr\xF3nico. Basta con separarlos con una coma.
    </div>
    </div>
    
    <div class=formbox>
    <div class=fieldname><label for=ifassistantname
    >Nombre del asistente</label>
    <span class=optional
    >(Opcional)</span>
    </div>
    <input type=text class=formtext id=ifassistantname />
    </div>
    
    <div class=formbox>
    <div class=fieldname><label for=ifassistantemail
    >Direcci\xF3n de correo electr\xF3nico del asistente</label>
    <span class=required>*</span></div>
    <input type=text class=formtext id=ifassistantemail />
    </div>
    
    <div class=formbox>
    <div class=fieldname><label for=ifassistantrelationship
    >\xBFQu\xE9 relaci\xF3n tienes con esta persona?</label>
    <span class=optional
    >(Opcional)</span>
    </div>
    <div class=fielddescription
    >Por ejemplo, cuidador, amigo, familiar, logopeda, etc.</div>
    <input type=text class=formtext id=ifassistantrelationship />
    </div>
    </div>
    
    <div class=sectiontitle
    >Proyecto Google Euphonia: consentimiento</div>
    
    <div class=forminfobox>
    <div class=fieldname
    >Cuestionario para recoger informaci\xF3n personal identificable sensible</div>
    <div class=fielddescription>
    El objetivo de este cuestionario es verificar que cumples los requisitos para participar en una iniciativa de recogida de datos que realizar\xE1 Google pr\xF3ximamente. La finalidad de la recogida ser\xE1 ayudar a Google a dise\xF1ar, investigar, desarrollar y mejorar la accesibilidad de sus productos y servicios (actuales y futuros) relacionados con tecnolog\xEDas de voz.
    La informaci\xF3n que proporciones en este cuestionario se puede combinar con otra informaci\xF3n y otros datos que decidas proporcionar durante la recogida de datos si se te selecciona para participar.
    </div>
    </div>
    
    <div class=formbox>
    <div class=fieldname>
    Con tu consentimiento, Google recoger\xE1 y tratar\xE1 la informaci\xF3n personal que decidas proporcionar a) cuando env\xEDes este cuestionario y b) si se te selecciona para participar en el proyecto, cuando colabores en las tareas de recogida de datos, incluida la informaci\xF3n sobre el uso que haces de tecnolog\xEDa asistencial, tu discapacidad o trastorno del habla y tus patrones de voz.
    <span class=required>*</span>
    </div>
    <div class=checkboxrow>
    <input type=checkbox id=ifformconsent />
    <label for=ifformconsent>
    Doy mi consentimiento e incluyo mis iniciales aqu\xED:
    </label>
    <input type=text class=formtext id=ifconsentinitials aria-labelledby="ifformconsentlabel" />
    </div>
    </div>
    
    <div class=formbox>
    <div class=fieldname>
    Revisa nuestros T\xE9rminos y Condiciones, y nuestra Pol\xEDtica de Privacidad
    <span class=required>*</span>
    </div>
    <div class=checkboxrow>
    <input type=checkbox id=ifformtos />
    <label for=ifformtos>
    Acepto los
    <a target="_blank" href="https://www.google.com/policies/terms/"
    >T\xE9rminos y Condiciones</a>
    y soy consciente de que mi informaci\xF3n se va a utilizar para investigar, desarrollar y mejorar productos relacionados con tecnolog\xEDas del habla de acuerdo con
    <a target="_blank" href="https://www.google.com/policies/privacy/"
    >la Pol\xEDtica de Privacidad de Google</a>
    .
    </label>
    </div>
    </div>
    
    <div class=forminfobox>
    <div class=fieldname>
    Al enviar este formulario, das tu consentimiento a Google y a sus entidades asociadas para que se pongan en contacto contigo por correo electr\xF3nico.
    </div>
    </div>
    
    <div class=formbox>
    <div class=fieldname><label for=ifotherinfo>
    \xBFHay alguna otra informaci\xF3n que quieras compartir con nosotros?
    </label>
    <span class=optional
    >(Opcional)</span>
    </div>
    <input id=ifotherinfo class=formtext />
    </div>

    `
    }
  ];

  // ../common/localization.ts
  var LOCALIZED_STRINGS = /* @__PURE__ */ new Map([
    ["en-US", toLocaleTable(EN_STRINGS)],
    ["en-GB", toLocaleTable(EN_STRINGS)],
    ["es-ES", toLocaleTable(ES_STRINGS)],
    ["fr-FR", toLocaleTable(FR_STRINGS)],
    ["hi-HI", toLocaleTable(HI_STRINGS)],
    ["ja-JP", toLocaleTable(JA_STRINGS)],
    ["ca", toLocaleTable(CA_STRINGS)]
  ]);
  function toLocaleTable(translations) {
    const result = /* @__PURE__ */ new Map();
    for (const s of translations) {
      const key = lkey(s.key);
      if (result.has(key)) {
        throw new Error(`Key already defined for language: ${key}`);
      }
      result.set(key, s);
    }
    return result;
  }
  function lkey(s) {
    return s.replace(/\s+/g, " ").trim().toLowerCase();
  }
  function formatWithArgs(lang, formatString, ...argsList) {
    if (formatString.trim() == "") {
      return formatString;
    }
    const langMap = LOCALIZED_STRINGS.get(lang);
    const localizedString = langMap ? langMap.get(lkey(formatString)) : void 0;
    if (!langMap || !localizedString) {
      console.log(
        `Warning: no localization in lang[${lang}]:
${formatString}
===============`
      );
      console.log(new Error().stack);
    } else {
      formatString = localizedString.text;
    }
    const args = /* @__PURE__ */ new Map();
    for (let i = 0; i < argsList.length; i += 2) {
      const key = argsList[i];
      const value = argsList[i + 1];
      const localizedValue = langMap ? langMap.get(lkey(value)) : null;
      args.set(key, localizedValue ? localizedValue.text : value);
    }
    if (formatString.indexOf("{") === -1) {
      if (args && args.size > 0) {
        throw new Error(
          `Arguments supplied to non-parameterized format string: ${formatString}`
        );
      }
      return formatString;
    }
    for (const arg of args.keys()) {
      if (arg.indexOf("}") != -1) {
        throw new Error(`Invalid format argument: ${arg}`);
      }
    }
    const found = /* @__PURE__ */ new Set();
    let isFirst = true;
    let result = "";
    for (const part of formatString.split(/\{/)) {
      let isSub = false;
      for (const arg of args.keys()) {
        const sub = `${arg}}`;
        if (part.startsWith(sub)) {
          result += args.get(arg);
          result += part.substring(sub.length);
          found.add(arg);
          isSub = true;
          break;
        }
      }
      if (!isSub) {
        if (!isFirst) {
          result += "{";
        }
        isFirst = false;
        result += part;
      }
    }
    for (const arg of args.keys()) {
      if (!found.has(arg)) {
        throw new Error(`Unused argument: ${arg}`);
      }
    }
    return result;
  }

  // ../common/schema.ts
  var MAX_DELETABLE_RECORDING_AGE_MS = 24 * 3600 * 1e3;
  var SUPPORTED_LANGUAGES = /* @__PURE__ */ new Set([
    "en-US",
    "en-GB",
    "fr-FR",
    "es-ES",
    "hi-HI",
    "ja-JP",
    "ca"
  ]);

  // src/util.ts
  $.fn.eadd = function(spec) {
    const newChild = $(spec);
    this.append(newChild);
    return newChild;
  };
  $.fn.eins = function(spec) {
    const newChild = $(spec);
    this.prepend(newChild);
    return newChild;
  };
  $.fn.etext = function(text) {
    this.text(text);
    return this;
  };
  $.fn.ehtml = function(text) {
    this.html(text);
    return this;
  };
  $.fn.evalue = function(text) {
    this.val(text);
    return this;
  };
  $.fn.eshow = function(show) {
    if (show) {
      this.show();
    } else {
      this.hide();
    }
  };
  $.fn.evisible = function(show) {
    if (show) {
      this.css("opacity", "1");
    } else {
      this.css("opacity", "0");
    }
  };
  $.fn.eenable = function(enabled) {
    this.prop("disabled", !enabled);
  };
  $.fn.echecked = function(isChecked) {
    this.prop("checked", isChecked);
  };
  $.fn.eclass = function(className, wanted) {
    if (!className) {
      return;
    }
    if (wanted) {
      this.addClass(className);
    } else {
      this.removeClass(className);
    }
  };
  $.fn.efade = async function(show) {
    if (show) {
      this.show();
      await fadeIn(this);
    } else {
      await fadeOut(this);
      this.hide();
    }
  };
  $.fn.eaddtr = function(cellNodes, rowClass) {
    const tr = this.eadd("<tr />");
    const result = [];
    tr.eclass(rowClass, !!rowClass);
    for (const cell of cellNodes) {
      const td = tr.eadd("<td />");
      td.append(cell);
      result.push(cell);
    }
    return result;
  };
  var CURRENT_LANGUAGE = "en-US";
  $.fn.eitext = function(formatString, ...args) {
    return this.etext(formatWithArgs(CURRENT_LANGUAGE, formatString, ...args));
  };
  $.fn.eihtml = function(formatString, ...args) {
    return this.ehtml(formatWithArgs(CURRENT_LANGUAGE, formatString, ...args));
  };
  $.fn.eiprop = function(propertyName, formatString, ...args) {
    this.prop(
      propertyName,
      formatWithArgs(CURRENT_LANGUAGE, formatString, ...args)
    );
    return this;
  };
  function sleep(ms) {
    if (ms < 0) {
      return;
    }
    return new Promise((resolve) => {
      setTimeout(resolve, ms);
    });
  }
  async function animateOpacity(div, start, end, opt_speed) {
    if (!opt_speed) {
      opt_speed = 0.3;
    }
    div.css("opacity", `${start}`);
    await sleep(100);
    div.css("transition", `opacity ease-in ${opt_speed}s`);
    div.css("opacity", `${end}`);
    await sleep(Math.round(opt_speed * 1e3));
    div.css("transition", "");
  }
  async function fadeIn(div, opt_speed) {
    await animateOpacity(div, 0, 1, opt_speed);
  }
  async function fadeOut(div, opt_speed) {
    await animateOpacity(div, 1, 0, opt_speed);
  }
  function toURL(path, opt_args) {
    const url = new URL(window.location.origin + path);
    if (opt_args) {
      for (const k in opt_args) {
        url.searchParams.append(k, opt_args[k]);
      }
    }
    return url;
  }
  async function authenticatedFetch(path, opt_args, opt_method, opt_rawBody, retries = 1) {
    const method = opt_method == null ? "get" : opt_method;
    const args = opt_args == null ? {} : opt_args;
    const options = { method };
    const url = toURL(path, args);
    const token = await firebase.auth().currentUser.getIdToken();
    const headers = new Headers();
    headers.append("Authorization", `Bearer ${token}`);
    if (opt_rawBody) {
      headers.append("Content-Type", "application/octet-stream");
      options.body = opt_rawBody;
    }
    options.headers = headers;
    let triesLeft = retries;
    while (true) {
      triesLeft--;
      const rsp = await fetch(url.toString(), options);
      if (rsp.ok) {
        return rsp;
      } else if (0 < triesLeft && (rsp.status === 401 || rsp.status === 403)) {
        continue;
      } else {
        const contentType = rsp.headers.get("content-type");
        if (contentType && contentType.includes("application/json")) {
          const message = await rsp.json();
          throw new Error(message[0]);
        } else {
          throw new Error("Error during request");
        }
      }
    }
  }
  async function postAsJson(path, jsonObj) {
    const body = new TextEncoder().encode(JSON.stringify(jsonObj));
    const rsp = await authenticatedFetch(
      path,
      {},
      "post",
      // body.buffer.slice(0, body.byteLength * body.byteOffset) as ArrayBuffer
      body.buffer
    );
    return await rsp.json();
  }
  function toast(message, duration = 1e3, cssClasses = "toast") {
    setTimeout(async () => {
      const div = $("BODY").eins(`<div class="${cssClasses}" />`);
      div.text(message);
      await fadeIn(div);
      await sleep(duration);
      await fadeOut(div);
      div.remove();
    }, 1);
  }
  function errorToast(message) {
    toast(message, 3e3, "toast errortoast");
  }
  var Spinner = class _Spinner {
    waiters = 0;
    overlay;
    div;
    static self;
    static async waitFor(fn) {
      if (!_Spinner.self) {
        _Spinner.self = new _Spinner();
      }
      _Spinner.self.waiters++;
      try {
        return await fn();
      } finally {
        _Spinner.self.waiters--;
        if (_Spinner.self.waiters <= 0) {
          _Spinner.self.remove();
          _Spinner.self = void 0;
        }
      }
    }
    constructor() {
      this.overlay = $("BODY").eadd("<div class=spinneroverlay />");
      this.div = this.overlay.eadd(`<div class=spinner />`);
    }
    remove() {
      this.overlay.remove();
      this.overlay = void 0;
      this.div = void 0;
    }
  };
  var Dropdown = class {
    select;
    options = [];
    constructor(parent, cssClass) {
      this.select = parent.eadd(`<select class="${cssClass ? cssClass : ""}" />`);
    }
    addOption(value, label) {
      const option = this.select.eadd("<option />");
      this.options.push(option);
      option.text(label);
      option.val(value);
      return option;
    }
    // Returns the value of the selected option.
    getSelected() {
      for (const option of this.options) {
        if (option.is(":selected")) {
          return `${option.val()}`;
        }
      }
      return void 0;
    }
    onchange(fn) {
      this.select.on("change", fn);
    }
  };

  // ../common/util.ts
  function formatDate(date) {
    const f = new Intl.DateTimeFormat("en-us", {
      dateStyle: "short",
      timeStyle: "long"
    });
    const parts = {
      year: "",
      month: "",
      day: "",
      hour: "",
      minute: "",
      dayPeriod: "",
      timeZoneName: ""
    };
    for (const { type, value } of f.formatToParts(date)) {
      parts[type] = value;
    }
    const d = `20${parts.year.padStart(2, "0")}/${parts.month.padStart(2, "0")}/${parts.day.padStart(2, "0")}`;
    const t = `${parts.hour.padStart(2, "0")}:${parts.minute.padStart(2, "0")}${parts.dayPeriod.toLowerCase()}`;
    return `${d} ${t} ${parts.timeZoneName}`;
  }
  function formatTimestamp(ts, opt_noneValue) {
    if (ts < 1) {
      return opt_noneValue ? opt_noneValue : "-";
    } else {
      return formatDate(new Date(ts));
    }
  }
  function parseTimestamp(text) {
    const d = new Date(text);
    return isNaN(d.getTime()) ? void 0 : d.getTime();
  }
  function parseTags(tagsString) {
    if (!tagsString) {
      return [];
    }
    const obj = tagsString.split(/\s+/);
    return [
      ...obj.map((tag) => normalizeTag(tag)).filter((tag) => tag !== "" ? true : false)
    ];
  }
  function normalizeTag(tag) {
    if (!tag) {
      return "";
    }
    tag = tag.trim().toLowerCase();
    tag = tag.replace(/[^a-z0-9_]/g, "");
    return tag;
  }
  function findAndRemove(list, item) {
    let count = 0;
    while (true) {
      const index = list.indexOf(item);
      if (index === -1) {
        return count;
      }
      list.splice(index, 1);
      count++;
    }
  }
  function sorted(list, predicate) {
    const result = [...list];
    result.sort(predicate);
    return result;
  }
  function lastitem(items) {
    let last = void 0;
    for (const item of items) {
      last = item;
    }
    return last;
  }

  // src/dialog.ts
  var Dialog = class {
    overlay;
    div;
    formTable;
    constructor(opt_cssClass) {
      this.overlay = $("BODY").eadd("<div class=dialogoverlay />");
      this.div = this.overlay.eadd(`<div class=dialog />`);
      this.div.eclass(opt_cssClass, !!opt_cssClass);
      this.overlay.hide();
    }
    // Shows the dialog box
    async start() {
      this.overlay.show();
      await fadeIn(this.overlay);
    }
    // Dismisses the dialog
    async remove() {
      if (this.overlay) {
        await fadeOut(this.overlay);
        this.overlay.hide();
        this.overlay.remove();
      }
    }
    // Builds a tabular form
    startForm() {
      this.formTable = this.div.eadd("<table class=formtable />");
    }
    // Adds a label/value pair to the form table, and returns the input HTML result, or the TD if not specified.
    addFormField(label, inputHtml) {
      const tr = this.formTable.eadd("<tr />");
      tr.eadd("<td class=label />").text(label);
      const td = tr.eadd("<td/>");
      if (inputHtml) {
        return td.eadd(inputHtml);
      } else {
        return td;
      }
    }
  };
  var ChoiceDialog = class _ChoiceDialog extends Dialog {
    // Shows a modal dialog and returns the one of the given choices that the user picked.
    static async choose(prompt, ...choices) {
      return new Promise(async (resolve, reject) => {
        const dialog = new _ChoiceDialog(resolve, prompt, choices);
        await dialog.start();
      });
    }
    constructor(resolve, prompt, choices) {
      super("choicedialog");
      this.div.eadd("<label />").text(prompt);
      for (let c of choices) {
        const choice = c;
        this.div.eadd("<button />").etext(choice).on("click", (e) => {
          this.remove();
          resolve(choice);
        });
      }
    }
  };

  // src/admin/tasksetdetail.ts
  var TaskSetDetailView = class {
    data;
    parent;
    taskset;
    tasks;
    // set on load
    lastOrder = 0;
    // GUI elements
    div;
    tsinfo;
    tasksTable;
    taskStats;
    newPromptTaskButton;
    newImageTaskButton;
    bulkTasksButton;
    rulesTable;
    newRuleButton;
    constructor(parent, taskset) {
      this.data = parent.app.data;
      this.parent = parent;
      this.taskset = taskset;
      this.div = parent.app.main.eadd("<div id=tasksetdetailview />");
      this.tsinfo = this.div.eadd("<div class=tasksetinfo />");
      this.div.eadd("<h2 />").etext("Enrollment Rules");
      this.rulesTable = this.div.eadd("<table class=rules />");
      this.newRuleButton = this.div.eadd(
        "<button class=addrule>Add Rule</button>"
      );
      this.newRuleButton.on(
        "click",
        async (e) => await new AddRuleDialog(this).start()
      );
      this.div.eadd("<h2 />").etext("Tasks");
      this.taskStats = this.div.eadd("<div class=taskstats />");
      this.tasksTable = this.div.eadd("<table class=tasks />");
      const buttonbar = this.div.eadd("<div class=buttonbar />");
      this.newPromptTaskButton = buttonbar.eadd(
        "<button>Add Prompt Task</button>"
      );
      this.newPromptTaskButton.on(
        "click",
        async (e) => await new AddPromptTaskDialog(this).start()
      );
      this.newImageTaskButton = buttonbar.eadd("<button>Add Image Task</button>");
      this.newImageTaskButton.on(
        "click",
        async (e) => await new AddImageTaskDialog(this).start()
      );
      this.bulkTasksButton = buttonbar.eadd("<button>Bulk Upload Tasks</button>");
      this.bulkTasksButton.on(
        "click",
        async (e) => await new BulkTaskDialog(this).start()
      );
      this.fillTaskSetInfo();
    }
    // Fills in the task set details like name and rules
    fillTaskSetInfo() {
      this.tsinfo.empty();
      this.tsinfo.eadd("<div class=title />").text(`TaskSet: ${this.taskset.id}`);
      const desc = this.tsinfo.eadd("<div class=description />").etext(`${this.taskset.name}`);
      desc.eadd("<span class=language />").etext(` (${this.taskset.language})`);
      desc.eadd("<a class=editlink />").etext("[edit]").on("click", async (e) => await this.startEdit());
      this.taskStats.text(
        `${this.taskset.numAssignedTasks} assignments across ${this.taskset.numAssignedUsers} users`
      );
      this.rulesTable.html(
        "<tr><th>Order</th><th>Tags</th><th>Action</th><th class=buttoncol></th></tr>"
      );
      for (const rule of this.taskset.rules) {
        const ruleId = rule.id;
        let action = "";
        if (rule.allTasks) {
          action = "Assign all";
        } else if (rule.taskIds.length > 0) {
          action = `Assign ${rule.taskIds.length} specific tasks`;
        } else if (rule.sample > 0) {
          action = `Randomly assign up to ${rule.sample} tasks`;
        } else {
          action = "none";
        }
        const tr = this.rulesTable.eadd("<tr />");
        tr.eadd("<td />").etext(`${rule.order}`);
        tr.eadd("<td />").etext(`${rule.tags.join(" ")}`);
        tr.eadd("<td />").etext(`${action}`);
        const delbtn = tr.eadd("<td />").eadd("<button class=delrulebtn />").etext("Delete");
        delbtn.on("click", async (e) => await this.deleteRule(ruleId));
      }
      this.parent.app.setNav(`/taskset/${this.taskset.id}`);
    }
    // Displays the view
    async start() {
      this.parent.div.hide();
      this.div.show();
      await this.onTasksChanged();
    }
    // Cleans up this view
    remove() {
      this.div.remove();
      this.parent.div.show();
    }
    // Update the GUI for any changes to the task set
    onDataChanged() {
      this.taskset = this.data.tasksets.get(this.taskset.id);
      this.fillTaskSetInfo();
    }
    // Fetch the task list from the server. We don't cache this.
    async onTasksChanged() {
      await Spinner.waitFor(async () => {
        const taskSetId = this.taskset.id;
        this.tasks = await this.parent.app.data.loadTasksetTasks(taskSetId);
        this.tasksTable.html(
          `<tr><th>Order</th><th>Type</th><th>Prompt</th><th>Created</th><th>Recordings</th></tr>`
        );
        for (const task of this.tasks) {
          if (this.lastOrder < task.order) {
            this.lastOrder = task.order;
          }
          const tr = this.tasksTable.eadd("<tr />");
          tr.eadd("<td class=num />").text(task.order);
          tr.eadd("<td class=tasktype />").text(task.taskType);
          const ptd = tr.eadd("<td class=prompt />");
          ptd.eadd("<span class=label />").text(task.prompt);
          if (task.imageType) {
            const args = { taskSetId, taskId: task.id, mimeType: task.imageType };
            const imageURL = toURL("/api/gettaskimage", args);
            ptd.eadd("<button>\u2B07</button>").css("margin-left", "0.5em").on("click", async function() {
              const res = await authenticatedFetch(
                imageURL.pathname + imageURL.search
              );
              const { url } = await res.json();
              window.open(url);
            });
          }
          tr.eadd("<td class=created />").text(
            formatTimestamp(task.creationTimestamp)
          );
          tr.eadd("<td class=num />").etext(`${task.numRecordings}`);
        }
      });
    }
    // Shows the edit taskset dialog
    async startEdit() {
      await new EditTasksetDialog(this).start();
    }
    // Deletes a rule
    async deleteRule(ruleId) {
      const confirm = await ChoiceDialog.choose(
        "Delete this rule?",
        "Delete",
        "Cancel"
      );
      if (confirm !== "Delete") {
        return;
      }
      await Spinner.waitFor(async () => {
        await this.parent.app.data.deleteTaskSetRule(this.taskset.id, ruleId);
      });
    }
    // Fires the task addition RPC
    async addPromptTask(prompt) {
      await Spinner.waitFor(async () => {
        await this.parent.app.data.addTask(
          this.taskset.id,
          "prompt",
          prompt,
          this.lastOrder + 1
        );
      });
    }
    // Creates a response type task and then attaches an image to it
    async addImageTask(prompt, imageData) {
      await Spinner.waitFor(async () => {
        await this.parent.app.data.addTask(
          this.taskset.id,
          "response",
          prompt,
          this.lastOrder + 1,
          imageData
        );
      });
    }
    // Bulk uploads a file of prompts
    async bulkUploadTasks(data) {
      await Spinner.waitFor(async () => {
        await this.parent.app.data.bulkUploadTasks(
          this.taskset.id,
          data,
          this.lastOrder + 1
        );
      });
    }
  };
  var AddPromptTaskDialog = class extends Dialog {
    parent;
    constructor(parent) {
      super("addtaskdialog");
      this.parent = parent;
      this.div.eadd("<label />").text("Prompt:");
      const promptField = this.div.eadd("<input type=text name=prompt />");
      this.div.eadd("<button>Add Prompt</button>").on("click", async (e) => {
        const prompt = promptField.val();
        if (!prompt) {
          toast("Missing required fields");
          return;
        }
        await parent.addPromptTask(prompt);
        await this.remove();
      });
      const cancelButton = this.div.eadd("<button>Cancel</button>");
      cancelButton.on("click", async (e) => await this.remove());
    }
  };
  var AddImageTaskDialog = class extends Dialog {
    parent;
    constructor(parent) {
      super("addimagetaskdialog");
      this.parent = parent;
      this.div.eadd("<div class=title />").text("Add Image Task");
      this.startForm();
      const promptField = this.addFormField(
        "Prompt:",
        "<input type=text name=prompt />"
      );
      const fileField = this.addFormField(
        "Image:",
        "<input type=file name=imagefile />"
      );
      const buttonTd = this.formTable.eadd("<tr />").eadd(
        "<td colspan=2 class=buttonbox />"
      );
      buttonTd.eadd("<button>Upload Image Task</button>").on("click", async (e) => {
        const prompt = promptField.val();
        const files = fileField.prop("files");
        if (!prompt) {
          toast("Missing required fields");
          return;
        }
        if (!files || files.length !== 1 || !this.isJpeg(files[0])) {
          toast("Please choose a JPEG image");
          return;
        }
        await parent.addImageTask(prompt, await files[0].arrayBuffer());
        await this.remove();
      });
      const cancelButton = buttonTd.eadd("<button>Cancel</button>");
      cancelButton.on("click", async (e) => await this.remove());
    }
    isJpeg(file) {
      const filename = file.name.toLowerCase();
      return filename.endsWith(".jpeg") || filename.endsWith(".jpg");
    }
  };
  var AddRuleDialog = class extends Dialog {
    parent;
    orderField;
    tagsField;
    allChoice;
    sampleChoice;
    sampleSize;
    constructor(parent) {
      super("addruledialog");
      this.parent = parent;
      this.div.eadd("<h2 />").etext("Add Enrollment Rule").eadd("<hr />");
      this.startForm();
      this.orderField = this.addFormField(
        "Priority:",
        "<input type=text name=order />"
      );
      this.tagsField = this.addFormField(
        "Tags:",
        "<input type=text name=tags />"
      );
      const choices = this.addFormField(
        "Assignment Action:",
        "<div class=choices />"
      );
      this.allChoice = choices.eadd(
        "<input type=radio class=radio name=action value=all id=allradio />"
      );
      this.allChoice.echecked(true);
      choices.eadd("<label for=allradio />").text("Assign all tasks from this taskset");
      choices.eadd("<br />");
      this.sampleChoice = choices.eadd(
        "<input type=radio class=radio name=action value=sample id=sampleradio />"
      );
      choices.eadd("<label for=sampleradio />").text("Assign a random subset from this taskset");
      this.sampleSize = this.addFormField(
        "Sample size:",
        "<input type=text name=samplesize />"
      );
      this.sampleSize.eenable(false);
      this.sampleChoice.on(
        "change",
        (e) => this.sampleSize.eenable(this.sampleChoice.is(":checked"))
      );
      this.allChoice.on(
        "change",
        (e) => this.sampleSize.eenable(this.sampleChoice.is(":checked"))
      );
      const buttonTd = this.formTable.eadd("<tr />").eadd(
        "<td colspan=2 class=buttonbox />"
      );
      buttonTd.eadd("<button>Create Rule</button>").on("click", async (e) => await this.handleAddRule());
      buttonTd.eadd("<button>Cancel</button>").on("click", async (e) => await this.remove());
    }
    async handleAddRule() {
      const order = Number(this.orderField.val());
      const tags = parseTags(this.tagsField.val());
      const action = this.allChoice.is(":checked") ? "all" : this.sampleChoice.is(":checked") ? "sample" : "";
      const sample = Number(this.sampleSize.val());
      if (!order || !action || isNaN(order) || action === "sample" && isNaN(sample)) {
        toast("Missing required fields");
        return;
      }
      let lastId = 1;
      for (const rule of this.parent.taskset.rules) {
        lastId = Math.max(lastId, rule.id);
        if (rule.order === order) {
          toast("Order already in use");
          return;
        }
      }
      await Spinner.waitFor(async () => {
        await this.parent.parent.app.data.addTaskSetRule(
          this.parent.taskset.id,
          lastId + 1,
          order,
          tags,
          action,
          sample
        );
        await this.remove();
      });
    }
  };
  var BulkTaskDialog = class extends Dialog {
    parent;
    constructor(parent) {
      super("bulktaskdialog");
      this.parent = parent;
      this.div.eadd("<label />").text("Text file of prompts:");
      const fileField = this.div.eadd("<input type=file name=promptsfile />");
      const uploadButton = this.div.eadd("<button>Upload</button>");
      uploadButton.on("click", async (e) => {
        const files = fileField.prop("files");
        if (!files || files.length !== 1) {
          toast("Please choose a file");
          return;
        }
        await parent.bulkUploadTasks(await files[0].arrayBuffer());
        await this.remove();
      });
      this.div.eadd("<button>Cancel</button>").on("click", async (e) => await this.remove());
    }
  };
  var EditTasksetDialog = class extends Dialog {
    parent;
    constructor(parent) {
      super("edittasksetdialog");
      this.parent = parent;
      this.div.eadd("<div class=title />").text(`Edit Taskset: ${parent.taskset.id}`);
      this.startForm();
      const nameField = this.addFormField(
        "Description:",
        "<input type=text name=name />"
      );
      const languageField = this.addFormField(
        "Language:",
        "<input type=text name=language />"
      );
      nameField.val(parent.taskset.name);
      languageField.val(parent.taskset.language);
      const buttonTd = this.formTable.eadd("<tr />").eadd(
        "<td colspan=2 class=buttonbox />"
      );
      buttonTd.eadd("<button>Save</button>").on("click", async (e) => {
        const name = nameField.val();
        const lang = languageField.val();
        if (!name || !lang) {
          toast("Missing required fields");
          return;
        }
        if (!SUPPORTED_LANGUAGES.has(lang)) {
          toast(`Unsupported language: ${lang}`);
          return;
        }
        await Spinner.waitFor(async () => {
          await parent.data.editTaskSetInfo(parent.taskset.id, name, lang);
          await this.remove();
        });
      });
      buttonTd.eadd("<button>Cancel</button>").on("click", async (e) => await this.remove());
    }
  };

  // src/admin/tasksets.ts
  var TaskSetsView = class {
    app;
    div;
    table;
    newButton;
    refreshButton;
    tsdetail;
    constructor(app) {
      this.app = app;
      this.div = app.main.eadd("<div id=tasksetsview />");
      this.div.eadd("<div class=title />").text("TaskSets");
      const buttonBox = this.div.eadd("<div class=buttonbox />");
      this.newButton = buttonBox.eadd("<button>New TaskSet</button>");
      this.newButton.on("click", async (e) => await this.startNewTaskSet());
      this.refreshButton = buttonBox.eadd("<button>Refresh</button>");
      this.refreshButton.on("click", async (e) => await this.app.data.update());
      const scrollbox = this.div.eadd("<div class=scrolltable />");
      this.table = scrollbox.eadd("<table class=tasksets />");
      this.div.hide();
    }
    getNav() {
      if (this.tsdetail) {
        return `/taskset/${this.tsdetail.taskset.id}`;
      } else {
        return "/tasksets";
      }
    }
    // Displays the view
    start() {
      if (this.tsdetail) {
        this.tsdetail.remove();
        this.tsdetail = void 0;
      }
      this.app.setNav("/tasksets");
      this.div.show();
      this.onDataChanged();
    }
    // Cleans up this view
    remove() {
      this.div.remove();
      if (this.tsdetail) {
        this.tsdetail.remove();
        this.tsdetail = void 0;
      }
    }
    // Refills the table with the current list of task sets
    onDataChanged() {
      this.table.html(`<thead><tr><th>ID</th><th>Description</th><th>Language</th>
    <th class=date>Created</th><th>Assigned Users</th><th>Assigned Tasks</th></tr></thead>`);
      const tbody = this.table.eadd("<tbody />");
      for (const [, ts] of this.app.data.tasksets) {
        const tr = tbody.eadd("<tr />");
        tr.eadd("<td class=tsid />").eadd(`<a href="#/taskset/${ts.id}" />`).etext(ts.id);
        tr.eadd("<td class=name />").text(ts.name);
        tr.eadd("<td class=language />").text(ts.language);
        tr.eadd("<td class=date />").text(formatTimestamp(ts.creationTimestamp));
        tr.eadd("<td class=num />").text(ts.numAssignedUsers);
        tr.eadd("<td class=num />").text(ts.numAssignedTasks);
      }
      if (this.tsdetail) {
        this.tsdetail.onDataChanged();
      }
    }
    // Updates task list details
    async onTasksChanged() {
      if (this.tsdetail) {
        await this.tsdetail.onTasksChanged();
      }
    }
    async startNewTaskSet() {
      await new AddTaskSetDialog(this).start();
    }
    async startTaskSetDetail(tsid) {
      const ts = this.app.data.tasksets.get(tsid);
      if (!ts) {
        toast(`Unknown TaskSet: ${tsid}`);
        return;
      }
      this.tsdetail = new TaskSetDetailView(this, ts);
      await this.tsdetail.start();
    }
  };
  var AddTaskSetDialog = class extends Dialog {
    parent;
    constructor(parent) {
      super("addtasksetdialog");
      this.parent = parent;
      this.div.eadd("<div class=title />").text("Add New Taskset");
      this.startForm();
      const idField = this.addFormField("ID:", "<input type=text name=tsid />");
      const nameField = this.addFormField(
        "Description:",
        "<input type=text name=name />"
      );
      const languageField = this.addFormField(
        "Language:",
        '<input type=text name=language value="en-US" />'
      );
      const buttonTd = this.formTable.eadd("<tr />").eadd(
        "<td colspan=2 class=buttonbox />"
      );
      const addButton = buttonTd.eadd("<button>Create Taskset</button>");
      addButton.on("click", async (e) => {
        const idtext = idField.val();
        const name = nameField.val();
        const lang = languageField.val();
        if (!idtext || !name || !lang) {
          toast("Missing required fields");
          return;
        }
        const id = normalizeTag(idtext);
        if (parent.app.data.tasksets.get(id)) {
          toast(`TaskSet with ID already exists: ${id}`);
          return;
        }
        await Spinner.waitFor(async () => {
          await parent.app.data.addTaskSet(id, name, lang);
          await this.remove();
        });
      });
      const cancelButton = buttonTd.eadd("<button>Cancel</button>");
      cancelButton.on("click", async (e) => await this.remove());
    }
  };
  var BulkAssignDialog = class extends Dialog {
    app;
    euids;
    tsChoice;
    allChoice;
    sampleChoice;
    sampleSize;
    tasksChoice;
    tasksTable;
    taskTicks = /* @__PURE__ */ new Map();
    assignLine;
    constructor(app, euids) {
      super("bulkassigndialog");
      this.app = app;
      this.euids = euids;
      this.div.eadd("<div class=title />").text("Assign Tasks");
      this.startForm();
      this.tsChoice = new Dropdown(this.addFormField("Taskset:"), "tschoice");
      for (const [tsid, ts] of this.app.data.tasksets) {
        this.tsChoice.addOption(tsid, `${ts.id}: ${ts.name}`);
      }
      this.tsChoice.onchange(
        async (e) => await this.loadTaskSet(this.tsChoice.getSelected())
      );
      const choicetd1 = this.addFormField("Assign:");
      this.allChoice = choicetd1.eadd(
        "<input type=radio class=radio name=tasks value=all id=allradio />"
      );
      choicetd1.eadd("<label for=allradio />").text("All tasks from this taskset");
      const choicetd2 = this.addFormField("");
      this.sampleChoice = choicetd2.eadd(
        "<input type=radio class=radio name=tasks value=sample id=sampleradio />"
      );
      choicetd2.eadd("<label for=sampleradio />").text("Random sample of: ");
      const choicetd3 = this.addFormField("");
      this.tasksChoice = choicetd3.eadd(
        "<input type=radio class=radio name=tasks value=tasks id=tasksradio />"
      );
      choicetd3.eadd("<label for=tasksradio />").text("Specific tasks:");
      this.sampleSize = choicetd2.eadd("<input type=text name=samplesize />");
      this.sampleSize.eenable(false);
      this.sampleChoice.on("change", (e) => this.updateGUI());
      this.allChoice.on("change", (e) => this.updateGUI());
      this.tasksChoice.on("change", (e) => this.updateGUI());
      this.sampleSize.on("change", (e) => this.updateGUI());
      const choicetd4 = this.addFormField("");
      choicetd4.addClass("taskstablebox");
      this.tasksTable = choicetd4.eadd('<table class="taskstable disabled" />');
      const buttonTd = this.formTable.eadd("<tr />").eadd(
        "<td colspan=2 class=buttonbox />"
      );
      this.assignLine = buttonTd.eadd("<span class=assignline />");
      buttonTd.eadd("<button>Assign</button>").on("click", async (e) => await this.handleAssign());
      buttonTd.eadd("<button>Cancel</button>").on("click", async (e) => await this.remove());
    }
    // Loads the taskset's tasks
    async start() {
      await super.start();
      await this.loadTaskSet(this.tsChoice.getSelected());
    }
    // Updates the disabled state of the choices when the radio buttons change
    updateGUI() {
      this.sampleSize.eenable(this.sampleChoice.is(":checked"));
      this.tasksTable.eclass("disabled", !this.tasksChoice.is(":checked"));
      this.assignLine.text(
        `Assigning ${this.countTasks()} tasks to ${this.euids.length} user(s)...`
      );
    }
    // Returns the number of tasks we're assigning: all or selected or sampled
    countTasks() {
      if (this.tasksChoice.is(":checked")) {
        return this.getTickedTaskIds().length;
      } else if (this.sampleChoice.is(":checked")) {
        const count = Number(`${this.sampleSize.val()}`);
        return isNaN(count) ? 0 : count;
      } else if (this.allChoice.is(":checked")) {
        return this.taskTicks.size;
      } else {
        return 0;
      }
    }
    // Returns a list of task IDs of the selected tasks.
    getTickedTaskIds() {
      const result = [];
      for (const [tick, task] of this.taskTicks) {
        if (tick.is(":checked")) {
          result.push(task.id);
        }
      }
      return result;
    }
    // Called when the user picks a different task set, so we can load its prompts
    async loadTaskSet(tsid) {
      this.allChoice.echecked(true);
      await Spinner.waitFor(async () => {
        this.taskTicks.clear();
        const tasks = await this.app.data.loadTasksetTasks(tsid);
        this.tasksTable.html(`
          <tr><th class=tick><input type=checkbox id=tickalltasks />
          </th><th>Prompt</th><th>Created</th></tr>`);
        for (const task of tasks) {
          const tr = this.tasksTable.eadd("<tr />");
          const tick = tr.eadd("<td class=tick />").eadd("<input type=checkbox class=tick />");
          tr.eadd("<td class=prompt />").text(task.prompt);
          tr.eadd("<td class=created />").text(
            formatTimestamp(task.creationTimestamp)
          );
          this.taskTicks.set(tick, task);
          tick.on("change", (e) => this.updateGUI());
        }
        $("#tickalltasks").on("change", (e) => this.toggleTickAll());
        if (tasks.length === 0) {
          this.tasksTable.html(
            `<tr><td>No tasks in this taskset, nothing to assign</td></tr>`
          );
        }
        this.updateGUI();
      });
    }
    // Auto-selects all or no tasks when the tick-all-tasks box is changed
    toggleTickAll() {
      const checked = $("#tickalltasks").is(":checked");
      for (const [tick] of this.taskTicks) {
        tick.echecked(checked);
      }
      this.updateGUI();
    }
    // Commits the user's assignment choice
    async handleAssign() {
      const tsid = this.tsChoice.getSelected();
      if (!tsid || this.countTasks() < 1 || this.euids.length < 1) {
        toast("Invalid selection");
        return;
      }
      const spec = {
        allTasks: this.allChoice.is(":checked"),
        taskIds: this.tasksChoice.is(":checked") ? this.getTickedTaskIds() : [],
        sample: this.sampleChoice.is(":checked") ? this.countTasks() : 0,
        id: 0,
        order: 0,
        tags: []
      };
      await Spinner.waitFor(async () => {
        const successes = await this.app.data.assignTasks(this.euids, tsid, spec);
        if (successes.length !== this.euids.length) {
          toast(
            "Assignment had some failures, you can retry the remaining users",
            7e3
          );
          for (const euid of successes) {
            findAndRemove(this.euids, euid);
          }
        } else {
          this.remove();
        }
      });
    }
  };

  // src/admin/consentdetail.ts
  var ConsentDetailView = class {
    data;
    parent;
    consent;
    // GUI elements
    div;
    infoDiv;
    versionsTable;
    newVersionButton;
    constructor(parent, consent) {
      this.data = parent.app.data;
      this.parent = parent;
      this.consent = consent;
      this.div = parent.app.main.eadd("<div id=consentdetailview />");
      this.infoDiv = this.div.eadd("<div class=consentinfo />");
      this.div.eadd("<h2 />").etext("Versions");
      this.versionsTable = this.div.eadd("<table class=versions />");
      this.newVersionButton = this.div.eadd(
        "<button class=addversion>Add Version</button>"
      );
      this.newVersionButton.on(
        "click",
        async (e) => await new AddVersionDialog(this).start()
      );
      this.fillInfo();
    }
    // Fills in all data from the consent info struct
    fillInfo() {
      this.infoDiv.empty();
      this.infoDiv.eadd("<h2 />").etext(`Consent: ${this.consent.id}`);
      const table = this.infoDiv.eadd("<table />");
      table.eaddtr([
        $("<span class=label />").etext("Description:"),
        $("<span />").etext(`${this.consent.name}`)
      ]);
      table.eaddtr([
        $("<span class=label />").etext("Language:"),
        $("<span />").etext(`${this.consent.language}`)
      ]);
      table.eaddtr([
        $("<span class=label />").etext("Tags:"),
        $("<span />").etext(`${this.consent.tags.join(" ")}`)
      ]);
      table.eaddtr([
        $("<span class=label />").etext("Created:"),
        $("<span />").etext(`${formatTimestamp(this.consent.creationTimestamp)}`)
      ]);
      table.eaddtr([
        $("<span class=label />").etext("Optional:"),
        $("<span />").etext(`${this.consent.optional ? "yes" : "no"}`)
      ]);
      table.eaddtr([
        $("<span class=label />").etext("Active:"),
        $("<span />").etext(`${this.consent.active ? "yes" : "no"}`)
      ]);
      this.infoDiv.eadd("<button class=edit />").etext("Edit").on("click", async (e) => await this.startEdit());
      this.versionsTable.html(`<tr><th>Version</th><th>Status</th><th>Effective</th>
        <th>Description</th><th>Users</th><th>Created</th><th class=buttoncol></th></tr>`);
      for (const version of this.getVersions()) {
        const versionNumber = version.version;
        const tr = this.versionsTable.eadd("<tr />");
        tr.eadd(`<td class=order />`).etext(`${version.version}`);
        tr.eadd(`<td class=status />`).etext(this.getVersionStatusText(version));
        tr.eadd(`<td class=date />`).etext(
          `${formatTimestamp(version.liveTimestamp)}`
        );
        tr.eadd(`<td class=description />`).etext(version.description);
        tr.eadd(`<td class=num />`).etext(`${version.numUsers}`);
        tr.eadd(`<td class=date />`).etext(
          `${formatTimestamp(version.creationTimestamp)}`
        );
        const buttonTd = tr.eadd("<td />");
        const textURL = toURL("/api/getconsenttext", {
          consentId: this.consent.id,
          version: versionNumber
        });
        buttonTd.eadd("<a target=_blank />").etext("Contents").prop("href", textURL).on("click", (e) => this.downloadContent(e));
        if (version.numUsers === 0) {
          const delbtn = buttonTd.eadd("<button class=delversionbtn />").etext("Delete");
          delbtn.on(
            "click",
            async (e) => await this.deleteVersion(versionNumber)
          );
        }
      }
      this.parent.app.setNav(`/consent/${this.consent.id}`);
    }
    async downloadContent(ev) {
      ev.preventDefault();
      ev.stopPropagation();
      const url = new URL(ev.target.href);
      const res = await authenticatedFetch(url.pathname + url.search);
      const { text } = await res.json();
      const blob = new Blob([text], { type: "text/html" });
      const fileURL = URL.createObjectURL(blob);
      window.open(fileURL);
    }
    getVersions() {
      return sorted(this.consent.versions, (a, b) => b.version - a.version);
    }
    // Returns a human-readable message describing this version's disposition; live, upcoming, or superseded.
    getVersionStatusText(version) {
      if (!this.consent.active) {
        return "inactive";
      }
      const now = Date.now();
      for (const v of this.consent.versions) {
        if (v.liveTimestamp <= now && v.version > version.version) {
          return "superseded";
        }
      }
      return version.liveTimestamp <= now ? "active" : "upcoming";
    }
    // Displays the view
    async start() {
      this.parent.div.hide();
      this.div.show();
    }
    // Cleans up this view
    remove() {
      this.div.remove();
      this.parent.div.show();
    }
    // Update the GUI for any changes to the consent
    onDataChanged() {
      this.consent = this.data.consents.get(this.consent.id);
      this.fillInfo();
    }
    // Shows the edit consent dialog
    async startEdit() {
      await new EditConsentDialog(this).start();
    }
    async deleteVersion(versionNumber) {
      const confirm = await ChoiceDialog.choose(
        "Delete this version?",
        "Delete",
        "Cancel"
      );
      if (confirm !== "Delete") {
        return;
      }
      await this.data.deleteConsentVersion(this.consent.id, versionNumber);
    }
    async addVersion(description, liveTimestamp, html) {
      await this.data.addConsentVersion(
        this.consent.id,
        description,
        liveTimestamp,
        html
      );
    }
  };
  var EditConsentDialog = class extends Dialog {
    parent;
    constructor(parent) {
      super("editconsentdialog");
      this.parent = parent;
      this.div.eadd("<div class=title />").text(`Edit Consent: ${parent.consent.id}`);
      this.startForm();
      const nameField = this.addFormField(
        "Description:",
        "<input type=text name=name />"
      );
      const languageField = this.addFormField(
        "Language:",
        "<input type=text name=language />"
      );
      const tagsField = this.addFormField(
        "Tags:",
        "<input type=text name=tags />"
      );
      const optionalField = this.addFormField(
        "Optional:",
        "<input type=checkbox class=checkbox name=optional />"
      );
      const activeField = this.addFormField(
        "Active:",
        "<input type=checkbox class=checkbox name=active />"
      );
      nameField.val(parent.consent.name);
      languageField.val(parent.consent.language);
      tagsField.val(parent.consent.tags.join(" "));
      optionalField.echecked(parent.consent.optional);
      activeField.echecked(parent.consent.active);
      const buttonTd = this.formTable.eadd("<tr />").eadd(
        "<td colspan=2 class=buttonbox />"
      );
      buttonTd.eadd("<button>Save</button>").on("click", async (e) => {
        const name = nameField.val();
        const lang = languageField.val();
        const tags = parseTags(tagsField.val());
        const isOptional = optionalField.is(":checked");
        const isActive = activeField.is(":checked");
        if (!name || !lang) {
          toast("Missing required fields");
          return;
        }
        if (!SUPPORTED_LANGUAGES.has(lang)) {
          toast(`Unsupported language: ${lang}`);
          return;
        }
        await Spinner.waitFor(async () => {
          await parent.data.editConsentInfo(
            parent.consent.id,
            name,
            lang,
            tags,
            isActive,
            isOptional
          );
          await this.remove();
        });
      });
      buttonTd.eadd("<button>Cancel</button>").on("click", async (e) => await this.remove());
    }
  };
  var AddVersionDialog = class extends Dialog {
    parent;
    constructor(parent) {
      super("addconsentversiondialog");
      this.parent = parent;
      this.div.eadd("<div class=title />").text("Add Version");
      this.startForm();
      const descriptionField = this.addFormField(
        "Description:",
        "<input type=text name=description />"
      );
      const liveField = this.addFormField(
        "Live date:",
        "<input type=text name=live />"
      ).evalue(`${/* @__PURE__ */ new Date()}`);
      const fileField = this.addFormField(
        "HTML:",
        "<input type=file name=consentfile />"
      );
      const buttonTd = this.formTable.eadd("<tr />").eadd(
        "<td colspan=2 class=buttonbox />"
      );
      buttonTd.eadd("<button>Upload Version</button>").on("click", async (e) => {
        const files = fileField.prop("files");
        if (!files || files.length !== 1) {
          toast("Please choose a file");
          return;
        }
        const description = descriptionField.val();
        const live = parseTimestamp(liveField.val());
        if (!description || !live) {
          toast("Missing required fields");
          return;
        }
        await parent.addVersion(description, live, await files[0].arrayBuffer());
        await this.remove();
      });
      const cancelButton = buttonTd.eadd("<button>Cancel</button>");
      cancelButton.on("click", async (e) => await this.remove());
    }
  };

  // src/admin/consents.ts
  var ConsentsView = class {
    app;
    div;
    table;
    newButton;
    refreshButton;
    consentdetail;
    constructor(app) {
      this.app = app;
      this.div = app.main.eadd("<div id=consentsview />");
      this.div.eadd("<div class=title />").text("Consents");
      const buttonBox = this.div.eadd("<div class=buttonbox />");
      this.newButton = buttonBox.eadd("<button>New Consent</button>");
      this.newButton.on("click", async (e) => await this.startNewConsent());
      this.refreshButton = buttonBox.eadd("<button>Refresh</button>");
      this.refreshButton.on("click", async (e) => await this.app.data.update());
      const scrollbox = this.div.eadd("<div class=scrolltable />");
      this.table = scrollbox.eadd("<table class=consents />");
      this.div.hide();
    }
    getNav() {
      if (this.consentdetail) {
        return `/consent/${this.consentdetail.consent.id}`;
      } else {
        return "/consents";
      }
    }
    // Displays the view
    start() {
      if (this.consentdetail) {
        this.consentdetail.remove();
        this.consentdetail = void 0;
      }
      this.app.setNav("/consents");
      this.div.show();
      this.onDataChanged();
    }
    // Cleans up this view
    remove() {
      this.div.remove();
      if (this.consentdetail) {
        this.consentdetail.remove();
        this.consentdetail = void 0;
      }
    }
    // Refills the table with the current list of consents
    onDataChanged() {
      this.table.html(`<thead><tr><th>ID</th><th>Description</th><th>Language</th>
    <th class=date>Created</th><th>Users</th></tr></thead>`);
      const tbody = this.table.eadd("<tbody />");
      for (const [, consent] of this.app.data.consents) {
        const tr = tbody.eadd("<tr />");
        tr.eadd("<td class=consentid />").eadd(`<a href="#/consent/${consent.id}" />`).etext(consent.id);
        tr.eadd("<td class=name />").text(consent.name);
        tr.eadd("<td class=language />").text(consent.language);
        tr.eadd("<td class=date />").text(
          formatTimestamp(consent.creationTimestamp)
        );
        tr.eadd("<td class=num />").text(
          consent.versions.reduce((n, v) => n + v.numUsers, 0)
        );
      }
      if (this.consentdetail) {
        this.consentdetail.onDataChanged();
      }
    }
    async startNewConsent() {
      await new AddConsentDialog(this).start();
    }
    async startConsentDetail(cid) {
      const consent = this.app.data.consents.get(cid);
      if (!consent) {
        toast(`Unknown Consent: ${cid}`);
        return;
      }
      this.consentdetail = new ConsentDetailView(this, consent);
      await this.consentdetail.start();
    }
  };
  var AddConsentDialog = class extends Dialog {
    parent;
    constructor(parent) {
      super("consentdialog");
      this.parent = parent;
      this.div.eadd("<div class=title />").text("Add New Consent");
      this.startForm();
      const idField = this.addFormField(
        "ID:",
        "<input type=text name=consentid />"
      );
      const nameField = this.addFormField(
        "Description:",
        "<input type=text name=name />"
      );
      const languageField = this.addFormField(
        "Language:",
        '<input type=text name=language value="en-US" />'
      );
      const tagsField = this.addFormField(
        "Tags:",
        "<input type=text name=tags />"
      );
      const optionalField = this.addFormField(
        "Optional:",
        "<input type=checkbox name=optional class=checkbox />"
      );
      const buttonTd = this.formTable.eadd("<tr />").eadd(
        "<td colspan=2 class=buttonbox />"
      );
      const addButton = buttonTd.eadd("<button>Create Consent</button>");
      addButton.on("click", async (e) => {
        const idtext = idField.val();
        const name = nameField.val();
        const lang = languageField.val();
        const tags = parseTags(tagsField.val());
        const optional = optionalField.is(":checked");
        if (!idtext || !name || !lang) {
          toast("Missing required fields");
          return;
        }
        const id = normalizeTag(idtext);
        if (parent.app.data.consents.get(id)) {
          toast(`Consent with ID already exists: ${id}`);
          return;
        }
        await Spinner.waitFor(async () => {
          await parent.app.data.addConsent(id, name, lang, tags, optional);
          await this.remove();
        });
      });
      const cancelButton = buttonTd.eadd("<button>Cancel</button>");
      cancelButton.on("click", async (e) => await this.remove());
    }
  };

  // src/admin/userdetail.ts
  var UserDetailView = class {
    data;
    parent;
    user;
    // Loaded detail data
    tasks;
    // set on first load
    recordings;
    // set on first load
    // GUI elements
    div;
    userinfo;
    workTable;
    constructor(parent, user) {
      this.data = parent.app.data;
      this.parent = parent;
      this.user = user;
      this.div = parent.app.main.eadd("<div id=userdetailview />");
      this.userinfo = this.div.eadd("<div class=userinfo />");
      this.div.eadd("<h2 />").etext("Assigned Tasks");
      this.workTable = this.div.eadd("<table class=userwork />");
      this.fillUserInfo();
    }
    // Fills in the user details
    fillUserInfo() {
      this.userinfo.empty();
      const deletedText = this.user.deleted ? " - DELETED" : "";
      this.userinfo.eadd("<div class=euid />").etext(`User ${this.user.euid}${deletedText}`);
      const table = this.userinfo.eadd("<table />");
      table.eaddtr([
        $("<span class=label />").etext("Name:"),
        $("<span />").etext(`${this.getNameInfo()}`)
      ]);
      table.eaddtr([
        $("<span class=label />").etext("Email:"),
        $("<span />").etext(`${this.user.email}`)
      ]);
      table.eaddtr([
        $("<span class=label />").etext("Assistant:"),
        $("<span />").etext(`${this.getHelperInfo()}`)
      ]);
      table.eaddtr([
        $("<span class=label />").etext("Location:"),
        $("<span />").etext(`${this.getLocationInfo()}`)
      ]);
      table.eaddtr([
        $("<span class=label />").etext("Language:"),
        $("<span />").etext(`${this.user.language}`)
      ]);
      table.eaddtr([
        $("<span class=label />").etext("Tags:"),
        $("<span />").etext(`${this.user.tags.join(" ")}`)
      ]);
      table.eaddtr([
        $("<span class=label />").etext("Signed up:"),
        $("<span />").etext(
          `${formatTimestamp(this.user.signupTimestamp, "never")}`
        )
      ]);
      table.eaddtr([
        $("<span class=label />").etext("Last recorded:"),
        $("<span />").etext(
          `${formatTimestamp(this.user.lastRecordingTimestamp)}`
        )
      ]);
      const [, consentNode] = table.eaddtr([
        $("<span class=label />").etext("Consents:"),
        $("<div class=consent />")
      ]);
      if (this.user.consents.length === 0) {
        consentNode.addClass("noconsent");
        consentNode.text(`No consents`);
      }
      for (const consent of this.user.consents) {
        const revoked = consent.revokeTimestamp ? `, revoked ${consent.revokeTimestamp}` : "";
        const cts = formatTimestamp(consent.consentTimestamp);
        const sig = consent.sigText ? consent.sigText : "(unsigned)";
        consentNode.eadd("<div class=consent />").text(
          `${consent.consentId} (${consent.version}): ${cts}${revoked} sig=${sig}`
        );
      }
      table.eaddtr([
        $("<span class=label />").etext("Other info:"),
        $("<span />").etext(`${this.getDemographicsInfo()}`)
      ]);
      table.eaddtr([
        $("<span class=label />").etext("Notes:"),
        $("<span />").etext(`${this.user.notes}`)
      ]);
      const buttons = this.userinfo.eadd("<div class=buttonbox />");
      buttons.eadd("<button />").etext("Edit User").on("click", async (e) => await this.startEdit());
      buttons.eadd("<button />").etext("Assign tasks").on("click", async (e) => await this.startAssign());
      buttons.eadd("<button />").etext("Unassign all remaining tasks").on("click", async (e) => await this.unassignAll());
      buttons.eadd("<button />").etext("Delete user").on("click", async (e) => await this.deleteUser());
      this.parent.app.setNav(`/user/${this.user.euid}`);
    }
    getNameInfo() {
      const fn = this.user.fbname;
      const dn = this.user.name;
      if (fn && dn && fn.trim() !== dn.trim()) {
        return `${dn} (Signed in as ${fn})`;
      } else {
        return dn;
      }
    }
    getHelperInfo() {
      const d = this.user.demographics;
      if (!d || !d.hasHelper) {
        return "Unassisted";
      }
      let result = "";
      if (d.helperName) {
        result += d.helperName + ": ";
      }
      if (d.helperEmail) {
        result += d.helperEmail;
      }
      if (d.helperRelationship) {
        result += ` (${d.helperRelationship})`;
      }
      return result;
    }
    getLocationInfo() {
      const d = this.user.demographics;
      let result = "";
      if (d && d.city) {
        result += d.city + " ";
      }
      if (d && d.state) {
        result += d.state + " ";
      }
      if (d && d.country) {
        result += d.country + " ";
      }
      return result === "" ? "unknown" : result;
    }
    getDemographicsInfo() {
      const d = this.user.demographics;
      let result = "";
      if (d && d.accent) {
        result += `accent=${d.accent}; `;
      }
      if (d && d.referral) {
        result += `referral=${d.referral}; `;
      }
      if (d && d.gender) {
        result += `gender=${d.gender}; `;
      }
      if (d && d.race) {
        result += `race=${d.race}; `;
      }
      if (d && d.accessDevices && d.accessDevices.length > 0) {
        result += `devices=${d.accessDevices.join(", ")}; `;
      }
      if (d && d.otherInfo) {
        result += `info=${d.otherInfo}; `;
      }
      return result;
    }
    // Displays the view
    async start() {
      this.parent.div.hide();
      this.div.show();
      await this.onUserTasksChanged();
    }
    // Cleans up this view
    remove() {
      this.div.remove();
      this.parent.div.show();
    }
    // Update the GUI for any changes to the user
    onDataChanged() {
      const user = this.data.users.get(this.user.euid);
      if (user) {
        this.user = user;
      }
      this.fillUserInfo();
    }
    // Fills in the user's recordings and tasks
    async onUserTasksChanged() {
      await Spinner.waitFor(async () => {
        const recs = /* @__PURE__ */ new Map();
        [this.tasks, this.recordings] = await this.parent.app.data.loadUserWork(
          this.user.euid
        );
        for (const rec of this.recordings) {
          recs.set(rec.timestamp, rec);
        }
        this.workTable.html(
          `<tr><th>Taskset</th><th>Type</th><th>Prompt</th><th>Assigned</th><th>Completed</th><th>Recording</th></tr>`
        );
        for (const task of this.tasks) {
          const rec = recs.get(task.recordedTimestamp);
          const tr = this.workTable.eadd("<tr />");
          tr.eadd("<td class=taskset />").text(task.taskSetId);
          tr.eadd("<td class=tasktype />").text(task.task.taskType);
          const ptd = tr.eadd("<td class=prompt />");
          ptd.eadd("<span class=label />").text(task.task.prompt);
          if (task.task.imageType) {
            const args = {
              taskSetId: task.taskSetId,
              taskId: task.task.id,
              mimeType: task.task.imageType
            };
            const imageURL = toURL("/api/gettaskimage", args);
            ptd.eadd("<button>\u2B07</button>").css("margin-left", "0.5em").on("click", async function() {
              const res = await authenticatedFetch(
                imageURL.pathname + imageURL.search
              );
              const { url } = await res.json();
              window.open(url);
            });
          }
          tr.eadd("<td class=assigned />").text(
            formatTimestamp(task.assignedTimestamp)
          );
          tr.eadd("<td class=completed />").text(
            formatTimestamp(task.recordedTimestamp)
          );
          const playerTd = tr.eadd("<td class=player />");
          if (rec) {
            const url = new URL(
              window.location.origin + `/api/admin/getaudio?euid=${this.user.euid}&name=${rec.name}`
            );
            const player = playerTd.eadd(`<audio type="audio/x-wav" controls preload="none" />`).hide();
            const control = playerTd.eadd("<button>\u25B6</button>");
            player.on("pause", function() {
              control.show();
              player.hide();
            });
            control.on("click", async function() {
              try {
                if (!player.attr("src")) {
                  const res = await authenticatedFetch(url.pathname + url.search);
                  const { url: downloadURL } = await res.json();
                  player.attr("src", downloadURL);
                }
                control.hide();
                player.show();
                const _player = player.get(0);
                _player.play();
              } catch {
                control.attr("disabled", "true");
              }
            });
          }
        }
      });
    }
    // Shows the edit user dialog
    async startEdit() {
      await new EditUserDialog(this).start();
    }
    // Confirms that we should unassign all unrecorded tasks, and then do so
    async unassignAll() {
      const confirm = await ChoiceDialog.choose(
        "Unassigning all unrecorded tasks?",
        "Unassign",
        "Cancel"
      );
      if (confirm !== "Unassign") {
        return;
      }
      const tasks = this.tasks.filter((task) => task.recordedTimestamp === 0);
      if (tasks.length === 0) {
        toast("No unrecorded tasks");
        return;
      }
      await Spinner.waitFor(async () => {
        await this.data.removeTasks(this.user.euid, tasks);
      });
    }
    // Shows the assignment dialog
    async startAssign() {
      await new BulkAssignDialog(this.parent.app, [this.user.euid]).start();
    }
    // Deletes the user and all their recordings, after confirmation
    async deleteUser() {
      const confirm = await ChoiceDialog.choose(
        "Delete user and all recordings? This cannot be undone.",
        "DELETE",
        "Cancel"
      );
      if (confirm !== "DELETE") {
        return;
      }
      await Spinner.waitFor(async () => {
        await this.data.deleteUser(this.user.euid);
      });
      this.parent.start();
    }
  };
  var UserValues = class {
    email = "";
    name = "";
    language = "";
    tags = [];
    notes = "";
  };
  var UserPropertiesDialog = class extends Dialog {
    constructor(defaults, title, button) {
      super("edituserdialog");
      this.div.eadd("<div class=title />").text(title);
      this.startForm();
      const nameField = this.addFormField(
        "Name:",
        "<input type=text name=name />"
      ).evalue(defaults.name);
      const emailField = this.addFormField(
        "Email:",
        "<input type=text name=email />"
      ).evalue(defaults.email);
      const languageField = this.addFormField(
        "Language:",
        "<input type=text name=language />"
      ).evalue(defaults.language);
      const tagsField = this.addFormField(
        "Tags:",
        "<input type=text name=tags />"
      ).evalue(defaults.tags.join(" "));
      const notesField = this.addFormField(
        "Notes:",
        "<textarea name=notes />"
      ).evalue(defaults.notes);
      const buttonTd = this.formTable.eadd("<tr />").eadd(
        "<td colspan=2 class=buttonbox />"
      );
      buttonTd.eadd(`<button>${button}</button>`).on("click", async (e) => {
        const name = nameField.val();
        const email = emailField.val();
        const lang = languageField.val();
        const notes = notesField.val();
        const tags = parseTags(tagsField.val());
        if (!name || !email || !lang) {
          toast("Missing required fields");
          return;
        }
        if (!SUPPORTED_LANGUAGES.has(lang)) {
          toast(`Unsupported language: ${lang}`);
          return;
        }
        await Spinner.waitFor(async () => {
          await this.commit(name, email, lang, tags, notes);
          await this.remove();
        });
      });
      buttonTd.eadd("<button>Cancel</button>").on("click", async (e) => await this.remove());
    }
    async commit(name, email, lang, tags, notes) {
      throw new Error("Not implemented");
    }
  };
  var EditUserDialog = class extends UserPropertiesDialog {
    parent;
    constructor(parent) {
      super(parent.user, `Edit User: ${parent.user.euid}`, "Save");
      this.parent = parent;
    }
    async commit(name, email, lang, tags, notes) {
      await this.parent.data.editUser(
        this.parent.user.euid,
        name,
        email,
        lang,
        tags,
        notes
      );
    }
  };

  // ../common/userfilter.ts
  var UserFilter = class _UserFilter {
    static parse(text) {
      const predicates = [];
      for (let token of _UserFilter.tokenize(text)) {
        let isNegated = false;
        if (token.startsWith("-")) {
          isNegated = true;
          token = token.substring(1);
        }
        const fn = _UserFilter.parseToken(token);
        predicates.push(isNegated ? _UserFilter.notFn(fn) : fn);
      }
      return _UserFilter.andFn(predicates);
    }
    // Returns a predicate function for the given token; does not handle negation or errors.
    static parseToken(token) {
      if (token.startsWith("tag:")) {
        const wantTag = token.substring(4);
        return _UserFilter.tagFn(wantTag);
      } else if (token.startsWith("taglike:")) {
        const wantTag = token.substring(8).toLowerCase();
        return _UserFilter.tagLikeFn(wantTag);
      } else if (token.startsWith("language:")) {
        const lang = token.substring(9).toLowerCase();
        return _UserFilter.languageFn(lang);
      } else if (token.startsWith("lastrecorded:")) {
        const timestamp = _UserFilter.parseDate(
          token.substring("lastrecorded:".length)
        );
        return _UserFilter.lastRecordedFn(timestamp);
      } else if (token.startsWith("created:")) {
        const timestamp = _UserFilter.parseDate(
          token.substring("created:".length)
        );
        return _UserFilter.createdFn(timestamp);
      } else if (token.startsWith("recordings:")) {
        const num = parseInt(token.substring("recordings:".length));
        return _UserFilter.recordingsFn(num);
      } else if (token.startsWith("tasks:")) {
        const num = parseInt(token.substring("tasks:".length));
        return _UserFilter.tasksFn(num);
      } else if (token.startsWith("remainingtasks:")) {
        const num = parseInt(token.substring("remainingtasks:".length));
        return _UserFilter.tasksRemainingFn(num);
      } else {
        return _UserFilter.textMatchFn(token);
      }
    }
    static andFn(fns) {
      return (user) => {
        for (const fn of fns) {
          if (!fn(user)) {
            return false;
          }
        }
        return true;
      };
    }
    static notFn(fn) {
      return (user) => !fn(user);
    }
    // Returns a predicate that matches users with exactly the given tag.
    static tagFn(wantTag) {
      return (user) => {
        for (const tag of user.tags) {
          if (tag == wantTag) {
            return true;
          }
        }
        return false;
      };
    }
    // Returns a predicate that matches users with at least one tag similar to the given tag.
    static tagLikeFn(wantTag) {
      return (user) => {
        for (const tag of user.tags) {
          if (tag.toLowerCase().indexOf(wantTag) != -1) {
            return true;
          }
        }
        return false;
      };
    }
    // Returns a predicate that matches users with the given language.
    static languageFn(lang) {
      lang = lang.toLowerCase();
      return (user) => !!user.language && user.language.toLowerCase().indexOf(lang) != -1;
    }
    // Returns a predicate that matches users who were created on or after the given timestamp.
    static createdFn(timestamp) {
      return (user) => timestamp <= user.createTimestamp;
    }
    // Returns a predicate that matches users who last recorded on or after the given timestamp.
    static lastRecordedFn(timestamp) {
      return (user) => timestamp <= user.lastRecordingTimestamp;
    }
    // Returns a predicate that matches users with at least the given number of recordings.
    static recordingsFn(num) {
      if (isNaN(num)) {
        return (x) => false;
      }
      return (user) => num <= (user.numRecordings ? user.numRecordings : 0);
    }
    // Returns a predicate that matches users with at least the given number of tasks.
    static tasksFn(num) {
      if (isNaN(num)) {
        return (x) => false;
      }
      return (user) => num <= (user.numTasks ? user.numTasks : 0);
    }
    static tasksRemainingFn(num) {
      if (isNaN(num)) {
        return (x) => false;
      }
      return (user) => num <= user.numTasks - user.numCompletedTasks;
    }
    // Returns a predicate that matches arbitrary text within the user record
    static textMatchFn(text) {
      return (user) => JSON.stringify(user).toLowerCase().indexOf(text.toLowerCase()) != -1;
    }
    // Parses a timestamp from the given text like "2022/04/05", or returns NaN if it's invalid.
    static parseDate(text) {
      if (!/^[21][0-9][0-9][0-9]\/[0123][0-9]\/[0-9][0-9]$/.test(text)) {
        return Number.NaN;
      }
      const tzOffsetMs = (/* @__PURE__ */ new Date()).getTimezoneOffset() * 60 * 1e3;
      const parts = text.split("/");
      const timestamp = Date.parse(
        `${parts[0]}-${parts[1]}-${parts[2]}T00:00:00.000Z`
      );
      return timestamp + tzOffsetMs;
    }
    // Yields a sequence of space-separated tokens from the given string.
    // Double quotes with backslash escapes can be used to create tokens with spaces.
    static *tokenize(text) {
      text = text.replace(/\s/g, " ").trim();
      let start = 0;
      let pos = 0;
      let inToken = false;
      let inQuote = false;
      const len = text.length;
      while (start < len) {
        const nextQuote = _UserFilter.nextPos(text, `"`, pos);
        const nextEscape = _UserFilter.nextPos(text, '\\"', pos);
        const nextSpace = _UserFilter.nextPos(text, ` `, pos);
        if (inQuote && nextEscape < nextQuote - 1) {
          pos = nextEscape + 2;
        } else if (inQuote && nextQuote < nextEscape) {
          yield text.substring(start, nextQuote).replace(/\\"/g, `"`);
          start = nextQuote + 1;
          pos = start;
          inToken = false;
          inQuote = false;
        } else if (inToken && nextEscape < nextSpace) {
          pos = nextEscape + 2;
        } else if (inToken) {
          yield text.substring(start, nextSpace).replace(/\\"/g, `"`);
          start = nextSpace + 1;
          pos = start;
          inToken = false;
          inQuote = false;
        } else if (!inToken && nextQuote < nextSpace && nextQuote < nextEscape) {
          inQuote = true;
          inToken = true;
          start = nextQuote + 1;
          pos = start;
        } else if (!inToken && pos == nextSpace) {
          while (pos < len && text[pos] == " ") pos++;
        } else {
          start = pos;
          inToken = true;
        }
      }
    }
    // Like string.indexOf but returns the end position of the string if not found, rather than -1.
    static nextPos(text, substring, pos) {
      const index = text.indexOf(substring, pos);
      return index == -1 ? text.length : index;
    }
  };

  // src/admin/users.ts
  var UsersView = class _UsersView {
    app;
    div;
    table;
    ticks;
    sortSpec = /* @__PURE__ */ new Set(["Last Recorded"]);
    // list of labels to sort by, from least to most significant
    filterFn = (user) => true;
    // predicate that returns false if the given user should be filtered away
    userdetail;
    // Each function sorts a pair of users by a particular property. Date sorts are descending by default.
    static SORT_COMPARATORS = {
      EUID: (a, b) => a.euid.localeCompare(b.euid),
      Name: (a, b) => a.name.localeCompare(b.name),
      Email: (a, b) => a.email.localeCompare(b.email),
      Language: (a, b) => a.language.localeCompare(b.language),
      Tags: (a, b) => JSON.stringify(a.tags).localeCompare(JSON.stringify(b.tags)),
      "Last Recorded": (a, b) => b.lastRecordingTimestamp - a.lastRecordingTimestamp,
      "Num Recordings": (a, b) => a.numRecordings - b.numRecordings,
      "Total Tasks": (a, b) => a.numTasks - b.numTasks,
      "Tasks Completed": (a, b) => a.numCompletedTasks - b.numCompletedTasks,
      "Tasks Remaining": (a, b) => a.numTasks - a.numCompletedTasks - (b.numTasks - b.numCompletedTasks),
      Created: (a, b) => b.createTimestamp - a.createTimestamp,
      "Signed up": (a, b) => b.signupTimestamp - a.signupTimestamp
    };
    constructor(app) {
      this.app = app;
      this.div = app.main.eadd("<div id=userview />");
      this.div.eadd("<div class=title />").text("Users");
      this.ticks = /* @__PURE__ */ new Map();
      const buttonBox = this.div.eadd("<div class=buttonbox />");
      buttonBox.eadd("<button>New User</button>").on("click", async (e) => await this.startNewUser());
      buttonBox.eadd("<button>Assign Tasks</button>").on("click", async (e) => await this.startBulkAssign());
      buttonBox.eadd("<button>Refresh</button>").on("click", async (e) => await this.app.data.update());
      const filterbox = this.div.eadd("<div class=filterbox />");
      filterbox.eadd("<label />").etext("Filter: ");
      const filterbar = filterbox.eadd("<input type=text class=filterbar />");
      const helpbutton = filterbox.eadd("<button>?</button>");
      const scrollbox = this.div.eadd("<div class=scrolltable />");
      this.table = scrollbox.eadd("<table class=users />");
      this.div.hide();
      filterbar.on("input", (e) => this.setFilter(filterbar.val()));
      const helpbox = this.div.eadd("<div class=filterhelp />");
      helpbutton.on("click", (e) => {
        if (helpbox.text()) {
          helpbox.empty();
          helpbox.hide();
        } else {
          helpbox.html(_UsersView.FILTER_HELP_HTML);
          helpbox.show();
        }
      });
      helpbox.hide();
    }
    getNav() {
      if (this.userdetail) {
        return `/user/${this.userdetail.user.euid}`;
      } else {
        return "/users";
      }
    }
    // Displays the view
    start() {
      if (this.userdetail) {
        this.userdetail.remove();
        this.userdetail = void 0;
      }
      this.app.setNav("/users");
      this.div.show();
      this.onDataChanged();
    }
    // Cleans up this view
    remove() {
      this.div.remove();
      if (this.userdetail) {
        this.userdetail.remove();
        this.userdetail = void 0;
      }
    }
    // Refills the table with the current list of users
    onDataChanged() {
      this.drawTable();
      if (this.userdetail) {
        this.userdetail.onDataChanged();
      }
    }
    // Refills the table with the current list of users
    drawTable() {
      const currentSort = lastitem(this.sortSpec);
      this.table.empty();
      const headerRow = this.table.eadd("<thead />").eadd("<tr />");
      headerRow.eadd(
        `<th class=tick><input type=checkbox id=tickallusers /></th>`
      );
      $("#tickallusers").on("change", (e) => this.toggleTickAll());
      const addHeader = (label, css) => {
        const th = headerRow.eadd(`<th />`);
        if (css) {
          th.addClass(css);
        }
        th.text(label);
        th.on("click", (e) => this.setSort(label));
        th.eclass("sorted", currentSort == label || currentSort == `-${label}`);
      };
      addHeader("EUID");
      addHeader("Name");
      addHeader("Email");
      addHeader("Language");
      addHeader("Tags");
      addHeader("Last Recorded", "date");
      addHeader("Num Recordings", "num");
      addHeader("Total Tasks", "num");
      addHeader("Tasks Completed", "num");
      addHeader("Tasks Remaining", "num");
      addHeader("Created", "date");
      addHeader("Signed up", "date");
      const tbody = this.table.eadd("<tbody />");
      this.ticks.clear();
      for (const user of this.toSorted(this.app.data.users)) {
        if (!this.filterFn(user) || user.deleted) {
          continue;
        }
        const euid = user.euid;
        const tr = tbody.eadd("<tr />");
        this.ticks.set(
          euid,
          tr.eadd("<td class=tick />").eadd("<input type=checkbox />")
        );
        tr.eadd("<td class=euid />").eadd(`<a href="#/user/${euid}" />`).etext(euid);
        tr.eadd("<td class=name />").text(user.name);
        tr.eadd("<td class=email />").text(user.email);
        tr.eadd("<td class=language />").text(user.language);
        tr.eadd("<td class=tags />").text(user.tags.join(" "));
        tr.eadd("<td class=date />").text(
          formatTimestamp(user.lastRecordingTimestamp)
        );
        tr.eadd("<td class=num />").text(user.numRecordings);
        tr.eadd("<td class=num />").text(user.numTasks);
        tr.eadd("<td class=num />").text(user.numCompletedTasks);
        tr.eadd("<td class=num />").text(user.numTasks - user.numCompletedTasks);
        tr.eadd("<td class=date />").text(formatTimestamp(user.createTimestamp));
        tr.eadd("<td class=date />").text(
          formatTimestamp(user.signupTimestamp, "Never")
        );
      }
    }
    // Filters the user list with the given text.
    setFilter(filterSpec) {
      if (!filterSpec || filterSpec.trim() == "") {
        this.filterFn = (x) => true;
      } else {
        this.filterFn = UserFilter.parse(filterSpec);
      }
      this.drawTable();
    }
    // Changes the sort order of the users table; if the current sort is already this one, it is reversed.
    setSort(sortByHeader) {
      const reverseOf = `-${sortByHeader}`;
      const lastSort = lastitem(this.sortSpec);
      this.sortSpec.delete(sortByHeader);
      this.sortSpec.delete(reverseOf);
      if (lastSort == sortByHeader) {
        this.sortSpec.add(reverseOf);
      } else {
        this.sortSpec.add(sortByHeader);
      }
      this.drawTable();
    }
    // Returns a sorted version of the given array of users.
    toSorted(users) {
      const result = [...users.values()];
      for (let label of this.sortSpec) {
        result.sort(_UsersView.getComparator(label));
      }
      return result;
    }
    // Returns the comparator for the given label, optionally reversed
    static getComparator(label) {
      if (label.startsWith("-")) {
        const comparator = _UsersView.SORT_COMPARATORS[label.substring(1)];
        return (a, b) => comparator(b, a);
      } else {
        return _UsersView.SORT_COMPARATORS[label];
      }
    }
    static FILTER_HELP_HTML = `
      <h1>Filter help</h1>
      You can type search terms such as "test" into the filter bar, and only
      users with that text somewhere in their record will show up.
      You can also specify more structured criteria such as signup date, number of recordings, and more.
      Here are some examples:

      <h1>Tags</h1>

      <ul>
        <li><b>tag:qcd</b> will match only users with the exact tag "qcd"</li>
        <li><b>tag:qcd tag:done</b> will match only users with <em>both</em> the exact tags "qcd" and "done"</li>
        <li><b>taglike:qc</b> will match users with tags such as "qc", "qcd", "qc_more"</li>
        <li><b>-tag:qcd</b> will match all users <em>except</em> those with the "qcd" tag</li>
      </ul>
      </ul>

      <h1>Counters</h1>
      <ul>
        <li><b>recordings:10</b> will match users that have recorded 10 or more tasks</li>
        <li><b>-recordings:10</b> will match users that have recorded 9 or fewer tasks</li>
        <li><b>recordings:100 -recordings:200</b> will match users that have recorded between 100-199 tasks</li>
        <li><b>tasks:100</b> will match users with at least 100 assigned tasks</li>
        <li><b>-tasks:1 language:en</b> will match english users who have no assigned tasks</li>
        <li><b>tasks:100</b> will match users with at least 100 assigned tasks</li>
        <li><b>remainingtasks:10</b> will match users with at least 10 tasks left to do</li>
        <li><b>-remainingtasks:10</b> will match users with less than 10 tasks left to do</li>
      </ul>

      <h1>Date ranges</h1>
      <ul>
        <li><b>created:2023/03/17</b> will match users who were enrolled <em>after</em> March 17th, 2023</li>
        <li><b>-created:2023/03/17</b> will match users who were enrolled <em>before</em> March 3rd, 2023</li>
        <li><b>created:2023/01/01 -created:2023/02/01</b> will match users who were enrolled in the month of January 2023</li>
        <li><b>lastrecorded:2023/04/01</b> will match users who recorded a task after March 2023</li>
      </ul>

      <h1>Other criteria</h1>
        <li><b>bob smith</b> will match users that have the words "bob" and "smith" somewhere in their user record</li>
        <li><b>"bob smith"</b> will match users that have the phrase "bob smith" somewhere in their user record</li>
        <li><b>language:en</b> will match users with languages like "en-US" and "en-GB"</li>
      <ul>
`;
    // Updates assignment and completion details for one user, if visible
    async onUserTasksChanged() {
      if (this.userdetail) {
        await this.userdetail.onUserTasksChanged();
      }
    }
    // Auto-selects all or no users when the tick-all-users box is changed
    toggleTickAll() {
      const checked = $("#tickallusers").is(":checked");
      for (const [, input] of this.ticks) {
        input.echecked(checked);
      }
    }
    // Shows the add user dialog
    async startNewUser() {
      const defaults = new UserValues();
      defaults.language = "en-US";
      await new AddUserDialog(this, defaults).start();
    }
    // Shows the bulk assign dialog
    async startBulkAssign() {
      const euids = [];
      for (const [euid, input] of this.ticks) {
        if (input.is(":checked")) {
          euids.push(euid);
        }
      }
      if (euids.length === 0) {
        toast("No users selected");
        return;
      }
      await new BulkAssignDialog(this.app, euids).start();
    }
    async startUserDetail(euid) {
      const user = this.app.data.users.get(euid);
      if (!user) {
        toast(`No such user: ${euid}`);
        return;
      }
      this.userdetail = new UserDetailView(this, user);
      await this.userdetail.start();
    }
  };
  var AddUserDialog = class extends UserPropertiesDialog {
    parent;
    constructor(parent, defaults) {
      super(defaults, "Add User", "Add User");
      this.parent = parent;
    }
    async commit(name, email, lang, tags, notes) {
      await this.parent.app.data.addUser(name, email, lang, tags, notes);
    }
  };

  // src/admin/admindata.ts
  var AdminData = class {
    listener;
    // We cache these big lists so we don't have to re-fetch them.
    users = /* @__PURE__ */ new Map();
    // by EUID
    tasksets = /* @__PURE__ */ new Map();
    // by TSID
    consents = /* @__PURE__ */ new Map();
    // by ConsentId
    constructor(listener) {
      this.listener = listener;
    }
    // Returns the user with the given email, if any
    findUserByEmail(email) {
      for (const user of this.users.values()) {
        if (user.email === email) {
          return user;
        }
      }
      return void 0;
    }
    // Reloads the main lists of users and task sets
    async update() {
      await this.run(["users", "tasksets", "consents"], async () => {
        for (const user of await (await authenticatedFetch("/api/admin/listusers")).json()) {
          this.users.set(user.euid, user);
        }
        for (const ts of await (await authenticatedFetch("/api/admin/listtasksets")).json()) {
          this.tasksets.set(ts.id, ts);
        }
        for (const c of await (await authenticatedFetch("/api/admin/listconsents")).json()) {
          this.consents.set(c.id, c);
        }
      });
    }
    // Accesses the server, shows the user a spinner, and toasts on errors.
    async run(changes = ["data"], fn) {
      return await Spinner.waitFor(async () => {
        let result;
        try {
          result = await fn();
        } catch (e) {
          console.log(e);
          errorToast(`${e}`);
          result = void 0;
        }
        if (changes.indexOf("users") !== -1 || changes.indexOf("tasksets") !== -1 || changes.indexOf("consents") !== -1) {
          await this.listener.onDataChanged();
        }
        if (changes.indexOf("tasks") !== -1) {
          await this.listener.onTasksChanged();
        }
        if (changes.indexOf("usertasks") !== -1) {
          await this.listener.onUserTasksChanged();
        }
        return result;
      });
    }
    // Creates a user and updates the app with it
    async addUser(name, email, language, tags, notes) {
      await this.run(["users", "tasksets"], async () => {
        const existingUser = this.findUserByEmail(email);
        if (existingUser) {
          throw new Error(
            `Email already enrolled: ${email} is ${existingUser.euid}`
          );
        }
        const info = {
          email,
          name,
          language,
          tags,
          notes,
          signupTimestamp: 0
        };
        const [user, taskSets] = await postAsJson(
          "/api/admin/newuser",
          info
        );
        this.users.set(user.euid, user);
        for (const ts of taskSets) {
          this.tasksets.set(ts.id, ts);
        }
      });
    }
    // Edits an existing user
    async editUser(euid, name, email, language, tags, notes) {
      await this.run(["users"], async () => {
        const info = { euid, email, name, language, tags, notes };
        const [user] = await postAsJson("/api/admin/edituser", info);
        this.users.set(user.euid, user);
      });
    }
    // Deletes an existing user
    async deleteUser(euid) {
      await this.run(["users"], async () => {
        const info = { euid };
        const [user] = await postAsJson("/api/admin/deleteuser", info);
        this.users.set(user.euid, user);
      });
    }
    // Assigns a selection of tasks to a list of users, returning which euids were successful.
    async assignTasks(euids, taskSetId, spec) {
      const rv = await this.run(["users", "usertasks", "tasksets"], async () => {
        const result = [];
        for (const euid of euids) {
          const [user, ts] = await postAsJson("/api/admin/assigntasks", {
            taskSetId,
            euid,
            spec
          });
          this.users.set(user.euid, user);
          this.tasksets.set(ts.id, ts);
          result.push(euid);
        }
        return result;
      });
      return rv ? rv : [];
    }
    // Deletes tasks from a user
    async removeTasks(euid, tasks) {
      const idTuples = tasks.map((task) => [task.taskSetId, task.id]);
      await this.run(["users", "usertasks", "tasksets"], async () => {
        const [user, tslist] = await postAsJson("/api/admin/removetasks", {
          euid,
          idTuples
        });
        this.users.set(user.euid, user);
        for (const ts of tslist) {
          this.tasksets.set(ts.id, ts);
        }
      });
    }
    // Creates a task set and updates the app with it
    async addTaskSet(id, name, language) {
      console.log("Adding task set", id, name, language);
      await this.run(["tasksets"], async () => {
        const [ts] = await postAsJson("/api/admin/newtaskset", {
          id,
          name,
          language
        });
        this.tasksets.set(ts.id, ts);
      });
    }
    // Adds an enrollment rule to a task set
    async addTaskSetRule(taskSetId, id, order, tags, action, sample) {
      const rule = {
        id,
        order,
        tags,
        allTasks: action === "all",
        taskIds: [],
        sample: action === "sample" ? sample : 0
      };
      await this.editTaskSet({
        taskSetId,
        delrules: [],
        addrules: [rule]
      });
    }
    // Removes an enrollment rule from a task set
    async deleteTaskSetRule(taskSetId, ruleId) {
      await this.editTaskSet({
        taskSetId,
        delrules: [ruleId],
        addrules: []
      });
    }
    // Changes a task set's name and language
    async editTaskSetInfo(taskSetId, name, language) {
      await this.editTaskSet({
        taskSetId,
        name,
        language,
        delrules: [],
        addrules: []
      });
    }
    // Changes a task set and updates it in the database
    async editTaskSet(info) {
      await this.run(["tasksets"], async () => {
        const [ts] = await postAsJson("/api/admin/edittaskset", info);
        this.tasksets.set(ts.id, ts);
      });
    }
    // Adds one task to a task set, with optional image
    async addTask(taskSetId, taskType, prompt, order, imageData) {
      await this.run(["tasksets", "tasks"], async () => {
        const newTasks = await postAsJson("/api/admin/newtask", {
          taskSetId,
          prompt,
          order,
          taskType
        });
        if (newTasks.length > 0 && imageData) {
          const args = { taskSetId, taskId: newTasks[0].id };
          await authenticatedFetch(
            "/api/admin/uploadtaskimage",
            args,
            "post",
            imageData
          );
        }
      });
    }
    // Adds tasks from an uploaded CSV file to a task set
    async bulkUploadTasks(taskSetId, data, orderStart) {
      await this.run(["tasksets", "tasks"], async () => {
        const format = "txt";
        await authenticatedFetch(
          "/api/admin/bulkaddtasks",
          { taskSetId, format, orderStart },
          "post",
          data
        );
      });
    }
    // Fetches the full task list for a taskset.
    async loadTasksetTasks(taskSetId) {
      const rv = await this.run(["tasksets"], async () => {
        const rsp = await authenticatedFetch("/api/admin/listtasks", {
          taskSetId
        });
        const [taskset, tasks] = await rsp.json();
        if (!taskset || !tasks) {
          throw new Error("Unexpected empty result from task fetch");
        }
        this.tasksets.set(taskset.id, taskset);
        return tasks;
      });
      return rv ? rv : [];
    }
    // Gets the detailed list of user tasks and recordings.
    async loadUserWork(euid) {
      const rv = await this.run(["users"], async () => {
        const rsp = await authenticatedFetch("/api/admin/listuserwork", { euid });
        const [user, tasks, recordings] = await rsp.json();
        if (!user || !tasks || !recordings) {
          throw new Error("Unexpected empty result from user fetch");
        }
        this.users.set(user.euid, user);
        const result = [
          tasks,
          recordings
        ];
        return result;
      });
      return rv ? rv : [[], []];
    }
    // Creates a consent and updates the app with it
    async addConsent(id, name, language, tags, optional) {
      await this.run(["consents"], async () => {
        const [consent] = await postAsJson("/api/admin/newconsent", {
          id,
          name,
          language,
          tags,
          optional
        });
        this.consents.set(consent.id, consent);
      });
    }
    // Changes a consent's metadata
    async editConsentInfo(id, name, language, tags, active, optional) {
      await this.run(["consents"], async () => {
        const [consent] = await postAsJson("/api/admin/editconsent", {
          id,
          name,
          language,
          tags,
          active,
          optional
        });
        this.consents.set(consent.id, consent);
      });
    }
    // Uploads a new consent document
    async addConsentVersion(id, description, liveTimestamp, html) {
      await this.run(["consents"], async () => {
        const args = { id, description, liveTimestamp };
        const rsp = await authenticatedFetch(
          "/api/admin/uploadconsentversion",
          args,
          "post",
          html
        );
        const [consent] = await rsp.json();
        this.consents.set(consent.id, consent);
      });
    }
    async deleteConsentVersion(id, version) {
      await this.run(["consents"], async () => {
        const [consent] = await postAsJson("/api/admin/deleteconsentversion", {
          id,
          version
        });
        this.consents.set(consent.id, consent);
      });
    }
  };

  // src/admin/admin.ts
  var AdminView = class {
    // System data
    data;
    // Child views
    users;
    tasksets;
    consents;
    // DOM elements
    main;
    login;
    appDiv;
    navbar;
    usersButton;
    tasksetsButton;
    consentsButton;
    constructor() {
      this.data = new AdminData(this);
      this.main = $("#main");
      this.login = this.buildLogin();
      this.appDiv = this.main.eadd("<div id=adminapp />");
      this.navbar = this.appDiv.eadd("<div class=navbar />");
      this.usersButton = this.navbar.eadd('<a href="#/users">Users</a>');
      this.tasksetsButton = this.navbar.eadd('<a href="#/tasksets">TaskSets</a>');
      this.consentsButton = this.navbar.eadd('<a href="#/consents">Consents</a>');
      this.appDiv.hide();
      $(window).on(
        "hashchange",
        async (e) => await this.navigateTo(this.parseHash())
      );
    }
    // Loads all data into the GUI and go to the desired deep link
    async start() {
      await Spinner.waitFor(async () => {
        await this.data.update();
        await this.navigateTo(this.parseHash());
      });
    }
    // Returns the current view
    getNav() {
      if (this.tasksets) {
        return this.tasksets.getNav();
      } else if (this.users) {
        return this.users.getNav();
      } else if (this.consents) {
        return this.consents.getNav();
      } else {
        return "";
      }
    }
    // Sets the navigation URL
    setNav(path) {
      window.location.hash = `#${path}`;
    }
    // Returns the navigation path from the current browser navbar, or a default otherwise.
    parseHash() {
      const hash = window.location.hash;
      if (!hash || !hash.startsWith("#")) {
        return "/users";
      } else {
        return decodeURIComponent(hash.substring(1));
      }
    }
    // Navigates to the given resource, or to the user view if not specified.
    async navigateTo(path) {
      if (path === this.getNav()) {
        return;
      }
      if (path === "/users") {
        this.startUserView();
      } else if (path === "/tasksets") {
        this.startTaskSetsView();
      } else if (path == "/consents") {
        this.startConsentsView();
      } else if (path.startsWith("/user/")) {
        this.startUserView();
        await this.users.startUserDetail(path.substring("/user/".length));
      } else if (path.startsWith("/taskset/")) {
        this.startTaskSetsView();
        await this.tasksets.startTaskSetDetail(
          path.substring("/taskset/".length)
        );
      } else if (path.startsWith("/consent/")) {
        this.startConsentsView();
        await this.consents.startConsentDetail(
          path.substring("/consent/".length)
        );
      }
    }
    buildLogin() {
      const div = this.main.eadd("<div class=login />");
      div.hide();
      const btn = div.eadd("<button>Login</button>");
      div.eadd("<div class=loginmessage>Not logged in, try reloading.</div>");
      btn.on("click", async (e) => {
        await firebase.auth().signInWithPopup(new firebase.auth.GoogleAuthProvider());
      });
      firebase.auth().onAuthStateChanged(async (user) => {
        div.eshow(user == null);
        this.appDiv.eshow(user != null);
        if (user != null) {
          await this.start();
        }
      });
      return div;
    }
    // Called when user and taskset tables are finished loading
    async onDataChanged() {
      if (this.tasksets) {
        this.tasksets.onDataChanged();
      }
      if (this.users) {
        this.users.onDataChanged();
      }
      if (this.consents) {
        this.consents.onDataChanged();
      }
    }
    // Called when one or more taskset's task lists have changed
    async onTasksChanged() {
      if (this.tasksets) {
        await this.tasksets.onTasksChanged();
      }
    }
    // Called when one or more user's work lists have changed
    async onUserTasksChanged() {
      if (this.users) {
        await this.users.onUserTasksChanged();
      }
    }
    startUserView() {
      if (this.tasksets != null) {
        this.tasksets.remove();
        this.tasksets = void 0;
      }
      if (this.consents != null) {
        this.consents.remove();
        this.consents = void 0;
      }
      if (this.users == null) {
        this.users = new UsersView(this);
      }
      this.tasksetsButton.eenable(this.tasksets == null);
      this.usersButton.eenable(this.users == null);
      this.consentsButton.eenable(this.consents == null);
      this.users.start();
    }
    startTaskSetsView() {
      if (this.users != null) {
        this.users.remove();
        this.users = void 0;
      }
      if (this.consents != null) {
        this.consents.remove();
        this.consents = void 0;
      }
      if (this.tasksets == null) {
        this.tasksets = new TaskSetsView(this);
      }
      this.tasksetsButton.eenable(this.tasksets == null);
      this.usersButton.eenable(this.users == null);
      this.consentsButton.eenable(this.consents == null);
      this.tasksets.start();
    }
    startConsentsView() {
      if (this.users != null) {
        this.users.remove();
        this.users = void 0;
      }
      if (this.tasksets != null) {
        this.tasksets.remove();
        this.tasksets = void 0;
      }
      if (this.consents == null) {
        this.consents = new ConsentsView(this);
      }
      this.tasksetsButton.eenable(this.tasksets == null);
      this.usersButton.eenable(this.users == null);
      this.consentsButton.eenable(this.consents == null);
      this.consents.start();
    }
  };

  // src/admin/index.ts
  document.addEventListener("DOMContentLoaded", function() {
    window.__audiotool_app = new AdminView();
  });
})();
//# sourceMappingURL=data:application/json;base64,
